C51 COMPILER V9.60.7.0   INIT_DEVICE                                                       01/04/2025 19:16:53 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE INIT_DEVICE
OBJECT MODULE PLACED IN .\Objects\init_device.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE init_device.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\init_device.lst) TABS(2) OBJECT(.\Objects\init_device.obj)

line level    source

*** WARNING C500 IN LINE 1 OF init_device.c: LICENSE ERROR (R207(3): REGISTRY READ ERROR)

   1          /*
   2           * @Author: 王心瀚
   3           * @Date: 2023-11-23 19:42:31
   4           * @LastEditors: 王心瀚
   5           * @LastEditTime: 2023-12-22 22:52:41
   6           * @FilePath: \undefinedc:\Users\u2021\Desktop\资料\大三\单片机\实验\提高实验\C语言版本\init_device.c
   7           * @Description: 初始化设备文件，包含初始化设备相关函数
   8           * 
   9           * Copyright (c) 2023 by ${王心瀚}, All Rights Reserved. 
  10           */
  11          // 包含C8051F020芯片的头文件
  12          #include "C8051F020.h"
  13          // 包含LCD12864液晶显示屏的头文件
  14          #include "LCD12864.h"
  15          // 包含显示的头文件
  16          #include "display.h"
  17          //包含标准库的头文件
  18          #include <stdlib.h> 
  19          // 定义定时器初始化的函数，由Init_Device函数调用
  20          void Timer_Init()
  21          {
  22   1          // 设置时钟控制寄存器，使定时器0使用系统时钟
  23   1          CKCON     = 0x08;
  24   1          // 设置定时器控制寄存器，使定时器0工作在模式1
  25   1          TCON      = 0x10;
  26   1          // 设置定时器模式寄存器，使定时器0工作在16位计数模式
  27   1          TMOD      = 0x01;
  28   1          // 设置定时器0的低8位为0x30
  29   1          TL0       = 0x30;
  30   1          // 设置定时器0的高8位为0xF8
  31   1          TH0       = 0xF8;
  32   1      }
  33          
  34          
  35          // 定义端口输入输出初始化的函数，由Init_Device函数调用
  36          void Port_IO_Init()
  37          {
  38   1          // P0.0  -  未分配,  推挽输出,  数字信号
  39   1          // P0.1  -  未分配,  推挽输出,  数字信号
  40   1          // P0.2  -  未分配,  推挽输出,  数字信号
  41   1          // P0.3  -  未分配,  推挽输出,  数字信号
  42   1          // P0.4  -  未分配,  推挽输出,  数字信号
  43   1          // P0.5  -  未分配,  推挽输出,  数字信号
  44   1          // P0.6  -  未分配,  推挽输出,  数字信号
  45   1          // P0.7  -  未分配,  推挽输出,  数字信号
  46   1      
  47   1          // P1.0  -  未分配,  漏开输出,  数字信号
  48   1          // P1.1  -  未分配,  漏开输出,  数字信号
  49   1          // P1.2  -  未分配,  漏开输出,  数字信号
  50   1          // P1.3  -  未分配,  漏开输出,  数字信号
  51   1          // P1.4  -  未分配,  漏开输出,  数字信号
  52   1          // P1.5  -  未分配,  漏开输出,  数字信号
  53   1          // P1.6  -  未分配,  漏开输出,  数字信号
C51 COMPILER V9.60.7.0   INIT_DEVICE                                                       01/04/2025 19:16:53 PAGE 2   

  54   1          // P1.7  -  未分配,  漏开输出,  数字信号
  55   1      
  56   1          // P2.0  -  未分配,  漏开输出,  数字信号
  57   1          // P2.1  -  未分配,  漏开输出,  数字信号
  58   1          // P2.2  -  未分配,  漏开输出,  数字信号
  59   1          // P2.3  -  未分配,  漏开输出,  数字信号
  60   1          // P2.4  -  未分配,  漏开输出,  数字信号
  61   1          // P2.5  -  未分配,  推挽输出,  数字信号
  62   1          // P2.6  -  未分配,  推挽输出,  数字信号
  63   1          // P2.7  -  未分配,  推挽输出,  数字信号
  64   1      
  65   1          // P3.0  -  未分配,  漏开输出,  数字信号
  66   1          // P3.1  -  未分配,  漏开输出,  数字信号
  67   1          // P3.2  -  未分配,  漏开输出,  数字信号
  68   1          // P3.3  -  未分配,  漏开输出,  数字信号
  69   1          // P3.4  -  未分配,  漏开输出,  数字信号
  70   1          // P3.5  -  未分配,  漏开输出,  数字信号
  71   1          // P3.6  -  未分配,  漏开输出,  数字信号
  72   1          // P3.7  -  未分配,  漏开输出,  数字信号
  73   1      
  74   1          // 设置P0和P2的输出模式为推挽输出
  75   1          P0MDOUT   = 0xFF;
  76   1          P2MDOUT   = 0xE0;
  77   1          // 使能交叉开关
  78   1          XBR2      = 0x40;
  79   1      }
  80          
  81          
  82          // 定义中断初始化的函数，由Init_Device函数调用
  83          void Interrupts_Init()
  84          {
  85   1          // 设置中断控制寄存器，使能全局中断和定时器0中断
  86   1          IE        = 0x82;
  87   1          // 设置中断优先级寄存器，使定时器0中断为高优先级
  88   1          IP        = 0x02;
  89   1      }
  90          
  91          // 定义设备初始化的函数，由主函数调用
  92          void Init_Device(void)
  93          {
  94   1          // 调用定时器初始化的函数
  95   1          Timer_Init();
  96   1          // 调用端口输入输出初始化的函数
  97   1          Port_IO_Init();
  98   1          // 调用中断初始化的函数
  99   1          Interrupts_Init();
 100   1          // 设置随机数种子为10
 101   1          srand(10);
 102   1          // 调用液晶显示屏初始化的函数
 103   1          lcd_init();
 104   1          // 调用显示启动画面的函数
 105   1          display_startup_logo();
 106   1          // 延时1000毫秒
 107   1          delay_ms(1000);
 108   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     66    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   INIT_DEVICE                                                       01/04/2025 19:16:53 PAGE 3   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
