A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\keyboard.OBJ
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE .\Objects\keyboard.src PR(.\Listings\keyboard.ls1) EP DEBUG

LOC  OBJ            LINE     SOURCE

                       1     ; .\Objects\keyboard.SRC generated from: C”Ô—‘∞Ê±æ\keyboard.c
                       2     ; COMPILER INVOKED BY:
                       3     ;        C:\Keil_v5\C51\BIN\C51.EXE C”Ô—‘∞Ê±æ\keyboard.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJ
                             ECTEXTEND PRINT(.\Listings\keyboard.lst) TABS(2) SRC(.\Objects\keyboard.SRC)
                       4     
                       5     $nomod51 
                       6     
                       7     NAME    KEYBOARD
                       8     
  00DA                 9     CCF2    BIT     0D8H.2
  009B                10     TB80    BIT     098H.3
  009D                11     SPI0CKR DATA    09DH
  00DB                12     CCF3    BIT     0D8H.3
  0080                13     P0      DATA    080H
  00F8                14     SPIEN   BIT     0F8H.0
  00DC                15     CCF4    BIT     0D8H.4
  009F                16     SM00    BIT     098H.7
  0090                17     P1      DATA    090H
  00C2                18     AA      BIT     0C0H.2
  009E                19     SM10    BIT     098H.6
  00FF                20     WDTCN   DATA    0FFH
  00A0                21     P2      DATA    0A0H
  009D                22     SM20    BIT     098H.5
  00BC                23     ADC0CF  DATA    0BCH
  00B0                24     P3      DATA    0B0H
  00D6                25     AC      BIT     0D0H.6
  00AB                26     ADC1CF  DATA    0ABH
  0084                27     P4      DATA    084H
  00E6                28     EIE1    DATA    0E6H
  0085                29     P5      DATA    085H
  00AF                30     EA      BIT     0A8H.7
  00E7                31     EIE2    DATA    0E7H
  0086                32     P6      DATA    086H
  0096                33     P7      DATA    096H
  008F                34     PSCTL   DATA    08FH
  00F9                35     MSTEN   BIT     0F8H.1
  00DF                36     CF      BIT     0D8H.7
  00E8                37     ADC0CN  DATA    0E8H
  00D4                38     DAC0CN  DATA    0D4H
  00D7                39     DAC1CN  DATA    0D7H
  00AA                40     ADC1CN  DATA    0AAH
  00A4                41     P0MDOUT DATA    0A4H
  00A5                42     P1MDOUT DATA    0A5H
  00A8                43     IE      DATA    0A8H
  00A6                44     P2MDOUT DATA    0A6H
  00A7                45     P3MDOUT DATA    0A7H
  0093                46     TMR3RLH DATA    093H
  00F6                47     EIP1    DATA    0F6H
  00F7                48     EIP2    DATA    0F7H
  00FA                49     PCA0CPH0        DATA    0FAH
  00FB                50     PCA0CPH1        DATA    0FBH
  00AD                51     P3IF    DATA    0ADH
  0092                52     TMR3RLL DATA    092H
  00FC                53     PCA0CPH2        DATA    0FCH
  00DE                54     CR      BIT     0D8H.6
  00FD                55     PCA0CPH3        DATA    0FDH
  00CE                56     EXF2    BIT     0C8H.6
  009C                57     REN0    BIT     098H.4
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE     2

  00FE                58     PCA0CPH4        DATA    0FEH
  00EA                59     PCA0CPL0        DATA    0EAH
  00A3                60     EMI0CF  DATA    0A3H
  00EB                61     PCA0CPL1        DATA    0EBH
  00DA                62     PCA0CPM0        DATA    0DAH
  00D9                63     PCA0MD  DATA    0D9H
  00D8                64     PCA0CN  DATA    0D8H
  00EC                65     PCA0CPL2        DATA    0ECH
  00DB                66     PCA0CPM1        DATA    0DBH
  00ED                67     PCA0CPL3        DATA    0EDH
  00DC                68     PCA0CPM2        DATA    0DCH
  00B8                69     IP      DATA    0B8H
  00EE                70     PCA0CPL4        DATA    0EEH
  00DD                71     PCA0CPM3        DATA    0DDH
  00DE                72     PCA0CPM4        DATA    0DEH
  00FB                73     TXBSY   BIT     0F8H.3
  00D7                74     CY      BIT     0D0H.7
  00C3                75     SI      BIT     0C0H.3
  00E1                76     XBR0    DATA    0E1H
  00B9                77     SADEN0  DATA    0B9H
  00E2                78     XBR1    DATA    0E2H
  00AF                79     EMI0CN  DATA    0AFH
  00AE                80     SADEN1  DATA    0AEH
  00E3                81     XBR2    DATA    0E3H
  00D1                82     REF0CN  DATA    0D1H
  00A9                83     SADDR0  DATA    0A9H
  00F3                84     SADDR1  DATA    0F3H
  00BA                85     AMX0CF  DATA    0BAH
  00ED                86     AD0INT  BIT     0E8H.5
  00CB                87     RCAP2H  DATA    0CBH
  00BC                88     PS      BIT     0B8H.4
  0081                89     SP      DATA    081H
  00E5                90     RCAP4H  DATA    0E5H
  00A1                91     EMI0TC  DATA    0A1H
  00D2                92     OV      BIT     0D0H.2
  00C0                93     SMB0CN  DATA    0C0H
  00CA                94     RCAP2L  DATA    0CAH
  00FD                95     MODF    BIT     0F8H.5
  00E4                96     RCAP4L  DATA    0E4H
  00CF                97     SMB0CR  DATA    0CFH
  009E                98     CPT0CN  DATA    09EH
  00BD                99     P1MDIN  DATA    0BDH
  009F               100     CPT1CN  DATA    09FH
  00F8               101     SPI0CN  DATA    0F8H
  0087               102     PCON    DATA    087H
  00FF               103     SPIF    BIT     0F8H.7
  00B5               104     P74OUT  DATA    0B5H
  0089               105     TMOD    DATA    089H
  0088               106     TCON    DATA    088H
  00FE               107     WCOL    BIT     0F8H.6
  00BB               108     AMX0SL  DATA    0BBH
  00AC               109     AMX1SL  DATA    0ACH
  0091               110     TMR3CN  DATA    091H
  0089               111     IE0     BIT     088H.1
  008B               112     IE1     BIT     088H.3
  00F0               113     B       DATA    0F0H
  00D3               114     DAC0H   DATA    0D3H
  00BF               115     ADC0H   DATA    0BFH
  00B2               116     OSCICN  DATA    0B2H
  00D6               117     DAC1H   DATA    0D6H
  00C1               118     SMBFTE  BIT     0C0H.1
  00C7               119     BUSY    BIT     0C0H.7
  00D2               120     DAC0L   DATA    0D2H
  00BE               121     ADC0L   DATA    0BEH
  00D5               122     DAC1L   DATA    0D5H
  00A7               123     LCD_EN  BIT     0A0H.7
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE     3

  00E0               124     ACC     DATA    0E0H
  00AC               125     ES0     BIT     0A8H.4
  00EF               126     AD0EN   BIT     0E8H.7
  00C9               127     CT2     BIT     0C8H.1
  00A9               128     ET0     BIT     0A8H.1
  00AB               129     ET1     BIT     0A8H.3
  008D               130     TF0     BIT     088H.5
  00AD               131     ET2     BIT     0A8H.5
  0098               132     RI0     BIT     098H.0
  008F               133     TF1     BIT     088H.7
  00CF               134     TF2     BIT     0C8H.7
  00C0               135     SMBTOE  BIT     0C0H.0
  008C               136     TH0     DATA    08CH
  00A8               137     EX0     BIT     0A8H.0
  0099               138     TI0     BIT     098H.1
  0088               139     IT0     BIT     088H.0
  00F9               140     PCA0H   DATA    0F9H
  008D               141     TH1     DATA    08DH
  00AA               142     EX1     BIT     0A8H.2
  008A               143     IT1     BIT     088H.2
  00CD               144     TH2     DATA    0CDH
  00D0               145     P       BIT     0D0H.0
  00F5               146     TH4     DATA    0F5H
  00B1               147     OSCXCN  DATA    0B1H
  008A               148     TL0     DATA    08AH
  00E9               149     PCA0L   DATA    0E9H
  008B               150     TL1     DATA    08BH
  00CC               151     TL2     DATA    0CCH
  00B9               152     PT0     BIT     0B8H.1
  00F4               153     TL4     DATA    0F4H
  00D3               154     RS0     BIT     0D0H.3
  00BB               155     PT1     BIT     0B8H.3
  00D4               156     RS1     BIT     0D0H.4
  00BD               157     PT2     BIT     0B8H.5
  008C               158     TR0     BIT     088H.4
  00EE               159     AD0TM   BIT     0E8H.6
  008E               160     TR1     BIT     088H.6
  00CA               161     TR2     BIT     0C8H.2
  00B8               162     PX0     BIT     0B8H.0
  00A5               163     LCD_RS  BIT     0A0H.5
  00BA               164     PX1     BIT     0B8H.2
  00FA               165     SLVSEL  BIT     0F8H.2
  0083               166     DPH     DATA    083H
  00A6               167     LCD_RW  BIT     0A0H.6
  00CD               168     RCLK0   BIT     0C8H.5
  00C5               169     ADC0GTH DATA    0C5H
  00CC               170     TCLK0   BIT     0C8H.4
  0082               171     DPL     DATA    082H
  00C4               172     ADC0GTL DATA    0C4H
  0099               173     SBUF0   DATA    099H
  00F2               174     SBUF1   DATA    0F2H
  00C7               175     ADC0LTH DATA    0C7H
  00CB               176     EXEN2   BIT     0C8H.3
  00EF               177     RSTSRC  DATA    0EFH
  00B7               178     FLACL   DATA    0B7H
  00C8               179     CPRL2   BIT     0C8H.0
  0098               180     SCON0   DATA    098H
  00F1               181     SCON1   DATA    0F1H
  00C6               182     ADC0LTL DATA    0C6H
  00C8               183     T2CON   DATA    0C8H
  00C5               184     STA     BIT     0C0H.5
  00C9               185     T4CON   DATA    0C9H
  00C3               186     SMB0ADR DATA    0C3H
  00C2               187     SMB0DAT DATA    0C2H
  009A               188     SPI0CFG DATA    09AH
  0095               189     TMR3H   DATA    095H
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE     4

  008E               190     CKCON   DATA    08EH
  00FC               191     RXOVRN  BIT     0F8H.4
  0080               192     D0      BIT     080H.0
  0094               193     TMR3L   DATA    094H
  0081               194     D1      BIT     080H.1
  00E8               195     AD0LJST BIT     0E8H.0
  0082               196     D2      BIT     080H.2
  00D5               197     F0      BIT     0D0H.5
  00B6               198     FLSCL   DATA    0B6H
  0083               199     D3      BIT     080H.3
  00EA               200     AD0CM0  BIT     0E8H.2
  00D1               201     F1      BIT     0D0H.1
  00C4               202     STO     BIT     0C0H.4
  00C6               203     ENSMB   BIT     0C0H.6
  0084               204     D4      BIT     080H.4
  00EB               205     AD0CM1  BIT     0E8H.3
  009B               206     SPI0DAT DATA    09BH
  0085               207     D5      BIT     080H.5
  0086               208     D6      BIT     080H.6
  00E9               209     AD0WINT BIT     0E8H.1
  009C               210     ADC1    DATA    09CH
  0087               211     D7      BIT     080H.7
  00EC               212     AD0BUSY BIT     0E8H.4
  00D0               213     PSW     DATA    0D0H
  00D8               214     CCF0    BIT     0D8H.0
  009A               215     RB80    BIT     098H.2
  00C1               216     SMB0STA DATA    0C1H
  00D9               217     CCF1    BIT     0D8H.1
                     218     ?PR?kscan?KEYBOARD   SEGMENT CODE 
                     219     ?DT?kscan?KEYBOARD   SEGMENT DATA OVERLAYABLE 
                     220     ?PR?f_or_e?KEYBOARD  SEGMENT CODE 
                     221     ?PR?input_digits?KEYBOARD                SEGMENT CODE 
                     222     ?DT?input_digits?KEYBOARD                SEGMENT DATA OVERLAYABLE 
                     223     ?BI?input_digits?KEYBOARD                SEGMENT BIT OVERLAYABLE 
                     224     ?PR?input_bits?KEYBOARD                  SEGMENT CODE 
                     225     ?DT?input_bits?KEYBOARD                  SEGMENT DATA OVERLAYABLE 
                     226     ?BI?input_bits?KEYBOARD                  SEGMENT BIT OVERLAYABLE 
                     227     ?PR?input_display_time?KEYBOARD          SEGMENT CODE 
                     228     ?DT?input_display_time?KEYBOARD          SEGMENT DATA OVERLAYABLE 
                     229     ?BI?input_display_time?KEYBOARD          SEGMENT BIT OVERLAYABLE 
                     230     ?PR?wait_input?KEYBOARD                  SEGMENT CODE 
                     231     ?BI?wait_input?KEYBOARD                  SEGMENT BIT OVERLAYABLE 
                     232     ?PR?wrong_input_bits?KEYBOARD            SEGMENT CODE 
                     233     ?PR?wrong_display_time?KEYBOARD          SEGMENT CODE 
                     234     ?C_INITSEG           SEGMENT CODE 
                     235     ?CO?KEYBOARD         SEGMENT CODE 
                     236     ?XD?KEYBOARD         SEGMENT XDATA 
                     237             EXTRN   CODE (digits)
                     238             EXTRN   CODE (clear)
                     239             EXTRN   DATA (display_time)
                     240             EXTRN   CODE (display_wrong_input_display_time)
                     241             EXTRN   CODE (_print_char)
                     242             EXTRN   DATA (bits)
                     243             EXTRN   CODE (display_wrong_input_bits)
                     244             EXTRN   CODE (_delay_ms)
                     245             EXTRN   CODE (?C?CCASE)
                     246             EXTRN   CODE (?C?COPY)
                     247             EXTRN   CODE (?C?LMUL)
                     248             EXTRN   CODE (?C?ULCMP)
                     249             PUBLIC  inputs
                     250             PUBLIC  wrong_display_time
                     251             PUBLIC  wrong_input_bits
                     252             PUBLIC  wait_input
                     253             PUBLIC  input_display_time
                     254             PUBLIC  input_bits
                     255             PUBLIC  input_digits
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE     5

                     256             PUBLIC  f_or_e
                     257             PUBLIC  kscan
                     258     
----                 259             RSEG  ?DT?kscan?KEYBOARD
0000                 260     ?kscan?BYTE:
0000                 261            keyl?041:   DS   1
0001                 262             ORG  1
0001                 263            temp?043:   DS   1
                     264     
----                 265             RSEG  ?DT?input_digits?KEYBOARD
0000                 266     ?input_digits?BYTE:
0000                 267               i?245:   DS   1
0001                 268             ORG  1
0001                 269           digit?246:   DS   1
                     270     
----                 271             RSEG  ?BI?input_digits?KEYBOARD
0000                 272     ?input_digits?BIT:
0000                 273           state?247:   DBIT   1
                     274     
----                 275             RSEG  ?DT?input_display_time?KEYBOARD
0000                 276     ?input_display_time?BYTE:
0000                 277               i?452:   DS   1
0001                 278             ORG  1
0001                 279               j?453:   DS   1
0002                 280             ORG  2
0002                 281           digit?454:   DS   1
0003                 282             ORG  3
0003                 283               a?455:   DS   5
0008                 284             ORG  8
0008                 285            temp?456:   DS   4
                     286     
----                 287             RSEG  ?BI?input_display_time?KEYBOARD
0000                 288     ?input_display_time?BIT:
0000                 289           state?457:   DBIT   1
                     290     
----                 291             RSEG  ?DT?input_bits?KEYBOARD
0000                 292     ?input_bits?BYTE:
0000                 293               i?348:   DS   1
0001                 294             ORG  1
0001                 295           digit?349:   DS   1
0002                 296             ORG  2
0002                 297               a?350:   DS   2
                     298     
----                 299             RSEG  ?BI?input_bits?KEYBOARD
0000                 300     ?input_bits?BIT:
0000                 301           state?351:   DBIT   1
                     302     
----                 303             RSEG  ?BI?wait_input?KEYBOARD
0000                 304     ?wait_input?BIT:
0000                 305           state?558:   DBIT   1
                     306     
----                 307             RSEG  ?XD?KEYBOARD
0000                 308              inputs:   DS   64
                     309     
----                 310             RSEG  ?CO?KEYBOARD
0000                 311     _?ix1000:
0000 00              312             DB      000H
0001 00              313             DB  000H
                     314     
                     315     
0002                 316     _?ix1001:
0002 00              317             DB      000H
0003 00000000        318             DB  000H,000H,000H,000H
                     319     
                     320     
                     321     
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE     6

----                 322             RSEG  ?C_INITSEG
0000 60              323             DB      060H
0001 40              324             DB      040H
0002 0000     F      325             DW      inputs
0004 00              326             DB      000H
0005 00000000        327             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
0009 00000000                
000D 0000                    
000F 00000000        328             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
0013 00000000                
0017 0000                    
0019 00000000        329             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
001D 00000000                
0021 0000                    
0023 00000000        330             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
0027 00000000                
002B 0000                    
002D 00000000        331             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
0031 00000000                
0035 0000                    
0037 00000000        332             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
003B 00000000                
003F 0000                    
0041 000000          333             DB  000H,000H,000H
                     334     
                     335     
                     336     ; //∞¸∫¨º¸≈Ãœ‡πÿµƒÕ∑Œƒº˛
                     337     ; #include "keyboard.h"
                     338     ; //∂®“Â“ª∏ˆ≥§∂»Œ™64µƒŒﬁ∑˚∫≈◊÷∑˚ ◊È£¨”√”⁄¥Ê¥¢ ‰»Îµƒ ◊÷
                     339     ; unsigned char xdata inputs[64]={0};
                     340     ; //∂®“Â“ª∏ˆ∫Ø £¨”√”⁄…®√Ëº¸≈Ã∞¥º¸£¨≤¢∑µªÿ∞¥º¸∂‘”¶µƒ÷µ
                     341     ; unsigned char kscan(void)
                     342     
----                 343             RSEG  ?PR?kscan?KEYBOARD
0000                 344     kscan:
                     345             USING   0
                     346                             ; SOURCE LINE # 6
                     347     ; {
                     348                             ; SOURCE LINE # 7
                     349     ;       //∂®“ÂÀƒ∏ˆŒﬁ∑˚∫≈◊÷∑˚±‰¡ø£¨”√”⁄¥Ê¥¢∞¥º¸µƒ∏ﬂµÕŒª°¢∞¥º¸¿‡–Õ∫Õ¡Ÿ ±÷µ
                     350     ;       unsigned char data keyh,keyl,keytp,temp;
                     351     ;       //…Ë÷√P1∂Àø⁄µƒ∏ﬂÀƒŒªŒ™Õ∆ÕÏ ‰≥ˆƒ£ Ω
                     352     ;       P1MDOUT=0xF0;
                     353                             ; SOURCE LINE # 11
0000 75A5F0          354             MOV     P1MDOUT,#0F0H
                     355     ;       //…Ë÷√P1∂Àø⁄µƒµÕÀƒŒªŒ™∏ﬂµÁ∆Ω£¨◊ˆ ‰»Î
                     356     ;       P1=0X0F; 
                     357                             ; SOURCE LINE # 13
0003 75900F          358             MOV     P1,#0FH
0006                 359     ?C0001:
                     360     ;       //Œﬁœﬁ—≠ª∑£¨÷±µΩºÏ≤‚µΩ∞¥º¸
                     361     ;       while(1)
                     362                             ; SOURCE LINE # 15
                     363     ;       {
                     364                             ; SOURCE LINE # 16
                     365     ;       //»Áπ˚P1∂Àø⁄µƒµÕÀƒŒª≤ª»´Œ™∏ﬂµÁ∆Ω£¨Àµ√˜”–∞¥º¸∞¥œ¬
                     366     ;       if(P1!=0X0F)
                     367                             ; SOURCE LINE # 18
0006 E590            368             MOV     A,P1
0008 640F            369             XRL     A,#0FH
000A 60FA            370             JZ      ?C0001
                     371     ;       {       
                     372                             ; SOURCE LINE # 19
                     373     ;               //—” ±10∫¡√Î£¨œ˚≥∂∂∂Ø
                     374     ;               delay_ms(10);
                     375                             ; SOURCE LINE # 21
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE     7

000C 7F0A            376             MOV     R7,#0AH
000E 7E00            377             MOV     R6,#00H
0010 7D00            378             MOV     R5,#00H
0012 7C00            379             MOV     R4,#00H
0014 120000   F      380             LCALL   _delay_ms
                     381     ;               //‘Ÿ¥ŒºÏ≤‚P1∂Àø⁄µƒµÕÀƒŒª£¨»Áπ˚»‘»ª≤ª»´Œ™∏ﬂµÁ∆Ω£¨Àµ√˜∞¥º¸”––ß
                     382     ;               if(P1!=0x0f)
                     383                             ; SOURCE LINE # 23
0017 E590            384             MOV     A,P1
0019 640F            385             XRL     A,#0FH
001B 60E9            386             JZ      ?C0001
                     387     ;               {
                     388                             ; SOURCE LINE # 24
                     389     ;                       //Ω´P1∂Àø⁄µƒµÕÀƒŒª∏≥÷µ∏¯keyl£¨◊˜Œ™∞¥º¸µƒµÕŒª
                     390     ;                       keyl=P1;
                     391                             ; SOURCE LINE # 26
001D 859000   F      392             MOV     keyl?041,P1
                     393     ;                       //Ã¯≥ˆ—≠ª∑
                     394     ;                       break;
                     395                             ; SOURCE LINE # 28
                     396     ;               }
                     397                             ; SOURCE LINE # 29
                     398     ;       }
                     399                             ; SOURCE LINE # 30
                     400     ;       }
                     401                             ; SOURCE LINE # 31
                     402     ;               //…Ë÷√P1∂Àø⁄µƒµÕÀƒŒªŒ™ ‰≥ˆƒ£ Ω
                     403     ;               P1MDOUT=0x0F;
                     404                             ; SOURCE LINE # 33
0020 75A50F          405             MOV     P1MDOUT,#0FH
                     406     ;               //…Ë÷√P1∂Àø⁄µƒ∏ﬂÀƒŒªŒ™∏ﬂµÁ∆Ω£¨◊ˆ ‰»Î
                     407     ;               P1=0xf0;
                     408                             ; SOURCE LINE # 35
0023 7590F0          409             MOV     P1,#0F0H
                     410     ;               //—” ±10∫¡√Î£¨œ˚≥∂∂∂Ø
                     411     ;               delay_ms(10);
                     412                             ; SOURCE LINE # 37
0026 7F0A            413             MOV     R7,#0AH
0028 7E00            414             MOV     R6,#00H
002A 7D00            415             MOV     R5,#00H
002C 7C00            416             MOV     R4,#00H
002E 120000   F      417             LCALL   _delay_ms
                     418     ;               //Ω´P1∂Àø⁄µƒ∏ﬂÀƒŒª∏≥÷µ∏¯keyh£¨◊˜Œ™∞¥º¸µƒ∏ﬂŒª
                     419     ;               keyh=P1;
                     420                             ; SOURCE LINE # 39
                     421     ;---- Variable 'keyh?040' assigned to Register 'R7' ----
0031 AF90            422             MOV     R7,P1
                     423     ;               //Ω´∞¥º¸µƒ∏ﬂµÕŒªΩ¯––ªÚ‘ÀÀ„£¨µ√µΩ∞¥º¸¿‡–Õ
                     424     ;               keytp=keyh|keyl;
                     425                             ; SOURCE LINE # 41
0033 E500     F      426             MOV     A,keyl?041
0035 4F              427             ORL     A,R7
                     428     ;---- Variable 'keytp?042' assigned to Register 'R7' ----
                     429     ;               //∏˘æ›∞¥º¸¿‡–Õ£¨”√switch”Ôæ‰≈–∂œ∞¥º¸∂‘”¶µƒ÷µ
                     430     ;               switch(keytp)
                     431                             ; SOURCE LINE # 43
0036 120000   F      432             LCALL   ?C?CCASE
0039 0000     F      433             DW      ?C0009
003B 77              434             DB      077H
003C 0000     F      435             DW      ?C0013
003E 7B              436             DB      07BH
003F 0000     F      437             DW      ?C0017
0041 7D              438             DB      07DH
0042 0000     F      439             DW      ?C0021
0044 7E              440             DB      07EH
0045 0000     F      441             DW      ?C0008
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE     8

0047 B7              442             DB      0B7H
0048 0000     F      443             DW      ?C0012
004A BB              444             DB      0BBH
004B 0000     F      445             DW      ?C0016
004D BD              446             DB      0BDH
004E 0000     F      447             DW      ?C0020
0050 BE              448             DB      0BEH
0051 0000     F      449             DW      ?C0007
0053 D7              450             DB      0D7H
0054 0000     F      451             DW      ?C0011
0056 DB              452             DB      0DBH
0057 0000     F      453             DW      ?C0015
0059 DD              454             DB      0DDH
005A 0000     F      455             DW      ?C0019
005C DE              456             DB      0DEH
005D 0000     F      457             DW      ?C0006
005F E7              458             DB      0E7H
0060 0000     F      459             DW      ?C0010
0062 EB              460             DB      0EBH
0063 0000     F      461             DW      ?C0014
0065 ED              462             DB      0EDH
0066 0000     F      463             DW      ?C0018
0068 EE              464             DB      0EEH
0069 0000            465             DW      00H
006B 0000     F      466             DW      ?C0005
                     467     ;               {
                     468                             ; SOURCE LINE # 44
                     469     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0xe7£¨∂‘”¶µƒ÷µŒ™0
                     470     ;                       case 0xe7: temp=0;break;
                     471                             ; SOURCE LINE # 46
006D                 472     ?C0006:
006D E4              473             CLR     A
006E F500     F      474             MOV     temp?043,A
0070 8049            475             SJMP    ?C0005
                     476     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0xd7£¨∂‘”¶µƒ÷µŒ™1
                     477     ;                       case 0xd7: temp=1;break;
                     478                             ; SOURCE LINE # 48
0072                 479     ?C0007:
0072 750001   F      480             MOV     temp?043,#01H
0075 8044            481             SJMP    ?C0005
                     482     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0xb7£¨∂‘”¶µƒ÷µŒ™2
                     483     ;                       case 0xb7: temp=2;break;
                     484                             ; SOURCE LINE # 50
0077                 485     ?C0008:
0077 750002   F      486             MOV     temp?043,#02H
007A 803F            487             SJMP    ?C0005
                     488     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0x77£¨∂‘”¶µƒ÷µŒ™3
                     489     ;                       case 0x77: temp=3;break;
                     490                             ; SOURCE LINE # 52
007C                 491     ?C0009:
007C 750003   F      492             MOV     temp?043,#03H
007F 803A            493             SJMP    ?C0005
                     494     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0xeb£¨∂‘”¶µƒ÷µŒ™4
                     495     ;                       case 0xeb: temp=4;break;
                     496                             ; SOURCE LINE # 54
0081                 497     ?C0010:
0081 750004   F      498             MOV     temp?043,#04H
0084 8035            499             SJMP    ?C0005
                     500     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0xdb£¨∂‘”¶µƒ÷µŒ™5
                     501     ;                       case 0xdb: temp=5;break;
                     502                             ; SOURCE LINE # 56
0086                 503     ?C0011:
0086 750005   F      504             MOV     temp?043,#05H
0089 8030            505             SJMP    ?C0005
                     506     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0xbb£¨∂‘”¶µƒ÷µŒ™6
                     507     ;                       case 0xbb: temp=6;break;
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE     9

                     508                             ; SOURCE LINE # 58
008B                 509     ?C0012:
008B 750006   F      510             MOV     temp?043,#06H
008E 802B            511             SJMP    ?C0005
                     512     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0x7b£¨∂‘”¶µƒ÷µŒ™7
                     513     ;                       case 0x7b: temp=7;break;
                     514                             ; SOURCE LINE # 60
0090                 515     ?C0013:
0090 750007   F      516             MOV     temp?043,#07H
0093 8026            517             SJMP    ?C0005
                     518     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0xed£¨∂‘”¶µƒ÷µŒ™8
                     519     ;                       case 0xed: temp=8;break;
                     520                             ; SOURCE LINE # 62
0095                 521     ?C0014:
0095 750008   F      522             MOV     temp?043,#08H
0098 8021            523             SJMP    ?C0005
                     524     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0xdd£¨∂‘”¶µƒ÷µŒ™9
                     525     ;                       case 0xdd: temp=9;break;
                     526                             ; SOURCE LINE # 64
009A                 527     ?C0015:
009A 750009   F      528             MOV     temp?043,#09H
009D 801C            529             SJMP    ?C0005
                     530     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0xbd£¨∂‘”¶µƒ÷µŒ™10
                     531     ;                       case 0xbd: temp=10;break;
                     532                             ; SOURCE LINE # 66
009F                 533     ?C0016:
009F 75000A   F      534             MOV     temp?043,#0AH
00A2 8017            535             SJMP    ?C0005
                     536     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0x7d£¨∂‘”¶µƒ÷µŒ™11
                     537     ;                       case 0x7d: temp=11;break;
                     538                             ; SOURCE LINE # 68
00A4                 539     ?C0017:
00A4 75000B   F      540             MOV     temp?043,#0BH
00A7 8012            541             SJMP    ?C0005
                     542     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0xee£¨∂‘”¶µƒ÷µŒ™12
                     543     ;                       case 0xee: temp=12;break;
                     544                             ; SOURCE LINE # 70
00A9                 545     ?C0018:
00A9 75000C   F      546             MOV     temp?043,#0CH
00AC 800D            547             SJMP    ?C0005
                     548     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0xde£¨∂‘”¶µƒ÷µŒ™13
                     549     ;                 case 0xde: temp=13;break;
                     550                             ; SOURCE LINE # 72
00AE                 551     ?C0019:
00AE 75000D   F      552             MOV     temp?043,#0DH
00B1 8008            553             SJMP    ?C0005
                     554     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0xbe£¨∂‘”¶µƒ÷µŒ™14
                     555     ;                       case 0xbe: temp=14;break;
                     556                             ; SOURCE LINE # 74
00B3                 557     ?C0020:
00B3 75000E   F      558             MOV     temp?043,#0EH
00B6 8003            559             SJMP    ?C0005
                     560     ;                       //»Áπ˚∞¥º¸¿‡–ÕŒ™0x7e£¨∂‘”¶µƒ÷µŒ™15
                     561     ;                       case 0x7e: temp=15;break;
                     562                             ; SOURCE LINE # 76
00B8                 563     ?C0021:
00B8 75000F   F      564             MOV     temp?043,#0FH
                     565     ;                       //»Áπ˚∞¥º¸¿‡–Õ≤ª‘⁄“‘…œ∑∂Œßƒ⁄£¨≤ª◊ˆ»Œ∫Œ≤Ÿ◊˜
                     566     ;                       default:break;
                     567                             ; SOURCE LINE # 78
                     568     ;               }
                     569                             ; SOURCE LINE # 79
00BB                 570     ?C0005:
                     571     ;       //…Ë÷√P1∂Àø⁄µƒ∏ﬂÀƒŒªŒ™ ‰≥ˆƒ£ Ω
                     572     ;       P1MDOUT=0xF0;
                     573                             ; SOURCE LINE # 81
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    10

00BB 75A5F0          574             MOV     P1MDOUT,#0F0H
                     575     ;       //…Ë÷√P1∂Àø⁄µƒµÕÀƒŒªŒ™∏ﬂµÁ∆Ω£¨◊ˆ ‰»Î
                     576     ;       P1=0X0F; 
                     577                             ; SOURCE LINE # 83
00BE 75900F          578             MOV     P1,#0FH
00C1                 579     ?C0023:
                     580     ;       //Œﬁœﬁ—≠ª∑£¨÷±µΩºÏ≤‚µΩ∞¥º¸À…ø™
                     581     ;       while(1)
                     582                             ; SOURCE LINE # 85
                     583     ;       {
                     584                             ; SOURCE LINE # 86
                     585     ;       //»Áπ˚P1∂Àø⁄µƒµÕÀƒŒª»´Œ™∏ﬂµÁ∆Ω£¨Àµ√˜∞¥º¸À…ø™
                     586     ;       if(P1==0X0F)
                     587                             ; SOURCE LINE # 88
00C1 E590            588             MOV     A,P1
00C3 B40FFB          589             CJNE    A,#0FH,?C0023
                     590     ;       {       
                     591                             ; SOURCE LINE # 89
                     592     ;               //—” ±10∫¡√Î£¨œ˚≥∂∂∂Ø
                     593     ;               delay_ms(10);
                     594                             ; SOURCE LINE # 91
00C6 7F0A            595             MOV     R7,#0AH
00C8 7E00            596             MOV     R6,#00H
00CA 7D00            597             MOV     R5,#00H
00CC 7C00            598             MOV     R4,#00H
00CE 120000   F      599             LCALL   _delay_ms
                     600     ;              
                     601     ;               //‘Ÿ¥ŒºÏ≤‚P1∂Àø⁄µƒµÕÀƒŒª£¨»Áπ˚»‘»ª»´Œ™∏ﬂµÁ∆Ω£¨Àµ√˜∞¥º¸À…ø™”––ß
                     602     ;               if(P1==0x0f)
                     603                             ; SOURCE LINE # 94
00D1 E590            604             MOV     A,P1
00D3 B40FEB          605             CJNE    A,#0FH,?C0023
                     606     ;               {
                     607                             ; SOURCE LINE # 95
                     608     ;                       //Ã¯≥ˆ—≠ª∑
                     609     ;                       break;
                     610                             ; SOURCE LINE # 97
                     611     ;               }
                     612                             ; SOURCE LINE # 98
                     613     ;       }
                     614                             ; SOURCE LINE # 99
                     615     ;       }
                     616                             ; SOURCE LINE # 100
00D6                 617     ?C0024:
                     618     ;       //∑µªÿ∞¥º¸∂‘”¶µƒ÷µ
                     619     ;       return temp;
                     620                             ; SOURCE LINE # 102
00D6 AF00     F      621             MOV     R7,temp?043
                     622     ; }
                     623                             ; SOURCE LINE # 103
00D8 22              624             RET     
                     625     ; END OF kscan
                     626     
                     627     ; //∂®“Â“ª∏ˆ∫Ø £¨”√”⁄≈–∂œ ‰»Î «Fªπ «E
                     628     ; bit f_or_e(void)
                     629     
----                 630             RSEG  ?PR?f_or_e?KEYBOARD
0000                 631     f_or_e:
                     632             USING   0
                     633                             ; SOURCE LINE # 105
                     634     ; {
                     635                             ; SOURCE LINE # 106
0000                 636     ?C0028:
                     637     ;       //∂®“Â“ª∏ˆŒﬁ∑˚∫≈◊÷∑˚±‰¡ø£¨”√”⁄¥Ê¥¢∞¥º¸∂‘”¶µƒ÷µ
                     638     ;       unsigned temp;
                     639     ;       //Œﬁœﬁ—≠ª∑£¨÷±µΩºÏ≤‚µΩ”––ß∞¥º¸
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    11

                     640     ;       while(1)
                     641                             ; SOURCE LINE # 110
                     642     ;       {
                     643                             ; SOURCE LINE # 111
                     644     ;               //µ˜”√kscan∫Ø £¨ªÒ»°∞¥º¸∂‘”¶µƒ÷µ
                     645     ;               temp=kscan();
                     646                             ; SOURCE LINE # 113
0000 120000   F      647             LCALL   kscan
0003 7E00            648             MOV     R6,#00H
                     649     ;---- Variable 'temp?144' assigned to Register 'R6/R7' ----
                     650     ;               //»Áπ˚∞¥º¸∂‘”¶µƒ÷µŒ™15(F)£¨“ª∞„«Èøˆ±Ì æºÃ–¯£¨∑µªÿ0
                     651     ;               if(temp==15)
                     652                             ; SOURCE LINE # 115
0005 EF              653             MOV     A,R7
0006 640F            654             XRL     A,#0FH
0008 7002            655             JNZ     ?C0030
                     656     ;               {
                     657                             ; SOURCE LINE # 116
                     658     ;                       //∑µªÿ0
                     659     ;                       return 0;
                     660                             ; SOURCE LINE # 118
000A C3              661             CLR     C
000B 22              662             RET     
                     663     ;               }
                     664                             ; SOURCE LINE # 119
000C                 665     ?C0030:
                     666     ;               //»Áπ˚∞¥º¸∂‘”¶µƒ÷µŒ™14(E)£¨±Ì æÕÀ≥ˆ£¨∑µªÿ0
                     667     ;               else if(temp==14)
                     668                             ; SOURCE LINE # 121
000C EF              669             MOV     A,R7
000D 640E            670             XRL     A,#0EH
000F 4E              671             ORL     A,R6
0010 70EE            672             JNZ     ?C0028
                     673     ;               {
                     674                             ; SOURCE LINE # 122
                     675     ;                       //∑µªÿ1
                     676     ;                       return 1;
                     677                             ; SOURCE LINE # 124
0012 D3              678             SETB    C
                     679     ;               }
                     680                             ; SOURCE LINE # 125
                     681     ;       }
                     682                             ; SOURCE LINE # 126
                     683     ; }
                     684                             ; SOURCE LINE # 127
0013                 685     ?C0031:
0013 22              686             RET     
                     687     ; END OF f_or_e
                     688     
                     689     ; //∂®“Â“ª∏ˆ∫Ø £¨”√”⁄ ‰»Î ◊÷£¨≤¢¥Ê¥¢‘⁄inputs ◊È÷–
                     690     ; bit input_digits(void)
                     691     
----                 692             RSEG  ?PR?input_digits?KEYBOARD
0000                 693     input_digits:
                     694             USING   0
                     695                             ; SOURCE LINE # 129
                     696     ; {
                     697                             ; SOURCE LINE # 130
                     698     ;       //∂®“Â¡Ω∏ˆŒﬁ∑˚∫≈◊÷∑˚±‰¡ø£¨”√”⁄¥Ê¥¢—≠ª∑º∆ ∫Õ∞¥º¸∂‘”¶µƒ÷µ
                     699     ;       unsigned char i,digit=0;
                     700                             ; SOURCE LINE # 132
0000 E4              701             CLR     A
0001 F500     F      702             MOV     digit?246,A
                     703     ;       //∂®“Â“ª∏ˆŒª±‰¡ø£¨”√”⁄¥Ê¥¢ «∑ÒºÃ–¯ªÚÕÀ≥ˆµƒ◊¥Ã¨
                     704     ;       bit state=0;
                     705                             ; SOURCE LINE # 134
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    12

0003 C200     F      706             CLR     state?247
                     707     ;       //µ˜”√wait_input∫Ø £¨µ»¥ ‰»Î£¨≤¢ªÒ»°◊¥Ã¨
                     708     ;       state=wait_input();
                     709                             ; SOURCE LINE # 136
0005 120000   F      710             LCALL   wait_input
0008 9200     F      711             MOV     state?247,C
                     712     ;       //»Áπ˚◊¥Ã¨Œ™1£¨±Ì æÕÀ≥ˆ( ‰»Î¡ÀE)
                     713     ;       if(state==1)
                     714                             ; SOURCE LINE # 138
000A 300002   F      715             JNB     state?247,?C0036
                     716     ;       {
                     717                             ; SOURCE LINE # 139
                     718     ;               //∑µªÿ1
                     719     ;               return 1;
                     720                             ; SOURCE LINE # 141
000D D3              721             SETB    C
000E 22              722             RET     
                     723     ;       }
                     724                             ; SOURCE LINE # 142
000F                 725     ?C0036:
                     726     ;       //Œﬁœﬁ—≠ª∑£¨÷±µΩºÏ≤‚µΩ”––ß ‰»Î
                     727     ;       while(1)
                     728                             ; SOURCE LINE # 144
                     729     ;       {
                     730                             ; SOURCE LINE # 145
                     731     ;       //µ˜”√clear∫Ø £¨«Â∆¡
                     732     ;       clear();
                     733                             ; SOURCE LINE # 147
000F 120000   F      734             LCALL   clear
                     735     ;       //”√—≠ª∑”Ôæ‰£¨Ω´inputs ◊ÈµƒÀ˘”–‘™Àÿ≥ı ºªØŒ™0
                     736     ;       for(i=0;i<64;i++)
                     737                             ; SOURCE LINE # 149
0012 E4              738             CLR     A
0013 F500     F      739             MOV     i?245,A
0015                 740     ?C0038:
                     741     ;       {
                     742                             ; SOURCE LINE # 150
                     743     ;               inputs[i]=0;
                     744                             ; SOURCE LINE # 151
0015 7400     F      745             MOV     A,#LOW (inputs)
0017 2500     F      746             ADD     A,i?245
0019 F582            747             MOV     DPL,A
001B E4              748             CLR     A
001C 3400     F      749             ADDC    A,#HIGH (inputs)
001E F583            750             MOV     DPH,A
0020 E4              751             CLR     A
0021 F0              752             MOVX    @DPTR,A
                     753     ;       }
                     754                             ; SOURCE LINE # 152
0022 0500     F      755             INC     i?245
0024 E500     F      756             MOV     A,i?245
0026 B440EC          757             CJNE    A,#040H,?C0038
0029                 758     ?C0039:
                     759     ;       //”√—≠ª∑”Ôæ‰£¨¥”º¸≈ÃªÒ»° ‰»Îµƒ ◊÷£¨≤¢¥Ê¥¢‘⁄inputs ◊È÷–
                     760     ;       for(i=0;i<65;i++)
                     761                             ; SOURCE LINE # 154
0029 E4              762             CLR     A
002A F500     F      763             MOV     i?245,A
002C                 764     ?C0041:
002C E500     F      765             MOV     A,i?245
002E C3              766             CLR     C
002F 9441            767             SUBB    A,#041H
0031 50DC            768             JNC     ?C0036
                     769     ;       {
                     770                             ; SOURCE LINE # 155
                     771     ;               //µ˜”√kscan∫Ø £¨ªÒ»°∞¥º¸∂‘”¶µƒ÷µ
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    13

                     772     ;               digit=kscan();
                     773                             ; SOURCE LINE # 157
0033 120000   F      774             LCALL   kscan
0036 8F00     F      775             MOV     digit?246,R7
                     776     ;               //»Áπ˚—≠ª∑º∆ –°”⁄64£¨«“∞¥º¸∂‘”¶µƒ÷µ‘⁄0µΩ9÷Æº‰£¨±Ì æ ‰»Îµƒ « ◊÷
                     777     ;               if(i<64&digit>=0&digit<=9)
                     778                             ; SOURCE LINE # 159
0038 E500     F      779             MOV     A,digit?246
003A C3              780             CLR     C
003B 9400            781             SUBB    A,#00H
003D 4004            782             JC      ?C0045
003F 7F01            783             MOV     R7,#01H
0041 8002            784             SJMP    ?C0046
0043                 785     ?C0045:
0043 7F00            786             MOV     R7,#00H
0045                 787     ?C0046:
0045 E500     F      788             MOV     A,i?245
0047 C3              789             CLR     C
0048 9440            790             SUBB    A,#040H
004A 5004            791             JNC     ?C0047
004C 7E01            792             MOV     R6,#01H
004E 8002            793             SJMP    ?C0048
0050                 794     ?C0047:
0050 7E00            795             MOV     R6,#00H
0052                 796     ?C0048:
0052 EE              797             MOV     A,R6
0053 5F              798             ANL     A,R7
0054 FF              799             MOV     R7,A
0055 E500     F      800             MOV     A,digit?246
0057 D3              801             SETB    C
0058 9409            802             SUBB    A,#09H
005A 5004            803             JNC     ?C0049
005C 7E01            804             MOV     R6,#01H
005E 8002            805             SJMP    ?C0050
0060                 806     ?C0049:
0060 7E00            807             MOV     R6,#00H
0062                 808     ?C0050:
0062 EE              809             MOV     A,R6
0063 5F              810             ANL     A,R7
0064 6041            811             JZ      ?C0044
                     812     ;               {
                     813                             ; SOURCE LINE # 160
                     814     ;                       //Ω´∞¥º¸∂‘”¶µƒ÷µ◊™ªªŒ™ASCII¬Î£¨¥Ê¥¢‘⁄inputs ◊È÷–
                     815     ;                       digit=inputs[i]=digits[digit];
                     816                             ; SOURCE LINE # 162
0066 E500     F      817             MOV     A,digit?246
0068 900000   F      818             MOV     DPTR,#digits
006B 93              819             MOVC    A,@A+DPTR
006C FF              820             MOV     R7,A
006D 7400     F      821             MOV     A,#LOW (inputs)
006F 2500     F      822             ADD     A,i?245
0071 F582            823             MOV     DPL,A
0073 E4              824             CLR     A
0074 3400     F      825             ADDC    A,#HIGH (inputs)
0076 F583            826             MOV     DPH,A
0078 EF              827             MOV     A,R7
0079 F0              828             MOVX    @DPTR,A
007A F500     F      829             MOV     digit?246,A
                     830     ;                       //∏˘æ›—≠ª∑º∆ £¨µ˜”√print_char∫Ø £¨‘⁄≤ªÕ¨µƒŒª÷√œ‘ æ ‰»Îµƒ ◊÷
                     831     ;                       if(i==16)
                     832                             ; SOURCE LINE # 164
007C E500     F      833             MOV     A,i?245
007E B41006          834             CJNE    A,#010H,?C0051
                     835     ;                               {
                     836                             ; SOURCE LINE # 165
                     837     ;                                       print_char(0,2,digit);
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    14

                     838                             ; SOURCE LINE # 166
0081 AB00     F      839             MOV     R3,digit?246
0083 7D02            840             MOV     R5,#02H
                     841     ;                               }
                     842                             ; SOURCE LINE # 167
0085 8009            843             SJMP    ?C0169
0087                 844     ?C0051:
                     845     ;                       else if(i==32)
                     846                             ; SOURCE LINE # 168
0087 E500     F      847             MOV     A,i?245
0089 B42007          848             CJNE    A,#020H,?C0053
                     849     ;                               {
                     850                             ; SOURCE LINE # 169
                     851     ;                                       print_char(0,3,digit);
                     852                             ; SOURCE LINE # 170
008C AB00     F      853             MOV     R3,digit?246
008E 7D03            854             MOV     R5,#03H
0090                 855     ?C0169:
0090 E4              856             CLR     A
                     857     ;                               }
                     858                             ; SOURCE LINE # 171
0091 800E            859             SJMP    ?C0170
0093                 860     ?C0053:
                     861     ;                       else if(i==48)
                     862                             ; SOURCE LINE # 172
0093 E500     F      863             MOV     A,i?245
0095 AB00     F      864             MOV     R3,digit?246
0097 B43005          865             CJNE    A,#030H,?C0055
                     866     ;                               {
                     867                             ; SOURCE LINE # 173
                     868     ;                                       print_char(0,4,digit);
                     869                             ; SOURCE LINE # 174
009A 7D04            870             MOV     R5,#04H
009C E4              871             CLR     A
                     872     ;                               }
                     873                             ; SOURCE LINE # 175
009D 8002            874             SJMP    ?C0168
009F                 875     ?C0055:
                     876     ;                       else
                     877     ;                               {
                     878                             ; SOURCE LINE # 177
                     879     ;                                       print_char(0,0,digit);
                     880                             ; SOURCE LINE # 178
009F E4              881             CLR     A
00A0 FD              882             MOV     R5,A
00A1                 883     ?C0168:
00A1                 884     ?C0170:
00A1 FF              885             MOV     R7,A
00A2 120000   F      886             LCALL   _print_char
                     887     ;                               }
                     888                             ; SOURCE LINE # 179
                     889     ;               }
                     890                             ; SOURCE LINE # 180
00A5 8046            891             SJMP    ?C0043
00A7                 892     ?C0044:
                     893     ;               //»Áπ˚—≠ª∑º∆ ¥Û”⁄0£¨«“∞¥º¸∂‘”¶µƒ÷µŒ™15£¨±Ì æ ‰»ÎΩ· ¯
                     894     ;               else if(i>0&digit==15)
                     895                             ; SOURCE LINE # 182
00A7 E500     F      896             MOV     A,digit?246
00A9 B40F04          897             CJNE    A,#0FH,?C0059
00AC 7F01            898             MOV     R7,#01H
00AE 8002            899             SJMP    ?C0060
00B0                 900     ?C0059:
00B0 7F00            901             MOV     R7,#00H
00B2                 902     ?C0060:
00B2 E500     F      903             MOV     A,i?245
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    15

00B4 D3              904             SETB    C
00B5 9400            905             SUBB    A,#00H
00B7 4004            906             JC      ?C0061
00B9 7E01            907             MOV     R6,#01H
00BB 8002            908             SJMP    ?C0062
00BD                 909     ?C0061:
00BD 7E00            910             MOV     R6,#00H
00BF                 911     ?C0062:
00BF EE              912             MOV     A,R6
00C0 5F              913             ANL     A,R7
00C1 6002            914             JZ      ?C0058
                     915     ;               {
                     916                             ; SOURCE LINE # 183
                     917     ;                       //∑µªÿ0
                     918     ;                       return 0;
                     919                             ; SOURCE LINE # 185
00C3 C3              920             CLR     C
00C4 22              921             RET     
                     922     ;               }
                     923                             ; SOURCE LINE # 186
00C5                 924     ?C0058:
                     925     ;               //»Áπ˚∞¥º¸∂‘”¶µƒ÷µŒ™14£¨±Ì æÕÀ≥ˆ
                     926     ;               else if(digit==14)
                     927                             ; SOURCE LINE # 188
00C5 E500     F      928             MOV     A,digit?246
00C7 B40E02          929             CJNE    A,#0EH,?C0064
                     930     ;               {
                     931                             ; SOURCE LINE # 189
                     932     ;                       //∑µªÿ1
                     933     ;                       return 1;
                     934                             ; SOURCE LINE # 191
00CA D3              935             SETB    C
00CB 22              936             RET     
                     937     ;               }
                     938                             ; SOURCE LINE # 192
00CC                 939     ?C0064:
                     940     ;               //»Áπ˚—≠ª∑º∆ ¥Û”⁄0£¨«“∞¥º¸∂‘”¶µƒ÷µŒ™13£¨±Ì æ÷ÿ–¬ ‰»Î
                     941     ;               else if(i>0&digit==13)
                     942                             ; SOURCE LINE # 194
00CC E500     F      943             MOV     A,digit?246
00CE B40D04          944             CJNE    A,#0DH,?C0067
00D1 7F01            945             MOV     R7,#01H
00D3 8002            946             SJMP    ?C0068
00D5                 947     ?C0067:
00D5 7F00            948             MOV     R7,#00H
00D7                 949     ?C0068:
00D7 E500     F      950             MOV     A,i?245
00D9 D3              951             SETB    C
00DA 9400            952             SUBB    A,#00H
00DC 4004            953             JC      ?C0069
00DE 7E01            954             MOV     R6,#01H
00E0 8002            955             SJMP    ?C0070
00E2                 956     ?C0069:
00E2 7E00            957             MOV     R6,#00H
00E4                 958     ?C0070:
00E4 EE              959             MOV     A,R6
00E5 5F              960             ANL     A,R7
00E6 6003            961             JZ      $ + 5H
00E8 020000   F      962             LJMP    ?C0036
                     963     ;                               {
                     964                             ; SOURCE LINE # 195
                     965     ;                                       break;
                     966                             ; SOURCE LINE # 196
                     967     ;                               }
                     968                             ; SOURCE LINE # 197
                     969     ;               //»Áπ˚“‘…œÃıº˛∂º≤ª¬˙◊„£¨±Ì æ ‰»ÎŒﬁ–ß£¨—≠ª∑º∆ ≤ª±‰
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    16

                     970     ;               else
                     971     ;               {
                     972                             ; SOURCE LINE # 200
                     973     ;                       i--;
                     974                             ; SOURCE LINE # 201
00EB 1500     F      975             DEC     i?245
                     976     ;               }
                     977                             ; SOURCE LINE # 202
                     978     ;       }
                     979                             ; SOURCE LINE # 203
00ED                 980     ?C0043:
00ED 0500     F      981             INC     i?245
00EF 020000   F      982             LJMP    ?C0041
                     983     ; END OF input_digits
                     984     
                     985     ;       }
                     986     ; }
                     987     ; //∂®“Â“ª∏ˆ∫Ø £¨”√”⁄ ‰»ÎŒª £¨≤¢¥Ê¥¢‘⁄bits±‰¡ø÷–
                     988     ; bit input_bits(void)
                     989     
----                 990             RSEG  ?PR?input_bits?KEYBOARD
0000                 991     input_bits:
                     992             USING   0
                     993                             ; SOURCE LINE # 207
                     994     ; {
                     995                             ; SOURCE LINE # 208
                     996     ;       //∂®“Â¡Ω∏ˆŒﬁ∑˚∫≈◊÷∑˚±‰¡ø£¨”√”⁄¥Ê¥¢—≠ª∑º∆ ∫Õ∞¥º¸∂‘”¶µƒ÷µ
                     997     ;       unsigned char i,digit=0;
                     998                             ; SOURCE LINE # 210
0000 E4              999             CLR     A
0001 F500     F     1000             MOV     digit?349,A
                    1001     ;       //∂®“Â“ª∏ˆ≥§∂»Œ™2µƒŒﬁ∑˚∫≈◊÷∑˚ ◊È£¨”√”⁄¥Ê¥¢ ‰»ÎµƒŒª 
                    1002     ;       unsigned char a[2]={0};
                    1003                             ; SOURCE LINE # 212
0003 7800     F     1004             MOV     R0,#LOW (a?350)
0005 7C00     F     1005             MOV     R4,#HIGH (a?350)
0007 FD             1006             MOV     R5,A
0008 7BFF           1007             MOV     R3,#0FFH
000A 7A00     F     1008             MOV     R2,#HIGH (_?ix1000)
000C 7900     F     1009             MOV     R1,#LOW (_?ix1000)
000E FE             1010             MOV     R6,A
000F 7F02           1011             MOV     R7,#02H
0011 120000   F     1012             LCALL   ?C?COPY
                    1013     ;       //∂®“Â“ª∏ˆŒª±‰¡ø£¨”√”⁄¥Ê¥¢ «∑ÒºÃ–¯ªÚÕÀ≥ˆµƒ◊¥Ã¨
                    1014     ;       bit state=0;
                    1015                             ; SOURCE LINE # 214
0014 C200     F     1016             CLR     state?351
                    1017     ;       //µ˜”√wait_input∫Ø £¨µ»¥ ‰»Î£¨≤¢ªÒ»°◊¥Ã¨
                    1018     ;       state=wait_input();
                    1019                             ; SOURCE LINE # 216
0016 120000   F     1020             LCALL   wait_input
0019 9200     F     1021             MOV     state?351,C
                    1022     ;       //»Áπ˚◊¥Ã¨Œ™1£¨±Ì æÕÀ≥ˆ
                    1023     ;       if(state==1)
                    1024                             ; SOURCE LINE # 218
001B 300002   F     1025             JNB     state?351,?C0074
                    1026     ;       {
                    1027                             ; SOURCE LINE # 219
                    1028     ;               //∑µªÿ1
                    1029     ;               return 1;
                    1030                             ; SOURCE LINE # 221
001E D3             1031             SETB    C
001F 22             1032             RET     
                    1033     ;       }
                    1034                             ; SOURCE LINE # 222
0020                1035     ?C0074:
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    17

                    1036     ;       //Œﬁœﬁ—≠ª∑£¨÷±µΩºÏ≤‚µΩ”––ß ‰»Î
                    1037     ;       while(1)
                    1038                             ; SOURCE LINE # 224
                    1039     ;       {
                    1040                             ; SOURCE LINE # 225
                    1041     ;       //µ˜”√clear∫Ø £¨«Â∆¡
                    1042     ;       clear();
                    1043                             ; SOURCE LINE # 227
0020 120000   F     1044             LCALL   clear
                    1045     ;       //”√—≠ª∑”Ôæ‰£¨Ω´a ◊ÈµƒÀ˘”–‘™Àÿ≥ı ºªØŒ™0
                    1046     ;       for(i=0;i<2;i++)
                    1047                             ; SOURCE LINE # 229
0023 E4             1048             CLR     A
0024 F500     F     1049             MOV     i?348,A
0026                1050     ?C0076:
                    1051     ;       {
                    1052                             ; SOURCE LINE # 230
                    1053     ;               a[i]=0;
                    1054                             ; SOURCE LINE # 231
0026 7400     F     1055             MOV     A,#LOW (a?350)
0028 2500     F     1056             ADD     A,i?348
002A F8             1057             MOV     R0,A
002B E4             1058             CLR     A
002C F6             1059             MOV     @R0,A
                    1060     ;       }
                    1061                             ; SOURCE LINE # 232
002D 0500     F     1062             INC     i?348
002F E500     F     1063             MOV     A,i?348
0031 B402F2         1064             CJNE    A,#02H,?C0076
0034                1065     ?C0077:
                    1066     ;       //”√—≠ª∑”Ôæ‰£¨¥”º¸≈ÃªÒ»° ‰»ÎµƒŒª £¨≤¢¥Ê¥¢‘⁄a ◊È÷–
                    1067     ;       for(i=0;i<3;i++)
                    1068                             ; SOURCE LINE # 234
0034 E4             1069             CLR     A
0035 F500     F     1070             MOV     i?348,A
0037                1071     ?C0079:
0037 E500     F     1072             MOV     A,i?348
0039 C3             1073             CLR     C
003A 9403           1074             SUBB    A,#03H
003C 50E2           1075             JNC     ?C0074
                    1076     ;       {
                    1077                             ; SOURCE LINE # 235
                    1078     ;               //µ˜”√kscan∫Ø £¨ªÒ»°∞¥º¸∂‘”¶µƒ÷µ
                    1079     ;               digit=kscan();
                    1080                             ; SOURCE LINE # 237
003E 120000   F     1081             LCALL   kscan
0041 8F00     F     1082             MOV     digit?349,R7
                    1083     ;               //»Áπ˚—≠ª∑º∆ –°”⁄2£¨«“∞¥º¸∂‘”¶µƒ÷µ‘⁄0µΩ9÷Æº‰£¨±Ì æ ‰»Îµƒ « ◊÷
                    1084     ;               if(i<2&digit>=0&digit<=9)
                    1085                             ; SOURCE LINE # 239
0043 E500     F     1086             MOV     A,digit?349
0045 C3             1087             CLR     C
0046 9400           1088             SUBB    A,#00H
0048 4004           1089             JC      ?C0083
004A 7F01           1090             MOV     R7,#01H
004C 8002           1091             SJMP    ?C0084
004E                1092     ?C0083:
004E 7F00           1093             MOV     R7,#00H
0050                1094     ?C0084:
0050 E500     F     1095             MOV     A,i?348
0052 C3             1096             CLR     C
0053 9402           1097             SUBB    A,#02H
0055 5004           1098             JNC     ?C0085
0057 7E01           1099             MOV     R6,#01H
0059 8002           1100             SJMP    ?C0086
005B                1101     ?C0085:
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    18

005B 7E00           1102             MOV     R6,#00H
005D                1103     ?C0086:
005D EE             1104             MOV     A,R6
005E 5F             1105             ANL     A,R7
005F FF             1106             MOV     R7,A
0060 E500     F     1107             MOV     A,digit?349
0062 D3             1108             SETB    C
0063 9409           1109             SUBB    A,#09H
0065 5004           1110             JNC     ?C0087
0067 7E01           1111             MOV     R6,#01H
0069 8002           1112             SJMP    ?C0088
006B                1113     ?C0087:
006B 7E00           1114             MOV     R6,#00H
006D                1115     ?C0088:
006D EE             1116             MOV     A,R6
006E 5F             1117             ANL     A,R7
006F 6015           1118             JZ      ?C0082
                    1119     ;               {
                    1120                             ; SOURCE LINE # 240
                    1121     ;                       //Ω´∞¥º¸∂‘”¶µƒ÷µ¥Ê¥¢‘⁄a ◊È÷–
                    1122     ;                       a[i]=digit;
                    1123                             ; SOURCE LINE # 242
0071 7400     F     1124             MOV     A,#LOW (a?350)
0073 2500     F     1125             ADD     A,i?348
0075 F8             1126             MOV     R0,A
0076 A600     F     1127             MOV     @R0,digit?349
                    1128     ;                       //µ˜”√print_char∫Ø £¨‘⁄÷∏∂®Œª÷√œ‘ æ ‰»Îµƒ ◊÷
                    1129     ;                       print_char(0,0,digit+48);
                    1130                             ; SOURCE LINE # 244
0078 E500     F     1131             MOV     A,digit?349
007A 2430           1132             ADD     A,#030H
007C FB             1133             MOV     R3,A
007D E4             1134             CLR     A
007E FD             1135             MOV     R5,A
007F FF             1136             MOV     R7,A
0080 120000   F     1137             LCALL   _print_char
                    1138     ;               }
                    1139                             ; SOURCE LINE # 245
0083 020000   F     1140             LJMP    ?C0081
0086                1141     ?C0082:
                    1142     ;               //»Áπ˚—≠ª∑º∆ ¥Û”⁄0£¨«“∞¥º¸∂‘”¶µƒ÷µŒ™15£¨±Ì æ ‰»ÎΩ· ¯
                    1143     ;               else if(i>0&digit==15)
                    1144                             ; SOURCE LINE # 247
0086 E500     F     1145             MOV     A,digit?349
0088 B40F04         1146             CJNE    A,#0FH,?C0091
008B 7F01           1147             MOV     R7,#01H
008D 8002           1148             SJMP    ?C0092
008F                1149     ?C0091:
008F 7F00           1150             MOV     R7,#00H
0091                1151     ?C0092:
0091 E500     F     1152             MOV     A,i?348
0093 D3             1153             SETB    C
0094 9400           1154             SUBB    A,#00H
0096 4004           1155             JC      ?C0093
0098 7E01           1156             MOV     R6,#01H
009A 8002           1157             SJMP    ?C0094
009C                1158     ?C0093:
009C 7E00           1159             MOV     R6,#00H
009E                1160     ?C0094:
009E EE             1161             MOV     A,R6
009F 5F             1162             ANL     A,R7
00A0 603D           1163             JZ      ?C0090
                    1164     ;               {
                    1165                             ; SOURCE LINE # 248
                    1166     ;                       //Ω´a ◊È÷–µƒ¡Ω∏ˆ ◊÷◊È∫œ≥…“ª∏ˆŒª £¨¥Ê¥¢‘⁄»´æ÷±‰¡øbits÷–
                    1167     ;                       if(i==1)
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    19

                    1168                             ; SOURCE LINE # 250
00A2 E500     F     1169             MOV     A,i?348
00A4 B40105         1170             CJNE    A,#01H,?C0095
                    1171     ;                       {
                    1172                             ; SOURCE LINE # 251
                    1173     ;                               bits=a[0];
                    1174                             ; SOURCE LINE # 252
00A7 850000   F     1175             MOV     bits,a?350
                    1176     ;                       }
                    1177                             ; SOURCE LINE # 253
00AA 800A           1178             SJMP    ?C0096
00AC                1179     ?C0095:
                    1180     ;                       else
                    1181     ;                       {
                    1182                             ; SOURCE LINE # 255
                    1183     ;                       bits=a[0]*10+a[1];
                    1184                             ; SOURCE LINE # 256
00AC E500     F     1185             MOV     A,a?350
00AE 75F00A         1186             MOV     B,#0AH
00B1 A4             1187             MUL     AB
00B2 2500     F     1188             ADD     A,a?350+01H
00B4 F500     F     1189             MOV     bits,A
                    1190     ;                       }
                    1191                             ; SOURCE LINE # 257
00B6                1192     ?C0096:
                    1193     ;                       //»Áπ˚bits±‰¡øµƒ÷µ‘⁄1µΩ64÷Æº‰£¨±Ì æ ‰»ÎµƒŒª ”––ß
                    1194     ;                       if(bits>=1&bits<=64)
                    1195                             ; SOURCE LINE # 259
00B6 E500     F     1196             MOV     A,bits
00B8 D3             1197             SETB    C
00B9 9440           1198             SUBB    A,#040H
00BB 5004           1199             JNC     ?C0098
00BD 7F01           1200             MOV     R7,#01H
00BF 8002           1201             SJMP    ?C0099
00C1                1202     ?C0098:
00C1 7F00           1203             MOV     R7,#00H
00C3                1204     ?C0099:
00C3 E500     F     1205             MOV     A,bits
00C5 C3             1206             CLR     C
00C6 9401           1207             SUBB    A,#01H
00C8 4004           1208             JC      ?C0100
00CA 7E01           1209             MOV     R6,#01H
00CC 8002           1210             SJMP    ?C0101
00CE                1211     ?C0100:
00CE 7E00           1212             MOV     R6,#00H
00D0                1213     ?C0101:
00D0 EE             1214             MOV     A,R6
00D1 5F             1215             ANL     A,R7
00D2 6002           1216             JZ      ?C0097
                    1217     ;                       {
                    1218                             ; SOURCE LINE # 260
                    1219     ;                       //∑µªÿ0
                    1220     ;                       return 0;
                    1221                             ; SOURCE LINE # 262
00D4 C3             1222             CLR     C
00D5 22             1223             RET     
                    1224     ;                       }
                    1225                             ; SOURCE LINE # 263
00D6                1226     ?C0097:
                    1227     ;                       //»Áπ˚bits±‰¡øµƒ÷µ≤ª‘⁄1µΩ64÷Æº‰£¨±Ì æ ‰»ÎµƒŒª Œﬁ–ß
                    1228     ;                       else
                    1229     ;                       {
                    1230                             ; SOURCE LINE # 266
                    1231     ;                               //µ˜”√wrong_input_bits∫Ø £¨œ‘ æ¥ÌŒÛ–≈œ¢£¨≤¢ªÒ»°◊¥Ã¨
                    1232     ;                               if(wrong_input_bits())
                    1233                             ; SOURCE LINE # 268
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    20

00D6 120000   F     1234             LCALL   wrong_input_bits
00D9 4003           1235             JC      $ + 5H
00DB 020000   F     1236             LJMP    ?C0074
                    1237     ;                               {
                    1238                             ; SOURCE LINE # 269
                    1239     ;                                       //»Áπ˚◊¥Ã¨Œ™1£¨±Ì æÕÀ≥ˆ
                    1240     ;                                       return 1;
                    1241                             ; SOURCE LINE # 271
00DE 22             1242             RET     
                    1243     ;                               }
                    1244                             ; SOURCE LINE # 272
                    1245     ;                               //»Áπ˚◊¥Ã¨Œ™0£¨±Ì æºÃ–¯
                    1246     ;                               else
                    1247     ;                               {
                    1248                             ; SOURCE LINE # 275
                    1249     ;                                       //Ã¯≥ˆ—≠ª∑
                    1250     ;                                       break;
                    1251                             ; SOURCE LINE # 277
                    1252     ;                               }
                    1253                             ; SOURCE LINE # 278
                    1254     ;                       }
                    1255                             ; SOURCE LINE # 279
                    1256     ;               }
                    1257                             ; SOURCE LINE # 280
00DF                1258     ?C0090:
                    1259     ;               //»Áπ˚∞¥º¸∂‘”¶µƒ÷µŒ™14£¨±Ì æÕÀ≥ˆ
                    1260     ;               else if(digit==14)
                    1261                             ; SOURCE LINE # 282
00DF E500     F     1262             MOV     A,digit?349
00E1 B40E02         1263             CJNE    A,#0EH,?C0106
                    1264     ;               {
                    1265                             ; SOURCE LINE # 283
                    1266     ;                       //∑µªÿ1
                    1267     ;                       return 1;
                    1268                             ; SOURCE LINE # 285
00E4 D3             1269             SETB    C
00E5 22             1270             RET     
                    1271     ;               }
                    1272                             ; SOURCE LINE # 286
00E6                1273     ?C0106:
                    1274     ;               //»Áπ˚—≠ª∑º∆ ¥Û”⁄0£¨«“∞¥º¸∂‘”¶µƒ÷µŒ™13£¨±Ì æ÷ÿ–¬ ‰»Î
                    1275     ;               else if(i>0&digit==13)
                    1276                             ; SOURCE LINE # 288
00E6 E500     F     1277             MOV     A,digit?349
00E8 B40D04         1278             CJNE    A,#0DH,?C0109
00EB 7F01           1279             MOV     R7,#01H
00ED 8002           1280             SJMP    ?C0110
00EF                1281     ?C0109:
00EF 7F00           1282             MOV     R7,#00H
00F1                1283     ?C0110:
00F1 E500     F     1284             MOV     A,i?348
00F3 D3             1285             SETB    C
00F4 9400           1286             SUBB    A,#00H
00F6 4004           1287             JC      ?C0111
00F8 7E01           1288             MOV     R6,#01H
00FA 8002           1289             SJMP    ?C0112
00FC                1290     ?C0111:
00FC 7E00           1291             MOV     R6,#00H
00FE                1292     ?C0112:
00FE EE             1293             MOV     A,R6
00FF 5F             1294             ANL     A,R7
0100 6003           1295             JZ      $ + 5H
0102 020000   F     1296             LJMP    ?C0074
                    1297     ;               {
                    1298                             ; SOURCE LINE # 289
                    1299     ;                       break;
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    21

                    1300                             ; SOURCE LINE # 290
                    1301     ;               }
                    1302                             ; SOURCE LINE # 291
                    1303     ;               //»Áπ˚“‘…œÃıº˛∂º≤ª¬˙◊„£¨±Ì æ ‰»ÎŒﬁ–ß£¨—≠ª∑º∆ ≤ª±‰
                    1304     ;               else
                    1305     ;               {
                    1306                             ; SOURCE LINE # 294
                    1307     ;                       i--;
                    1308                             ; SOURCE LINE # 295
0105 1500     F     1309             DEC     i?348
                    1310     ;               }
                    1311                             ; SOURCE LINE # 296
                    1312     ;       }
                    1313                             ; SOURCE LINE # 297
0107                1314     ?C0081:
0107 0500     F     1315             INC     i?348
0109 020000   F     1316             LJMP    ?C0079
                    1317     ; END OF input_bits
                    1318     
                    1319     ;       }
                    1320     ; }
                    1321     ; //∂®“Â“ª∏ˆ∫Ø £¨”√”⁄ ‰»Îœ‘ æ ±º‰£¨≤¢¥Ê¥¢‘⁄display_time±‰¡ø÷–
                    1322     ; bit input_display_time(void)
                    1323     
----                1324             RSEG  ?PR?input_display_time?KEYBOARD
0000                1325     input_display_time:
                    1326             USING   0
                    1327                             ; SOURCE LINE # 301
                    1328     ; {
                    1329                             ; SOURCE LINE # 302
                    1330     ;       //∂®“Â¡Ω∏ˆŒﬁ∑˚∫≈◊÷∑˚±‰¡ø£¨”√”⁄¥Ê¥¢—≠ª∑º∆ ∫Õ∞¥º¸∂‘”¶µƒ÷µ
                    1331     ;       unsigned char i,j,digit=0;
                    1332                             ; SOURCE LINE # 304
0000 E4             1333             CLR     A
0001 F500     F     1334             MOV     digit?454,A
                    1335     ;       //∂®“Â“ª∏ˆ≥§∂»Œ™5µƒŒﬁ∑˚∫≈◊÷∑˚ ◊È£¨”√”⁄¥Ê¥¢ ‰»Îµƒœ‘ æ ±º‰
                    1336     ;       unsigned char a[5]={0};
                    1337                             ; SOURCE LINE # 306
0003 7800     F     1338             MOV     R0,#LOW (a?455)
0005 7C00     F     1339             MOV     R4,#HIGH (a?455)
0007 FD             1340             MOV     R5,A
0008 7BFF           1341             MOV     R3,#0FFH
000A 7A00     F     1342             MOV     R2,#HIGH (_?ix1001)
000C 7900     F     1343             MOV     R1,#LOW (_?ix1001)
000E FE             1344             MOV     R6,A
000F 7F05           1345             MOV     R7,#05H
0011 120000   F     1346             LCALL   ?C?COPY
                    1347     ;       //∂®“Â“ª∏ˆŒﬁ∑˚∫≈≥§’˚ ±‰¡ø£¨”√”⁄¥Ê¥¢ ‰»Îµƒœ‘ æ ±º‰
                    1348     ;       unsigned long temp;
                    1349     ;       //∂®“Â“ª∏ˆŒª±‰¡ø£¨”√”⁄¥Ê¥¢ «∑ÒºÃ–¯ªÚÕÀ≥ˆµƒ◊¥Ã¨
                    1350     ;       bit state=0;
                    1351                             ; SOURCE LINE # 310
0014 C200     F     1352             CLR     state?457
                    1353     ;       //µ˜”√wait_input∫Ø £¨µ»¥ ‰»Î£¨≤¢ªÒ»°◊¥Ã¨
                    1354     ;       state=wait_input();
                    1355                             ; SOURCE LINE # 312
0016 120000   F     1356             LCALL   wait_input
0019 9200     F     1357             MOV     state?457,C
                    1358     ;       //»Áπ˚◊¥Ã¨Œ™1£¨±Ì æÕÀ≥ˆ
                    1359     ;       if(state==1)
                    1360                             ; SOURCE LINE # 314
001B 300002   F     1361             JNB     state?457,?C0116
                    1362     ;       {
                    1363                             ; SOURCE LINE # 315
                    1364     ;               //∑µªÿ1
                    1365     ;               return 1;
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    22

                    1366                             ; SOURCE LINE # 317
001E D3             1367             SETB    C
001F 22             1368             RET     
                    1369     ;       }
                    1370                             ; SOURCE LINE # 318
0020                1371     ?C0116:
                    1372     ;       //Œﬁœﬁ—≠ª∑£¨÷±µΩºÏ≤‚µΩ”––ß ‰»Î
                    1373     ;       while(1)
                    1374                             ; SOURCE LINE # 320
                    1375     ;       {
                    1376                             ; SOURCE LINE # 321
                    1377     ;       //µ˜”√clear∫Ø £¨«Â∆¡
                    1378     ;       clear();
                    1379                             ; SOURCE LINE # 323
0020 120000   F     1380             LCALL   clear
                    1381     ;       //”√—≠ª∑”Ôæ‰£¨Ω´a ◊ÈµƒÀ˘”–‘™Àÿ≥ı ºªØŒ™0
                    1382     ;       for(i=0;i<5;i++)
                    1383                             ; SOURCE LINE # 325
0023 E4             1384             CLR     A
0024 F500     F     1385             MOV     i?452,A
0026                1386     ?C0118:
                    1387     ;       {
                    1388                             ; SOURCE LINE # 326
                    1389     ;               a[i]=0;
                    1390                             ; SOURCE LINE # 327
0026 7400     F     1391             MOV     A,#LOW (a?455)
0028 2500     F     1392             ADD     A,i?452
002A F8             1393             MOV     R0,A
002B E4             1394             CLR     A
002C F6             1395             MOV     @R0,A
                    1396     ;       }
                    1397                             ; SOURCE LINE # 328
002D 0500     F     1398             INC     i?452
002F E500     F     1399             MOV     A,i?452
0031 B405F2         1400             CJNE    A,#05H,?C0118
0034                1401     ?C0119:
                    1402     ;       //”√—≠ª∑”Ôæ‰£¨¥”º¸≈ÃªÒ»° ‰»Îµƒœ‘ æ ±º‰£¨≤¢¥Ê¥¢‘⁄a ◊È÷–
                    1403     ;       for(i=0;i<6;i++)
                    1404                             ; SOURCE LINE # 330
0034 E4             1405             CLR     A
0035 F500     F     1406             MOV     i?452,A
0037                1407     ?C0121:
0037 E500     F     1408             MOV     A,i?452
0039 C3             1409             CLR     C
003A 9406           1410             SUBB    A,#06H
003C 50E2           1411             JNC     ?C0116
                    1412     ;       {
                    1413                             ; SOURCE LINE # 331
                    1414     ;               //µ˜”√kscan∫Ø £¨ªÒ»°∞¥º¸∂‘”¶µƒ÷µ
                    1415     ;               digit=kscan();
                    1416                             ; SOURCE LINE # 333
003E 120000   F     1417             LCALL   kscan
0041 8F00     F     1418             MOV     digit?454,R7
                    1419     ;               //»Áπ˚—≠ª∑º∆ –°”⁄5£¨«“∞¥º¸∂‘”¶µƒ÷µ‘⁄0µΩ9÷Æº‰£¨±Ì æ ‰»Îµƒ « ◊÷
                    1420     ;               if(i<5&digit>=0&digit<=9)
                    1421                             ; SOURCE LINE # 335
0043 E500     F     1422             MOV     A,digit?454
0045 C3             1423             CLR     C
0046 9400           1424             SUBB    A,#00H
0048 4004           1425             JC      ?C0125
004A 7F01           1426             MOV     R7,#01H
004C 8002           1427             SJMP    ?C0126
004E                1428     ?C0125:
004E 7F00           1429             MOV     R7,#00H
0050                1430     ?C0126:
0050 E500     F     1431             MOV     A,i?452
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    23

0052 C3             1432             CLR     C
0053 9405           1433             SUBB    A,#05H
0055 5004           1434             JNC     ?C0127
0057 7E01           1435             MOV     R6,#01H
0059 8002           1436             SJMP    ?C0128
005B                1437     ?C0127:
005B 7E00           1438             MOV     R6,#00H
005D                1439     ?C0128:
005D EE             1440             MOV     A,R6
005E 5F             1441             ANL     A,R7
005F FF             1442             MOV     R7,A
0060 E500     F     1443             MOV     A,digit?454
0062 D3             1444             SETB    C
0063 9409           1445             SUBB    A,#09H
0065 5004           1446             JNC     ?C0129
0067 7E01           1447             MOV     R6,#01H
0069 8002           1448             SJMP    ?C0130
006B                1449     ?C0129:
006B 7E00           1450             MOV     R6,#00H
006D                1451     ?C0130:
006D EE             1452             MOV     A,R6
006E 5F             1453             ANL     A,R7
006F 6015           1454             JZ      ?C0124
                    1455     ;               {
                    1456                             ; SOURCE LINE # 336
                    1457     ;                       //Ω´∞¥º¸∂‘”¶µƒ÷µ¥Ê¥¢‘⁄a ◊È÷–
                    1458     ;                       a[i]=digit;
                    1459                             ; SOURCE LINE # 338
0071 7400     F     1460             MOV     A,#LOW (a?455)
0073 2500     F     1461             ADD     A,i?452
0075 F8             1462             MOV     R0,A
0076 A600     F     1463             MOV     @R0,digit?454
                    1464     ;                       //µ˜”√print_char∫Ø £¨‘⁄÷∏∂®Œª÷√œ‘ æ ‰»Îµƒ ◊÷
                    1465     ;                       print_char(0,0,digit+48);
                    1466                             ; SOURCE LINE # 340
0078 E500     F     1467             MOV     A,digit?454
007A 2430           1468             ADD     A,#030H
007C FB             1469             MOV     R3,A
007D E4             1470             CLR     A
007E FD             1471             MOV     R5,A
007F FF             1472             MOV     R7,A
0080 120000   F     1473             LCALL   _print_char
                    1474     ;               }
                    1475                             ; SOURCE LINE # 341
0083 020000   F     1476             LJMP    ?C0123
0086                1477     ?C0124:
                    1478     ;               //»Áπ˚—≠ª∑º∆ ¥Û”⁄0£¨«“∞¥º¸∂‘”¶µƒ÷µŒ™15£¨±Ì æ ‰»ÎΩ· ¯
                    1479     ;               else if(i>0&digit==15)
                    1480                             ; SOURCE LINE # 343
0086 E500     F     1481             MOV     A,digit?454
0088 B40F04         1482             CJNE    A,#0FH,?C0133
008B 7F01           1483             MOV     R7,#01H
008D 8002           1484             SJMP    ?C0134
008F                1485     ?C0133:
008F 7F00           1486             MOV     R7,#00H
0091                1487     ?C0134:
0091 E500     F     1488             MOV     A,i?452
0093 D3             1489             SETB    C
0094 9400           1490             SUBB    A,#00H
0096 4004           1491             JC      ?C0135
0098 7E01           1492             MOV     R6,#01H
009A 8002           1493             SJMP    ?C0136
009C                1494     ?C0135:
009C 7E00           1495             MOV     R6,#00H
009E                1496     ?C0136:
009E EE             1497             MOV     A,R6
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    24

009F 5F             1498             ANL     A,R7
00A0 7003           1499             JNZ     $ + 5H
00A2 020000   F     1500             LJMP    ?C0132
                    1501     ;               {
                    1502                             ; SOURCE LINE # 344
                    1503     ;                       //Ω´a ◊È÷–µƒŒÂ∏ˆ ◊÷◊È∫œ≥…“ª∏ˆœ‘ æ ±º‰£¨¥Ê¥¢‘⁄temp±‰¡ø÷–
                    1504     ;                       temp=0;
                    1505                             ; SOURCE LINE # 346
00A5 E4             1506             CLR     A
00A6 F500     F     1507             MOV     temp?456+03H,A
00A8 F500     F     1508             MOV     temp?456+02H,A
00AA F500     F     1509             MOV     temp?456+01H,A
00AC F500     F     1510             MOV     temp?456,A
                    1511     ;                       for(j=0;j<i;j++)
                    1512                             ; SOURCE LINE # 347
00AE F500     F     1513             MOV     j?453,A
00B0                1514     ?C0137:
00B0 E500     F     1515             MOV     A,j?453
00B2 C3             1516             CLR     C
00B3 9500     F     1517             SUBB    A,i?452
00B5 503A           1518             JNC     ?C0138
                    1519     ;                       {
                    1520                             ; SOURCE LINE # 348
                    1521     ;                               temp=10*temp+a[j];
                    1522                             ; SOURCE LINE # 349
00B7 E4             1523             CLR     A
00B8 7F0A           1524             MOV     R7,#0AH
00BA FE             1525             MOV     R6,A
00BB FD             1526             MOV     R5,A
00BC FC             1527             MOV     R4,A
00BD AB00     F     1528             MOV     R3,temp?456+03H
00BF AA00     F     1529             MOV     R2,temp?456+02H
00C1 A900     F     1530             MOV     R1,temp?456+01H
00C3 A800     F     1531             MOV     R0,temp?456
00C5 120000   F     1532             LCALL   ?C?LMUL
00C8 C004           1533             PUSH    AR4
00CA A905           1534             MOV     R1,AR5
00CC AA06           1535             MOV     R2,AR6
00CE AB07           1536             MOV     R3,AR7
00D0 7400     F     1537             MOV     A,#LOW (a?455)
00D2 2500     F     1538             ADD     A,j?453
00D4 F8             1539             MOV     R0,A
00D5 E6             1540             MOV     A,@R0
00D6 FF             1541             MOV     R7,A
00D7 E4             1542             CLR     A
00D8 FC             1543             MOV     R4,A
00D9 FD             1544             MOV     R5,A
00DA FE             1545             MOV     R6,A
00DB D000           1546             POP     AR0
00DD EB             1547             MOV     A,R3
00DE 2F             1548             ADD     A,R7
00DF F500     F     1549             MOV     temp?456+03H,A
00E1 EE             1550             MOV     A,R6
00E2 3A             1551             ADDC    A,R2
00E3 F500     F     1552             MOV     temp?456+02H,A
00E5 ED             1553             MOV     A,R5
00E6 39             1554             ADDC    A,R1
00E7 F500     F     1555             MOV     temp?456+01H,A
00E9 EC             1556             MOV     A,R4
00EA 38             1557             ADDC    A,R0
00EB F500     F     1558             MOV     temp?456,A
                    1559     ;                       }
                    1560                             ; SOURCE LINE # 350
00ED 0500     F     1561             INC     j?453
00EF 80BF           1562             SJMP    ?C0137
00F1                1563     ?C0138:
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    25

                    1564     ;                       //»Áπ˚temp±‰¡øµƒ÷µ‘⁄50µΩ65535÷Æº‰£¨±Ì æ ‰»Îµƒœ‘ æ ±º‰”––ß
                    1565     ;                       if(temp>=50&temp<=65535)
                    1566                             ; SOURCE LINE # 352
00F1 E4             1567             CLR     A
00F2 7FFF           1568             MOV     R7,#0FFH
00F4 7EFF           1569             MOV     R6,#0FFH
00F6 FD             1570             MOV     R5,A
00F7 FC             1571             MOV     R4,A
00F8 AB00     F     1572             MOV     R3,temp?456+03H
00FA AA00     F     1573             MOV     R2,temp?456+02H
00FC A900     F     1574             MOV     R1,temp?456+01H
00FE A800     F     1575             MOV     R0,temp?456
0100 D3             1576             SETB    C
0101 120000   F     1577             LCALL   ?C?ULCMP
0104 5006           1578             JNC     ?C0141
0106 7F01           1579             MOV     R7,#01H
0108 C007           1580             PUSH    AR7
010A 8004           1581             SJMP    ?C0142
010C                1582     ?C0141:
010C 7F00           1583             MOV     R7,#00H
010E C007           1584             PUSH    AR7
0110                1585     ?C0142:
0110 E4             1586             CLR     A
0111 7F32           1587             MOV     R7,#032H
0113 FE             1588             MOV     R6,A
0114 FD             1589             MOV     R5,A
0115 FC             1590             MOV     R4,A
0116 AB00     F     1591             MOV     R3,temp?456+03H
0118 AA00     F     1592             MOV     R2,temp?456+02H
011A A900     F     1593             MOV     R1,temp?456+01H
011C A800     F     1594             MOV     R0,temp?456
011E C3             1595             CLR     C
011F 120000   F     1596             LCALL   ?C?ULCMP
0122 4004           1597             JC      ?C0143
0124 7E01           1598             MOV     R6,#01H
0126 8002           1599             SJMP    ?C0144
0128                1600     ?C0143:
0128 7E00           1601             MOV     R6,#00H
012A                1602     ?C0144:
012A D0E0           1603             POP     ACC
012C 5E             1604             ANL     A,R6
012D 6008           1605             JZ      ?C0140
                    1606     ;                       {
                    1607                             ; SOURCE LINE # 353
                    1608     ;                               //Ω´temp±‰¡øµƒ÷µ∏≥∏¯display_time±‰¡ø
                    1609     ;                               display_time=temp;
                    1610                             ; SOURCE LINE # 355
012F 850000   F     1611             MOV     display_time,temp?456+02H
0132 850000   F     1612             MOV     display_time+01H,temp?456+03H
                    1613     ;                               //∑µªÿ0
                    1614     ;                               return 0;
                    1615                             ; SOURCE LINE # 357
0135 C3             1616             CLR     C
0136 22             1617             RET     
                    1618     ;                       }
                    1619                             ; SOURCE LINE # 358
0137                1620     ?C0140:
                    1621     ;                       //»Áπ˚temp±‰¡øµƒ÷µ≤ª‘⁄50µΩ65535÷Æº‰£¨±Ì æ ‰»Îµƒœ‘ æ ±º‰Œﬁ–ß
                    1622     ;                       else
                    1623     ;                       {
                    1624                             ; SOURCE LINE # 361
                    1625     ;                               //µ˜”√wrong_display_time∫Ø £¨œ‘ æ¥ÌŒÛ–≈œ¢£¨≤¢ªÒ»°◊¥Ã¨
                    1626     ;                               if(wrong_display_time())
                    1627                             ; SOURCE LINE # 363
0137 120000   F     1628             LCALL   wrong_display_time
013A 4003           1629             JC      $ + 5H
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    26

013C 020000   F     1630             LJMP    ?C0116
                    1631     ;                               {
                    1632                             ; SOURCE LINE # 364
                    1633     ;                                       //»Áπ˚◊¥Ã¨Œ™1£¨±Ì æÕÀ≥ˆ
                    1634     ;                                       return 1;
                    1635                             ; SOURCE LINE # 366
013F 22             1636             RET     
                    1637     ;                               }
                    1638                             ; SOURCE LINE # 367
                    1639     ;                               //»Áπ˚◊¥Ã¨Œ™0£¨±Ì æºÃ–¯
                    1640     ;                               else
                    1641     ;                               {
                    1642                             ; SOURCE LINE # 370
                    1643     ;                                       //Ã¯≥ˆ—≠ª∑
                    1644     ;                                       break;
                    1645                             ; SOURCE LINE # 372
                    1646     ;                               }
                    1647                             ; SOURCE LINE # 373
                    1648     ;                       }
                    1649                             ; SOURCE LINE # 374
                    1650     ;               }
                    1651                             ; SOURCE LINE # 375
0140                1652     ?C0132:
                    1653     ;               //»Áπ˚∞¥º¸∂‘”¶µƒ÷µŒ™14£¨±Ì æÕÀ≥ˆ
                    1654     ;               else if(digit==14)
                    1655                             ; SOURCE LINE # 377
0140 E500     F     1656             MOV     A,digit?454
0142 B40E02         1657             CJNE    A,#0EH,?C0149
                    1658     ;               {
                    1659                             ; SOURCE LINE # 378
                    1660     ;                       //∑µªÿ1
                    1661     ;                       return 1;
                    1662                             ; SOURCE LINE # 380
0145 D3             1663             SETB    C
0146 22             1664             RET     
                    1665     ;               }
                    1666                             ; SOURCE LINE # 381
0147                1667     ?C0149:
                    1668     ;               //»Áπ˚—≠ª∑º∆ ¥Û”⁄0£¨«“∞¥º¸∂‘”¶µƒ÷µŒ™13£¨±Ì æ÷ÿ–¬ ‰»Î
                    1669     ;               else if(i>0&digit==13)
                    1670                             ; SOURCE LINE # 383
0147 E500     F     1671             MOV     A,digit?454
0149 B40D04         1672             CJNE    A,#0DH,?C0152
014C 7F01           1673             MOV     R7,#01H
014E 8002           1674             SJMP    ?C0153
0150                1675     ?C0152:
0150 7F00           1676             MOV     R7,#00H
0152                1677     ?C0153:
0152 E500     F     1678             MOV     A,i?452
0154 D3             1679             SETB    C
0155 9400           1680             SUBB    A,#00H
0157 4004           1681             JC      ?C0154
0159 7E01           1682             MOV     R6,#01H
015B 8002           1683             SJMP    ?C0155
015D                1684     ?C0154:
015D 7E00           1685             MOV     R6,#00H
015F                1686     ?C0155:
015F EE             1687             MOV     A,R6
0160 5F             1688             ANL     A,R7
0161 6003           1689             JZ      $ + 5H
0163 020000   F     1690             LJMP    ?C0116
                    1691     ;               {
                    1692                             ; SOURCE LINE # 384
                    1693     ;                       break;
                    1694                             ; SOURCE LINE # 385
                    1695     ;               }
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    27

                    1696                             ; SOURCE LINE # 386
                    1697     ;               //»Áπ˚“‘…œÃıº˛∂º≤ª¬˙◊„£¨±Ì æ ‰»ÎŒﬁ–ß£¨—≠ª∑º∆ ≤ª±‰
                    1698     ;               else
                    1699     ;               {
                    1700                             ; SOURCE LINE # 389
                    1701     ;                       i--;
                    1702                             ; SOURCE LINE # 390
0166 1500     F     1703             DEC     i?452
                    1704     ;               }
                    1705                             ; SOURCE LINE # 391
                    1706     ;       }
                    1707                             ; SOURCE LINE # 392
0168                1708     ?C0123:
0168 0500     F     1709             INC     i?452
016A 020000   F     1710             LJMP    ?C0121
                    1711     ; END OF input_display_time
                    1712     
                    1713     ;       }
                    1714     ; }
                    1715     ; //∂®“Â“ª∏ˆ∫Ø £¨”√”⁄µ»¥ ‰»Î£¨≤¢∑µªÿ «∑ÒºÃ–¯ªÚÕÀ≥ˆµƒ◊¥Ã¨
                    1716     ; bit wait_input(void)
                    1717     
----                1718             RSEG  ?PR?wait_input?KEYBOARD
0000                1719     wait_input:
                    1720             USING   0
                    1721                             ; SOURCE LINE # 396
                    1722     ; {
                    1723                             ; SOURCE LINE # 397
                    1724     ;       //∂®“Â“ª∏ˆŒª±‰¡ø£¨”√”⁄¥Ê¥¢◊¥Ã¨
                    1725     ;       bit state=0;
                    1726                             ; SOURCE LINE # 399
0000 C200     F     1727             CLR     state?558
0002                1728     ?C0157:
                    1729     ;       //∂®“Â“ª∏ˆŒﬁ∑˚∫≈◊÷∑˚±‰¡ø£¨”√”⁄¥Ê¥¢∞¥º¸∂‘”¶µƒ÷µ
                    1730     ;       unsigned char temp;
                    1731     ;       //Œﬁœﬁ—≠ª∑£¨÷±µΩºÏ≤‚µΩ”––ß∞¥º¸
                    1732     ;       while(1)
                    1733                             ; SOURCE LINE # 403
                    1734     ;       {
                    1735                             ; SOURCE LINE # 404
                    1736     ;               //µ˜”√kscan∫Ø £¨ªÒ»°∞¥º¸∂‘”¶µƒ÷µ
                    1737     ;               temp=kscan();
                    1738                             ; SOURCE LINE # 406
0002 120000   F     1739             LCALL   kscan
                    1740     ;---- Variable 'temp?559' assigned to Register 'R7' ----
                    1741     ;               //»Áπ˚∞¥º¸∂‘”¶µƒ÷µ‘⁄0µΩ15÷Æº‰£¨±Ì æ ‰»Î”––ß
                    1742     ;               if(temp>=0&temp<=15)
                    1743                             ; SOURCE LINE # 408
0005 EF             1744             MOV     A,R7
0006 D3             1745             SETB    C
0007 940F           1746             SUBB    A,#0FH
0009 5004           1747             JNC     ?C0160
000B 7E01           1748             MOV     R6,#01H
000D 8002           1749             SJMP    ?C0161
000F                1750     ?C0160:
000F 7E00           1751             MOV     R6,#00H
0011                1752     ?C0161:
0011 EF             1753             MOV     A,R7
0012 C3             1754             CLR     C
0013 9400           1755             SUBB    A,#00H
0015 4004           1756             JC      ?C0162
0017 7D01           1757             MOV     R5,#01H
0019 8002           1758             SJMP    ?C0163
001B                1759     ?C0162:
001B 7D00           1760             MOV     R5,#00H
001D                1761     ?C0163:
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    28

001D ED             1762             MOV     A,R5
001E 5E             1763             ANL     A,R6
001F 60E1           1764             JZ      ?C0157
                    1765     ;               {
                    1766                             ; SOURCE LINE # 409
                    1767     ;                       //»Áπ˚∞¥º¸∂‘”¶µƒ÷µŒ™14£¨±Ì æÕÀ≥ˆ£¨◊¥Ã¨Œ™1
                    1768     ;                       if(temp==14)
                    1769                             ; SOURCE LINE # 411
0021 BF0E02         1770             CJNE    R7,#0EH,?C0164
                    1771     ;                       {
                    1772                             ; SOURCE LINE # 412
                    1773     ;                               state=1;
                    1774                             ; SOURCE LINE # 413
0024 D200     F     1775             SETB    state?558
                    1776     ;                       }
                    1777                             ; SOURCE LINE # 414
0026                1778     ?C0164:
                    1779     ;                       //∑µªÿ◊¥Ã¨
                    1780     ;                       return state;
                    1781                             ; SOURCE LINE # 416
0026 A200     F     1782             MOV     C,state?558
                    1783     ;               }
                    1784                             ; SOURCE LINE # 417
                    1785     ;       }
                    1786                             ; SOURCE LINE # 418
                    1787     ; }
                    1788                             ; SOURCE LINE # 419
0028 22             1789             RET     
                    1790     ; END OF wait_input
                    1791     
                    1792     ; //∂®“Â“ª∏ˆ∫Ø £¨”√”⁄œ‘ æ ‰»ÎŒª ¥ÌŒÛµƒ–≈œ¢£¨≤¢∑µªÿ «∑ÒºÃ–¯ªÚÕÀ≥ˆµƒ◊¥Ã¨
                    1793     ; bit wrong_input_bits(void)
                    1794     
----                1795             RSEG  ?PR?wrong_input_bits?KEYBOARD
0000                1796     wrong_input_bits:
                    1797             USING   0
                    1798                             ; SOURCE LINE # 421
                    1799     ; {
                    1800                             ; SOURCE LINE # 422
                    1801     ;       //µ˜”√display_wrong_input_bits∫Ø £¨œ‘ æ¥ÌŒÛ–≈œ¢
                    1802     ;       display_wrong_input_bits();
                    1803                             ; SOURCE LINE # 424
0000 120000   F     1804             LCALL   display_wrong_input_bits
                    1805     ;       //µ˜”√f_or_e∫Ø £¨≈–∂œ «∑ÒºÃ–¯ªÚÕÀ≥ˆ£¨≤¢∑µªÿ◊¥Ã¨
                    1806     ;       return f_or_e();
                    1807                             ; SOURCE LINE # 426
0003 020000   F     1808             LJMP    f_or_e
                    1809     ; END OF wrong_input_bits
                    1810     
                    1811     ; }
                    1812     ; //∂®“Â“ª∏ˆ∫Ø £¨”√”⁄œ‘ æ ‰»Îœ‘ æ ±º‰¥ÌŒÛµƒ–≈œ¢£¨≤¢∑µªÿ «∑ÒºÃ–¯ªÚÕÀ≥ˆµƒ◊¥Ã¨
                    1813     ; bit wrong_display_time(void)
                    1814     
----                1815             RSEG  ?PR?wrong_display_time?KEYBOARD
0000                1816     wrong_display_time:
                    1817             USING   0
                    1818                             ; SOURCE LINE # 429
                    1819     ; {
                    1820                             ; SOURCE LINE # 430
                    1821     ;       //µ˜”√display_wrong_input_display_time∫Ø £¨œ‘ æ¥ÌŒÛ–≈œ¢
                    1822     ;       display_wrong_input_display_time();
                    1823                             ; SOURCE LINE # 432
0000 120000   F     1824             LCALL   display_wrong_input_display_time
                    1825     ;       //µ˜”√f_or_e∫Ø £¨≈–∂œ «∑ÒºÃ–¯ªÚÕÀ≥ˆ£¨≤¢∑µªÿ◊¥Ã¨
                    1826     ;       return f_or_e();
                    1827                             ; SOURCE LINE # 434
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    29

0003 020000   F     1828             LJMP    f_or_e
                    1829     ; END OF wrong_display_time
                    1830     
                    1831             END
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    30

SYMBOL TABLE LISTING
------ ----- -------


N A M E                           T Y P E  V A L U E   ATTRIBUTES

?BI?INPUT_BITS?KEYBOARD. . . . .  B SEG    0001H       REL=UNIT
?BI?INPUT_DIGITS?KEYBOARD. . . .  B SEG    0001H       REL=UNIT
?BI?INPUT_DISPLAY_TIME?KEYBOARD.  B SEG    0001H       REL=UNIT
?BI?WAIT_INPUT?KEYBOARD. . . . .  B SEG    0001H       REL=UNIT
?C0001 . . . . . . . . . . . . .  C ADDR   0006H   R   SEG=?PR?KSCAN?KEYBOARD
?C0005 . . . . . . . . . . . . .  C ADDR   00BBH   R   SEG=?PR?KSCAN?KEYBOARD
?C0006 . . . . . . . . . . . . .  C ADDR   006DH   R   SEG=?PR?KSCAN?KEYBOARD
?C0007 . . . . . . . . . . . . .  C ADDR   0072H   R   SEG=?PR?KSCAN?KEYBOARD
?C0008 . . . . . . . . . . . . .  C ADDR   0077H   R   SEG=?PR?KSCAN?KEYBOARD
?C0009 . . . . . . . . . . . . .  C ADDR   007CH   R   SEG=?PR?KSCAN?KEYBOARD
?C0010 . . . . . . . . . . . . .  C ADDR   0081H   R   SEG=?PR?KSCAN?KEYBOARD
?C0011 . . . . . . . . . . . . .  C ADDR   0086H   R   SEG=?PR?KSCAN?KEYBOARD
?C0012 . . . . . . . . . . . . .  C ADDR   008BH   R   SEG=?PR?KSCAN?KEYBOARD
?C0013 . . . . . . . . . . . . .  C ADDR   0090H   R   SEG=?PR?KSCAN?KEYBOARD
?C0014 . . . . . . . . . . . . .  C ADDR   0095H   R   SEG=?PR?KSCAN?KEYBOARD
?C0015 . . . . . . . . . . . . .  C ADDR   009AH   R   SEG=?PR?KSCAN?KEYBOARD
?C0016 . . . . . . . . . . . . .  C ADDR   009FH   R   SEG=?PR?KSCAN?KEYBOARD
?C0017 . . . . . . . . . . . . .  C ADDR   00A4H   R   SEG=?PR?KSCAN?KEYBOARD
?C0018 . . . . . . . . . . . . .  C ADDR   00A9H   R   SEG=?PR?KSCAN?KEYBOARD
?C0019 . . . . . . . . . . . . .  C ADDR   00AEH   R   SEG=?PR?KSCAN?KEYBOARD
?C0020 . . . . . . . . . . . . .  C ADDR   00B3H   R   SEG=?PR?KSCAN?KEYBOARD
?C0021 . . . . . . . . . . . . .  C ADDR   00B8H   R   SEG=?PR?KSCAN?KEYBOARD
?C0023 . . . . . . . . . . . . .  C ADDR   00C1H   R   SEG=?PR?KSCAN?KEYBOARD
?C0024 . . . . . . . . . . . . .  C ADDR   00D6H   R   SEG=?PR?KSCAN?KEYBOARD
?C0028 . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?F_OR_E?KEYBOARD
?C0030 . . . . . . . . . . . . .  C ADDR   000CH   R   SEG=?PR?F_OR_E?KEYBOARD
?C0031 . . . . . . . . . . . . .  C ADDR   0013H   R   SEG=?PR?F_OR_E?KEYBOARD
?C0036 . . . . . . . . . . . . .  C ADDR   000FH   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0038 . . . . . . . . . . . . .  C ADDR   0015H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0039 . . . . . . . . . . . . .  C ADDR   0029H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0041 . . . . . . . . . . . . .  C ADDR   002CH   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0043 . . . . . . . . . . . . .  C ADDR   00EDH   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0044 . . . . . . . . . . . . .  C ADDR   00A7H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0045 . . . . . . . . . . . . .  C ADDR   0043H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0046 . . . . . . . . . . . . .  C ADDR   0045H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0047 . . . . . . . . . . . . .  C ADDR   0050H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0048 . . . . . . . . . . . . .  C ADDR   0052H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0049 . . . . . . . . . . . . .  C ADDR   0060H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0050 . . . . . . . . . . . . .  C ADDR   0062H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0051 . . . . . . . . . . . . .  C ADDR   0087H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0053 . . . . . . . . . . . . .  C ADDR   0093H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0055 . . . . . . . . . . . . .  C ADDR   009FH   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0058 . . . . . . . . . . . . .  C ADDR   00C5H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0059 . . . . . . . . . . . . .  C ADDR   00B0H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0060 . . . . . . . . . . . . .  C ADDR   00B2H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0061 . . . . . . . . . . . . .  C ADDR   00BDH   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0062 . . . . . . . . . . . . .  C ADDR   00BFH   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0064 . . . . . . . . . . . . .  C ADDR   00CCH   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0067 . . . . . . . . . . . . .  C ADDR   00D5H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0068 . . . . . . . . . . . . .  C ADDR   00D7H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0069 . . . . . . . . . . . . .  C ADDR   00E2H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0070 . . . . . . . . . . . . .  C ADDR   00E4H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0074 . . . . . . . . . . . . .  C ADDR   0020H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0076 . . . . . . . . . . . . .  C ADDR   0026H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0077 . . . . . . . . . . . . .  C ADDR   0034H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0079 . . . . . . . . . . . . .  C ADDR   0037H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0081 . . . . . . . . . . . . .  C ADDR   0107H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0082 . . . . . . . . . . . . .  C ADDR   0086H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0083 . . . . . . . . . . . . .  C ADDR   004EH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0084 . . . . . . . . . . . . .  C ADDR   0050H   R   SEG=?PR?INPUT_BITS?KEYBOARD
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    31

?C0085 . . . . . . . . . . . . .  C ADDR   005BH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0086 . . . . . . . . . . . . .  C ADDR   005DH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0087 . . . . . . . . . . . . .  C ADDR   006BH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0088 . . . . . . . . . . . . .  C ADDR   006DH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0090 . . . . . . . . . . . . .  C ADDR   00DFH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0091 . . . . . . . . . . . . .  C ADDR   008FH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0092 . . . . . . . . . . . . .  C ADDR   0091H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0093 . . . . . . . . . . . . .  C ADDR   009CH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0094 . . . . . . . . . . . . .  C ADDR   009EH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0095 . . . . . . . . . . . . .  C ADDR   00ACH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0096 . . . . . . . . . . . . .  C ADDR   00B6H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0097 . . . . . . . . . . . . .  C ADDR   00D6H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0098 . . . . . . . . . . . . .  C ADDR   00C1H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0099 . . . . . . . . . . . . .  C ADDR   00C3H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0100 . . . . . . . . . . . . .  C ADDR   00CEH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0101 . . . . . . . . . . . . .  C ADDR   00D0H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0106 . . . . . . . . . . . . .  C ADDR   00E6H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0109 . . . . . . . . . . . . .  C ADDR   00EFH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0110 . . . . . . . . . . . . .  C ADDR   00F1H   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0111 . . . . . . . . . . . . .  C ADDR   00FCH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0112 . . . . . . . . . . . . .  C ADDR   00FEH   R   SEG=?PR?INPUT_BITS?KEYBOARD
?C0116 . . . . . . . . . . . . .  C ADDR   0020H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0118 . . . . . . . . . . . . .  C ADDR   0026H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0119 . . . . . . . . . . . . .  C ADDR   0034H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0121 . . . . . . . . . . . . .  C ADDR   0037H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0123 . . . . . . . . . . . . .  C ADDR   0168H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0124 . . . . . . . . . . . . .  C ADDR   0086H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0125 . . . . . . . . . . . . .  C ADDR   004EH   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0126 . . . . . . . . . . . . .  C ADDR   0050H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0127 . . . . . . . . . . . . .  C ADDR   005BH   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0128 . . . . . . . . . . . . .  C ADDR   005DH   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0129 . . . . . . . . . . . . .  C ADDR   006BH   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0130 . . . . . . . . . . . . .  C ADDR   006DH   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0132 . . . . . . . . . . . . .  C ADDR   0140H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0133 . . . . . . . . . . . . .  C ADDR   008FH   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0134 . . . . . . . . . . . . .  C ADDR   0091H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0135 . . . . . . . . . . . . .  C ADDR   009CH   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0136 . . . . . . . . . . . . .  C ADDR   009EH   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0137 . . . . . . . . . . . . .  C ADDR   00B0H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0138 . . . . . . . . . . . . .  C ADDR   00F1H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0140 . . . . . . . . . . . . .  C ADDR   0137H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0141 . . . . . . . . . . . . .  C ADDR   010CH   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0142 . . . . . . . . . . . . .  C ADDR   0110H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0143 . . . . . . . . . . . . .  C ADDR   0128H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0144 . . . . . . . . . . . . .  C ADDR   012AH   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0149 . . . . . . . . . . . . .  C ADDR   0147H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0152 . . . . . . . . . . . . .  C ADDR   0150H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0153 . . . . . . . . . . . . .  C ADDR   0152H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0154 . . . . . . . . . . . . .  C ADDR   015DH   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0155 . . . . . . . . . . . . .  C ADDR   015FH   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
?C0157 . . . . . . . . . . . . .  C ADDR   0002H   R   SEG=?PR?WAIT_INPUT?KEYBOARD
?C0160 . . . . . . . . . . . . .  C ADDR   000FH   R   SEG=?PR?WAIT_INPUT?KEYBOARD
?C0161 . . . . . . . . . . . . .  C ADDR   0011H   R   SEG=?PR?WAIT_INPUT?KEYBOARD
?C0162 . . . . . . . . . . . . .  C ADDR   001BH   R   SEG=?PR?WAIT_INPUT?KEYBOARD
?C0163 . . . . . . . . . . . . .  C ADDR   001DH   R   SEG=?PR?WAIT_INPUT?KEYBOARD
?C0164 . . . . . . . . . . . . .  C ADDR   0026H   R   SEG=?PR?WAIT_INPUT?KEYBOARD
?C0168 . . . . . . . . . . . . .  C ADDR   00A1H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0169 . . . . . . . . . . . . .  C ADDR   0090H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C0170 . . . . . . . . . . . . .  C ADDR   00A1H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
?C?CCASE . . . . . . . . . . . .  C ADDR   -----       EXT
?C?COPY. . . . . . . . . . . . .  C ADDR   -----       EXT
?C?LMUL. . . . . . . . . . . . .  C ADDR   -----       EXT
?C?ULCMP . . . . . . . . . . . .  C ADDR   -----       EXT
?CO?KEYBOARD . . . . . . . . . .  C SEG    0007H       REL=UNIT
?C_INITSEG . . . . . . . . . . .  C SEG    0044H       REL=UNIT
?DT?INPUT_BITS?KEYBOARD. . . . .  D SEG    0004H       REL=UNIT
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    32

?DT?INPUT_DIGITS?KEYBOARD. . . .  D SEG    0002H       REL=UNIT
?DT?INPUT_DISPLAY_TIME?KEYBOARD.  D SEG    000CH       REL=UNIT
?DT?KSCAN?KEYBOARD . . . . . . .  D SEG    0002H       REL=UNIT
?INPUT_BITS?BIT. . . . . . . . .  B ADDR   0000H.0 R   SEG=?BI?INPUT_BITS?KEYBOARD
?INPUT_BITS?BYTE . . . . . . . .  D ADDR   0000H   R   SEG=?DT?INPUT_BITS?KEYBOARD
?INPUT_DIGITS?BIT. . . . . . . .  B ADDR   0000H.0 R   SEG=?BI?INPUT_DIGITS?KEYBOARD
?INPUT_DIGITS?BYTE . . . . . . .  D ADDR   0000H   R   SEG=?DT?INPUT_DIGITS?KEYBOARD
?INPUT_DISPLAY_TIME?BIT. . . . .  B ADDR   0000H.0 R   SEG=?BI?INPUT_DISPLAY_TIME?KEYBOARD
?INPUT_DISPLAY_TIME?BYTE . . . .  D ADDR   0000H   R   SEG=?DT?INPUT_DISPLAY_TIME?KEYBOARD
?KSCAN?BYTE. . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?KSCAN?KEYBOARD
?PR?F_OR_E?KEYBOARD. . . . . . .  C SEG    0014H       REL=UNIT
?PR?INPUT_BITS?KEYBOARD. . . . .  C SEG    010CH       REL=UNIT
?PR?INPUT_DIGITS?KEYBOARD. . . .  C SEG    00F2H       REL=UNIT
?PR?INPUT_DISPLAY_TIME?KEYBOARD.  C SEG    016DH       REL=UNIT
?PR?KSCAN?KEYBOARD . . . . . . .  C SEG    00D9H       REL=UNIT
?PR?WAIT_INPUT?KEYBOARD. . . . .  C SEG    0029H       REL=UNIT
?PR?WRONG_DISPLAY_TIME?KEYBOARD.  C SEG    0006H       REL=UNIT
?PR?WRONG_INPUT_BITS?KEYBOARD. .  C SEG    0006H       REL=UNIT
?WAIT_INPUT?BIT. . . . . . . . .  B ADDR   0000H.0 R   SEG=?BI?WAIT_INPUT?KEYBOARD
?XD?KEYBOARD . . . . . . . . . .  X SEG    0040H       REL=UNIT
A?350. . . . . . . . . . . . . .  D ADDR   0002H   R   SEG=?DT?INPUT_BITS?KEYBOARD
A?455. . . . . . . . . . . . . .  D ADDR   0003H   R   SEG=?DT?INPUT_DISPLAY_TIME?KEYBOARD
AA . . . . . . . . . . . . . . .  B ADDR   00C0H.2 A   
AC . . . . . . . . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . . . . . . . . .  D ADDR   00E0H   A   
AD0BUSY. . . . . . . . . . . . .  B ADDR   00E8H.4 A   
AD0CM0 . . . . . . . . . . . . .  B ADDR   00E8H.2 A   
AD0CM1 . . . . . . . . . . . . .  B ADDR   00E8H.3 A   
AD0EN. . . . . . . . . . . . . .  B ADDR   00E8H.7 A   
AD0INT . . . . . . . . . . . . .  B ADDR   00E8H.5 A   
AD0LJST. . . . . . . . . . . . .  B ADDR   00E8H.0 A   
AD0TM. . . . . . . . . . . . . .  B ADDR   00E8H.6 A   
AD0WINT. . . . . . . . . . . . .  B ADDR   00E8H.1 A   
ADC0CF . . . . . . . . . . . . .  D ADDR   00BCH   A   
ADC0CN . . . . . . . . . . . . .  D ADDR   00E8H   A   
ADC0GTH. . . . . . . . . . . . .  D ADDR   00C5H   A   
ADC0GTL. . . . . . . . . . . . .  D ADDR   00C4H   A   
ADC0H. . . . . . . . . . . . . .  D ADDR   00BFH   A   
ADC0L. . . . . . . . . . . . . .  D ADDR   00BEH   A   
ADC0LTH. . . . . . . . . . . . .  D ADDR   00C7H   A   
ADC0LTL. . . . . . . . . . . . .  D ADDR   00C6H   A   
ADC1 . . . . . . . . . . . . . .  D ADDR   009CH   A   
ADC1CF . . . . . . . . . . . . .  D ADDR   00ABH   A   
ADC1CN . . . . . . . . . . . . .  D ADDR   00AAH   A   
AMX0CF . . . . . . . . . . . . .  D ADDR   00BAH   A   
AMX0SL . . . . . . . . . . . . .  D ADDR   00BBH   A   
AMX1SL . . . . . . . . . . . . .  D ADDR   00ACH   A   
AR0. . . . . . . . . . . . . . .  D ADDR   0000H   A   
AR4. . . . . . . . . . . . . . .  D ADDR   0004H   A   
AR5. . . . . . . . . . . . . . .  D ADDR   0005H   A   
AR6. . . . . . . . . . . . . . .  D ADDR   0006H   A   
AR7. . . . . . . . . . . . . . .  D ADDR   0007H   A   
B. . . . . . . . . . . . . . . .  D ADDR   00F0H   A   
BITS . . . . . . . . . . . . . .  D ADDR   -----       EXT
BUSY . . . . . . . . . . . . . .  B ADDR   00C0H.7 A   
CCF0 . . . . . . . . . . . . . .  B ADDR   00D8H.0 A   
CCF1 . . . . . . . . . . . . . .  B ADDR   00D8H.1 A   
CCF2 . . . . . . . . . . . . . .  B ADDR   00D8H.2 A   
CCF3 . . . . . . . . . . . . . .  B ADDR   00D8H.3 A   
CCF4 . . . . . . . . . . . . . .  B ADDR   00D8H.4 A   
CF . . . . . . . . . . . . . . .  B ADDR   00D8H.7 A   
CKCON. . . . . . . . . . . . . .  D ADDR   008EH   A   
CLEAR. . . . . . . . . . . . . .  C ADDR   -----       EXT
CPRL2. . . . . . . . . . . . . .  B ADDR   00C8H.0 A   
CPT0CN . . . . . . . . . . . . .  D ADDR   009EH   A   
CPT1CN . . . . . . . . . . . . .  D ADDR   009FH   A   
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    33

CR . . . . . . . . . . . . . . .  B ADDR   00D8H.6 A   
CT2. . . . . . . . . . . . . . .  B ADDR   00C8H.1 A   
CY . . . . . . . . . . . . . . .  B ADDR   00D0H.7 A   
D0 . . . . . . . . . . . . . . .  B ADDR   0080H.0 A   
D1 . . . . . . . . . . . . . . .  B ADDR   0080H.1 A   
D2 . . . . . . . . . . . . . . .  B ADDR   0080H.2 A   
D3 . . . . . . . . . . . . . . .  B ADDR   0080H.3 A   
D4 . . . . . . . . . . . . . . .  B ADDR   0080H.4 A   
D5 . . . . . . . . . . . . . . .  B ADDR   0080H.5 A   
D6 . . . . . . . . . . . . . . .  B ADDR   0080H.6 A   
D7 . . . . . . . . . . . . . . .  B ADDR   0080H.7 A   
DAC0CN . . . . . . . . . . . . .  D ADDR   00D4H   A   
DAC0H. . . . . . . . . . . . . .  D ADDR   00D3H   A   
DAC0L. . . . . . . . . . . . . .  D ADDR   00D2H   A   
DAC1CN . . . . . . . . . . . . .  D ADDR   00D7H   A   
DAC1H. . . . . . . . . . . . . .  D ADDR   00D6H   A   
DAC1L. . . . . . . . . . . . . .  D ADDR   00D5H   A   
DIGIT?246. . . . . . . . . . . .  D ADDR   0001H   R   SEG=?DT?INPUT_DIGITS?KEYBOARD
DIGIT?349. . . . . . . . . . . .  D ADDR   0001H   R   SEG=?DT?INPUT_BITS?KEYBOARD
DIGIT?454. . . . . . . . . . . .  D ADDR   0002H   R   SEG=?DT?INPUT_DISPLAY_TIME?KEYBOARD
DIGITS . . . . . . . . . . . . .  C ADDR   -----       EXT
DISPLAY_TIME . . . . . . . . . .  D ADDR   -----       EXT
DISPLAY_WRONG_INPUT_BITS . . . .  C ADDR   -----       EXT
DISPLAY_WRONG_INPUT_DISPLAY_TIME  C ADDR   -----       EXT
DPH. . . . . . . . . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . . . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . . . . . . . . .  B ADDR   00A8H.7 A   
EIE1 . . . . . . . . . . . . . .  D ADDR   00E6H   A   
EIE2 . . . . . . . . . . . . . .  D ADDR   00E7H   A   
EIP1 . . . . . . . . . . . . . .  D ADDR   00F6H   A   
EIP2 . . . . . . . . . . . . . .  D ADDR   00F7H   A   
EMI0CF . . . . . . . . . . . . .  D ADDR   00A3H   A   
EMI0CN . . . . . . . . . . . . .  D ADDR   00AFH   A   
EMI0TC . . . . . . . . . . . . .  D ADDR   00A1H   A   
ENSMB. . . . . . . . . . . . . .  B ADDR   00C0H.6 A   
ES0. . . . . . . . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . . . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . . . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . . . . . . . . .  B ADDR   00A8H.5 A   
EX0. . . . . . . . . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . . . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . . . . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . . . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . . . . . . . . .  B ADDR   00D0H.5 A   
F1 . . . . . . . . . . . . . . .  B ADDR   00D0H.1 A   
FLACL. . . . . . . . . . . . . .  D ADDR   00B7H   A   
FLSCL. . . . . . . . . . . . . .  D ADDR   00B6H   A   
F_OR_E . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?F_OR_E?KEYBOARD
I?245. . . . . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?INPUT_DIGITS?KEYBOARD
I?348. . . . . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?INPUT_BITS?KEYBOARD
I?452. . . . . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?INPUT_DISPLAY_TIME?KEYBOARD
IE . . . . . . . . . . . . . . .  D ADDR   00A8H   A   
IE0. . . . . . . . . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . . . . . . . . .  B ADDR   0088H.3 A   
INPUTS . . . . . . . . . . . . .  X ADDR   0000H   R   SEG=?XD?KEYBOARD
INPUT_BITS . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?INPUT_BITS?KEYBOARD
INPUT_DIGITS . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?INPUT_DIGITS?KEYBOARD
INPUT_DISPLAY_TIME . . . . . . .  C ADDR   0000H   R   SEG=?PR?INPUT_DISPLAY_TIME?KEYBOARD
IP . . . . . . . . . . . . . . .  D ADDR   00B8H   A   
IT0. . . . . . . . . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . . . . . . . . .  B ADDR   0088H.2 A   
J?453. . . . . . . . . . . . . .  D ADDR   0001H   R   SEG=?DT?INPUT_DISPLAY_TIME?KEYBOARD
KEYBOARD . . . . . . . . . . . .  N NUMB   -----       
KEYL?041 . . . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?KSCAN?KEYBOARD
KSCAN. . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?KSCAN?KEYBOARD
LCD_EN . . . . . . . . . . . . .  B ADDR   00A0H.7 A   
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    34

LCD_RS . . . . . . . . . . . . .  B ADDR   00A0H.5 A   
LCD_RW . . . . . . . . . . . . .  B ADDR   00A0H.6 A   
MODF . . . . . . . . . . . . . .  B ADDR   00F8H.5 A   
MSTEN. . . . . . . . . . . . . .  B ADDR   00F8H.1 A   
OSCICN . . . . . . . . . . . . .  D ADDR   00B2H   A   
OSCXCN . . . . . . . . . . . . .  D ADDR   00B1H   A   
OV . . . . . . . . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . . . . . . . . .  D ADDR   0080H   A   
P0MDOUT. . . . . . . . . . . . .  D ADDR   00A4H   A   
P1 . . . . . . . . . . . . . . .  D ADDR   0090H   A   
P1MDIN . . . . . . . . . . . . .  D ADDR   00BDH   A   
P1MDOUT. . . . . . . . . . . . .  D ADDR   00A5H   A   
P2 . . . . . . . . . . . . . . .  D ADDR   00A0H   A   
P2MDOUT. . . . . . . . . . . . .  D ADDR   00A6H   A   
P3 . . . . . . . . . . . . . . .  D ADDR   00B0H   A   
P3IF . . . . . . . . . . . . . .  D ADDR   00ADH   A   
P3MDOUT. . . . . . . . . . . . .  D ADDR   00A7H   A   
P4 . . . . . . . . . . . . . . .  D ADDR   0084H   A   
P5 . . . . . . . . . . . . . . .  D ADDR   0085H   A   
P6 . . . . . . . . . . . . . . .  D ADDR   0086H   A   
P7 . . . . . . . . . . . . . . .  D ADDR   0096H   A   
P74OUT . . . . . . . . . . . . .  D ADDR   00B5H   A   
PCA0CN . . . . . . . . . . . . .  D ADDR   00D8H   A   
PCA0CPH0 . . . . . . . . . . . .  D ADDR   00FAH   A   
PCA0CPH1 . . . . . . . . . . . .  D ADDR   00FBH   A   
PCA0CPH2 . . . . . . . . . . . .  D ADDR   00FCH   A   
PCA0CPH3 . . . . . . . . . . . .  D ADDR   00FDH   A   
PCA0CPH4 . . . . . . . . . . . .  D ADDR   00FEH   A   
PCA0CPL0 . . . . . . . . . . . .  D ADDR   00EAH   A   
PCA0CPL1 . . . . . . . . . . . .  D ADDR   00EBH   A   
PCA0CPL2 . . . . . . . . . . . .  D ADDR   00ECH   A   
PCA0CPL3 . . . . . . . . . . . .  D ADDR   00EDH   A   
PCA0CPL4 . . . . . . . . . . . .  D ADDR   00EEH   A   
PCA0CPM0 . . . . . . . . . . . .  D ADDR   00DAH   A   
PCA0CPM1 . . . . . . . . . . . .  D ADDR   00DBH   A   
PCA0CPM2 . . . . . . . . . . . .  D ADDR   00DCH   A   
PCA0CPM3 . . . . . . . . . . . .  D ADDR   00DDH   A   
PCA0CPM4 . . . . . . . . . . . .  D ADDR   00DEH   A   
PCA0H. . . . . . . . . . . . . .  D ADDR   00F9H   A   
PCA0L. . . . . . . . . . . . . .  D ADDR   00E9H   A   
PCA0MD . . . . . . . . . . . . .  D ADDR   00D9H   A   
PCON . . . . . . . . . . . . . .  D ADDR   0087H   A   
PS . . . . . . . . . . . . . . .  B ADDR   00B8H.4 A   
PSCTL. . . . . . . . . . . . . .  D ADDR   008FH   A   
PSW. . . . . . . . . . . . . . .  D ADDR   00D0H   A   
PT0. . . . . . . . . . . . . . .  B ADDR   00B8H.1 A   
PT1. . . . . . . . . . . . . . .  B ADDR   00B8H.3 A   
PT2. . . . . . . . . . . . . . .  B ADDR   00B8H.5 A   
PX0. . . . . . . . . . . . . . .  B ADDR   00B8H.0 A   
PX1. . . . . . . . . . . . . . .  B ADDR   00B8H.2 A   
RB80 . . . . . . . . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . . . . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . . . . . . . . .  D ADDR   00CAH   A   
RCAP4H . . . . . . . . . . . . .  D ADDR   00E5H   A   
RCAP4L . . . . . . . . . . . . .  D ADDR   00E4H   A   
RCLK0. . . . . . . . . . . . . .  B ADDR   00C8H.5 A   
REF0CN . . . . . . . . . . . . .  D ADDR   00D1H   A   
REN0 . . . . . . . . . . . . . .  B ADDR   0098H.4 A   
RI0. . . . . . . . . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . . . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . . . . . . . . .  B ADDR   00D0H.4 A   
RSTSRC . . . . . . . . . . . . .  D ADDR   00EFH   A   
RXOVRN . . . . . . . . . . . . .  B ADDR   00F8H.4 A   
SADDR0 . . . . . . . . . . . . .  D ADDR   00A9H   A   
SADDR1 . . . . . . . . . . . . .  D ADDR   00F3H   A   
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    35

SADEN0 . . . . . . . . . . . . .  D ADDR   00B9H   A   
SADEN1 . . . . . . . . . . . . .  D ADDR   00AEH   A   
SBUF0. . . . . . . . . . . . . .  D ADDR   0099H   A   
SBUF1. . . . . . . . . . . . . .  D ADDR   00F2H   A   
SCON0. . . . . . . . . . . . . .  D ADDR   0098H   A   
SCON1. . . . . . . . . . . . . .  D ADDR   00F1H   A   
SI . . . . . . . . . . . . . . .  B ADDR   00C0H.3 A   
SLVSEL . . . . . . . . . . . . .  B ADDR   00F8H.2 A   
SM00 . . . . . . . . . . . . . .  B ADDR   0098H.7 A   
SM10 . . . . . . . . . . . . . .  B ADDR   0098H.6 A   
SM20 . . . . . . . . . . . . . .  B ADDR   0098H.5 A   
SMB0ADR. . . . . . . . . . . . .  D ADDR   00C3H   A   
SMB0CN . . . . . . . . . . . . .  D ADDR   00C0H   A   
SMB0CR . . . . . . . . . . . . .  D ADDR   00CFH   A   
SMB0DAT. . . . . . . . . . . . .  D ADDR   00C2H   A   
SMB0STA. . . . . . . . . . . . .  D ADDR   00C1H   A   
SMBFTE . . . . . . . . . . . . .  B ADDR   00C0H.1 A   
SMBTOE . . . . . . . . . . . . .  B ADDR   00C0H.0 A   
SP . . . . . . . . . . . . . . .  D ADDR   0081H   A   
SPI0CFG. . . . . . . . . . . . .  D ADDR   009AH   A   
SPI0CKR. . . . . . . . . . . . .  D ADDR   009DH   A   
SPI0CN . . . . . . . . . . . . .  D ADDR   00F8H   A   
SPI0DAT. . . . . . . . . . . . .  D ADDR   009BH   A   
SPIEN. . . . . . . . . . . . . .  B ADDR   00F8H.0 A   
SPIF . . . . . . . . . . . . . .  B ADDR   00F8H.7 A   
STA. . . . . . . . . . . . . . .  B ADDR   00C0H.5 A   
STATE?247. . . . . . . . . . . .  B ADDR   0000H.0 R   SEG=?BI?INPUT_DIGITS?KEYBOARD
STATE?351. . . . . . . . . . . .  B ADDR   0000H.0 R   SEG=?BI?INPUT_BITS?KEYBOARD
STATE?457. . . . . . . . . . . .  B ADDR   0000H.0 R   SEG=?BI?INPUT_DISPLAY_TIME?KEYBOARD
STATE?558. . . . . . . . . . . .  B ADDR   0000H.0 R   SEG=?BI?WAIT_INPUT?KEYBOARD
STO. . . . . . . . . . . . . . .  B ADDR   00C0H.4 A   
T2CON. . . . . . . . . . . . . .  D ADDR   00C8H   A   
T4CON. . . . . . . . . . . . . .  D ADDR   00C9H   A   
TB80 . . . . . . . . . . . . . .  B ADDR   0098H.3 A   
TCLK0. . . . . . . . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . . . . . . . . .  D ADDR   0088H   A   
TEMP?043 . . . . . . . . . . . .  D ADDR   0001H   R   SEG=?DT?KSCAN?KEYBOARD
TEMP?456 . . . . . . . . . . . .  D ADDR   0008H   R   SEG=?DT?INPUT_DISPLAY_TIME?KEYBOARD
TF0. . . . . . . . . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . . . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . . . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . . . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . . . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . . . . . . . . .  D ADDR   00CDH   A   
TH4. . . . . . . . . . . . . . .  D ADDR   00F5H   A   
TI0. . . . . . . . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . . . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . . . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . . . . . . . . .  D ADDR   00CCH   A   
TL4. . . . . . . . . . . . . . .  D ADDR   00F4H   A   
TMOD . . . . . . . . . . . . . .  D ADDR   0089H   A   
TMR3CN . . . . . . . . . . . . .  D ADDR   0091H   A   
TMR3H. . . . . . . . . . . . . .  D ADDR   0095H   A   
TMR3L. . . . . . . . . . . . . .  D ADDR   0094H   A   
TMR3RLH. . . . . . . . . . . . .  D ADDR   0093H   A   
TMR3RLL. . . . . . . . . . . . .  D ADDR   0092H   A   
TR0. . . . . . . . . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . . . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . . . . . . . . .  B ADDR   00C8H.2 A   
TXBSY. . . . . . . . . . . . . .  B ADDR   00F8H.3 A   
WAIT_INPUT . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?WAIT_INPUT?KEYBOARD
WCOL . . . . . . . . . . . . . .  B ADDR   00F8H.6 A   
WDTCN. . . . . . . . . . . . . .  D ADDR   00FFH   A   
WRONG_DISPLAY_TIME . . . . . . .  C ADDR   0000H   R   SEG=?PR?WRONG_DISPLAY_TIME?KEYBOARD
WRONG_INPUT_BITS . . . . . . . .  C ADDR   0000H   R   SEG=?PR?WRONG_INPUT_BITS?KEYBOARD
XBR0 . . . . . . . . . . . . . .  D ADDR   00E1H   A   
A51 MACRO ASSEMBLER  KEYBOARD                                                             12/22/2023 09:21:57 PAGE    36

XBR1 . . . . . . . . . . . . . .  D ADDR   00E2H   A   
XBR2 . . . . . . . . . . . . . .  D ADDR   00E3H   A   
_?IX1000 . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?CO?KEYBOARD
_?IX1001 . . . . . . . . . . . .  C ADDR   0002H   R   SEG=?CO?KEYBOARD
_DELAY_MS. . . . . . . . . . . .  C ADDR   -----       EXT
_PRINT_CHAR. . . . . . . . . . .  C ADDR   -----       EXT


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
