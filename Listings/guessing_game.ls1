A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\guessing_game.OBJ
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE .\Objects\guessing_game.src PR(.\Listings\guessing_game.ls1) EP DEBUG

LOC  OBJ            LINE     SOURCE

                       1     ; .\Objects\guessing_game.SRC generated from: C”Ô—‘∞Ê±æ\guessing_game.c
                       2     ; COMPILER INVOKED BY:
                       3     ;        C:\Keil_v5\C51\BIN\C51.EXE C”Ô—‘∞Ê±æ\guessing_game.c OPTIMIZE(8,SPEED) BROWSE DEBU
                             G OBJECTEXTEND PRINT(.\Listings\guessing_game.lst) TABS(2) SRC(.\Objects\guessing_game.SRC)
                       4     
                       5     $nomod51 
                       6     
                       7     NAME    GUESSING_GAME
                       8     
  00DA                 9     CCF2    BIT     0D8H.2
  009B                10     TB80    BIT     098H.3
  009D                11     SPI0CKR DATA    09DH
  00DB                12     CCF3    BIT     0D8H.3
  0080                13     P0      DATA    080H
  00F8                14     SPIEN   BIT     0F8H.0
  00DC                15     CCF4    BIT     0D8H.4
  009F                16     SM00    BIT     098H.7
  0090                17     P1      DATA    090H
  00C2                18     AA      BIT     0C0H.2
  009E                19     SM10    BIT     098H.6
  00FF                20     WDTCN   DATA    0FFH
  00A0                21     P2      DATA    0A0H
  009D                22     SM20    BIT     098H.5
  00BC                23     ADC0CF  DATA    0BCH
  00B0                24     P3      DATA    0B0H
  00D6                25     AC      BIT     0D0H.6
  00AB                26     ADC1CF  DATA    0ABH
  0084                27     P4      DATA    084H
  00E6                28     EIE1    DATA    0E6H
  0085                29     P5      DATA    085H
  00AF                30     EA      BIT     0A8H.7
  00E7                31     EIE2    DATA    0E7H
  0086                32     P6      DATA    086H
  0096                33     P7      DATA    096H
  008F                34     PSCTL   DATA    08FH
  00F9                35     MSTEN   BIT     0F8H.1
  00DF                36     CF      BIT     0D8H.7
  00E8                37     ADC0CN  DATA    0E8H
  00D4                38     DAC0CN  DATA    0D4H
  00D7                39     DAC1CN  DATA    0D7H
  00AA                40     ADC1CN  DATA    0AAH
  00A4                41     P0MDOUT DATA    0A4H
  00A5                42     P1MDOUT DATA    0A5H
  00A8                43     IE      DATA    0A8H
  00A6                44     P2MDOUT DATA    0A6H
  00A7                45     P3MDOUT DATA    0A7H
  0093                46     TMR3RLH DATA    093H
  00F6                47     EIP1    DATA    0F6H
  00F7                48     EIP2    DATA    0F7H
  00FA                49     PCA0CPH0        DATA    0FAH
  00FB                50     PCA0CPH1        DATA    0FBH
  00AD                51     P3IF    DATA    0ADH
  0092                52     TMR3RLL DATA    092H
  00FC                53     PCA0CPH2        DATA    0FCH
  00DE                54     CR      BIT     0D8H.6
  00FD                55     PCA0CPH3        DATA    0FDH
  00CE                56     EXF2    BIT     0C8H.6
  009C                57     REN0    BIT     098H.4
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE     2

  00FE                58     PCA0CPH4        DATA    0FEH
  00EA                59     PCA0CPL0        DATA    0EAH
  00A3                60     EMI0CF  DATA    0A3H
  00EB                61     PCA0CPL1        DATA    0EBH
  00DA                62     PCA0CPM0        DATA    0DAH
  00D9                63     PCA0MD  DATA    0D9H
  00D8                64     PCA0CN  DATA    0D8H
  00EC                65     PCA0CPL2        DATA    0ECH
  00DB                66     PCA0CPM1        DATA    0DBH
  00ED                67     PCA0CPL3        DATA    0EDH
  00DC                68     PCA0CPM2        DATA    0DCH
  00B8                69     IP      DATA    0B8H
  00EE                70     PCA0CPL4        DATA    0EEH
  00DD                71     PCA0CPM3        DATA    0DDH
  00DE                72     PCA0CPM4        DATA    0DEH
  00FB                73     TXBSY   BIT     0F8H.3
  00D7                74     CY      BIT     0D0H.7
  00C3                75     SI      BIT     0C0H.3
  00E1                76     XBR0    DATA    0E1H
  00B9                77     SADEN0  DATA    0B9H
  00E2                78     XBR1    DATA    0E2H
  00AF                79     EMI0CN  DATA    0AFH
  00AE                80     SADEN1  DATA    0AEH
  00E3                81     XBR2    DATA    0E3H
  00D1                82     REF0CN  DATA    0D1H
  00A9                83     SADDR0  DATA    0A9H
  00F3                84     SADDR1  DATA    0F3H
  00BA                85     AMX0CF  DATA    0BAH
  00ED                86     AD0INT  BIT     0E8H.5
  00CB                87     RCAP2H  DATA    0CBH
  00BC                88     PS      BIT     0B8H.4
  0081                89     SP      DATA    081H
  00E5                90     RCAP4H  DATA    0E5H
  00A1                91     EMI0TC  DATA    0A1H
  00D2                92     OV      BIT     0D0H.2
  00C0                93     SMB0CN  DATA    0C0H
  00CA                94     RCAP2L  DATA    0CAH
  00FD                95     MODF    BIT     0F8H.5
  00E4                96     RCAP4L  DATA    0E4H
  00CF                97     SMB0CR  DATA    0CFH
  009E                98     CPT0CN  DATA    09EH
  00BD                99     P1MDIN  DATA    0BDH
  009F               100     CPT1CN  DATA    09FH
  00F8               101     SPI0CN  DATA    0F8H
  0087               102     PCON    DATA    087H
  00FF               103     SPIF    BIT     0F8H.7
  00B5               104     P74OUT  DATA    0B5H
  0089               105     TMOD    DATA    089H
  0088               106     TCON    DATA    088H
  00FE               107     WCOL    BIT     0F8H.6
  00BB               108     AMX0SL  DATA    0BBH
  00AC               109     AMX1SL  DATA    0ACH
  0091               110     TMR3CN  DATA    091H
  0089               111     IE0     BIT     088H.1
  008B               112     IE1     BIT     088H.3
  00F0               113     B       DATA    0F0H
  00D3               114     DAC0H   DATA    0D3H
  00BF               115     ADC0H   DATA    0BFH
  00B2               116     OSCICN  DATA    0B2H
  00D6               117     DAC1H   DATA    0D6H
  00C1               118     SMBFTE  BIT     0C0H.1
  00C7               119     BUSY    BIT     0C0H.7
  00D2               120     DAC0L   DATA    0D2H
  00BE               121     ADC0L   DATA    0BEH
  00D5               122     DAC1L   DATA    0D5H
  00A7               123     LCD_EN  BIT     0A0H.7
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE     3

  00E0               124     ACC     DATA    0E0H
  00AC               125     ES0     BIT     0A8H.4
  00EF               126     AD0EN   BIT     0E8H.7
  00C9               127     CT2     BIT     0C8H.1
  00A9               128     ET0     BIT     0A8H.1
  00AB               129     ET1     BIT     0A8H.3
  008D               130     TF0     BIT     088H.5
  00AD               131     ET2     BIT     0A8H.5
  0098               132     RI0     BIT     098H.0
  008F               133     TF1     BIT     088H.7
  00CF               134     TF2     BIT     0C8H.7
  00C0               135     SMBTOE  BIT     0C0H.0
  008C               136     TH0     DATA    08CH
  00A8               137     EX0     BIT     0A8H.0
  0099               138     TI0     BIT     098H.1
  0088               139     IT0     BIT     088H.0
  00F9               140     PCA0H   DATA    0F9H
  008D               141     TH1     DATA    08DH
  00AA               142     EX1     BIT     0A8H.2
  008A               143     IT1     BIT     088H.2
  00CD               144     TH2     DATA    0CDH
  00D0               145     P       BIT     0D0H.0
  00F5               146     TH4     DATA    0F5H
  00B1               147     OSCXCN  DATA    0B1H
  008A               148     TL0     DATA    08AH
  00E9               149     PCA0L   DATA    0E9H
  008B               150     TL1     DATA    08BH
  00CC               151     TL2     DATA    0CCH
  00B9               152     PT0     BIT     0B8H.1
  00F4               153     TL4     DATA    0F4H
  00D3               154     RS0     BIT     0D0H.3
  00BB               155     PT1     BIT     0B8H.3
  00D4               156     RS1     BIT     0D0H.4
  00BD               157     PT2     BIT     0B8H.5
  008C               158     TR0     BIT     088H.4
  00EE               159     AD0TM   BIT     0E8H.6
  008E               160     TR1     BIT     088H.6
  00CA               161     TR2     BIT     0C8H.2
  00B8               162     PX0     BIT     0B8H.0
  00A5               163     LCD_RS  BIT     0A0H.5
  00BA               164     PX1     BIT     0B8H.2
  00FA               165     SLVSEL  BIT     0F8H.2
  0083               166     DPH     DATA    083H
  00A6               167     LCD_RW  BIT     0A0H.6
  00CD               168     RCLK0   BIT     0C8H.5
  00C5               169     ADC0GTH DATA    0C5H
  00CC               170     TCLK0   BIT     0C8H.4
  0082               171     DPL     DATA    082H
  00C4               172     ADC0GTL DATA    0C4H
  0099               173     SBUF0   DATA    099H
  00F2               174     SBUF1   DATA    0F2H
  00C7               175     ADC0LTH DATA    0C7H
  00CB               176     EXEN2   BIT     0C8H.3
  00EF               177     RSTSRC  DATA    0EFH
  00B7               178     FLACL   DATA    0B7H
  00C8               179     CPRL2   BIT     0C8H.0
  0098               180     SCON0   DATA    098H
  00F1               181     SCON1   DATA    0F1H
  00C6               182     ADC0LTL DATA    0C6H
  00C8               183     T2CON   DATA    0C8H
  00C5               184     STA     BIT     0C0H.5
  00C9               185     T4CON   DATA    0C9H
  00C3               186     SMB0ADR DATA    0C3H
  00C2               187     SMB0DAT DATA    0C2H
  009A               188     SPI0CFG DATA    09AH
  0095               189     TMR3H   DATA    095H
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE     4

  008E               190     CKCON   DATA    08EH
  00FC               191     RXOVRN  BIT     0F8H.4
  0080               192     D0      BIT     080H.0
  0094               193     TMR3L   DATA    094H
  0081               194     D1      BIT     080H.1
  00E8               195     AD0LJST BIT     0E8H.0
  0082               196     D2      BIT     080H.2
  00D5               197     F0      BIT     0D0H.5
  00B6               198     FLSCL   DATA    0B6H
  0083               199     D3      BIT     080H.3
  00EA               200     AD0CM0  BIT     0E8H.2
  00D1               201     F1      BIT     0D0H.1
  00C4               202     STO     BIT     0C0H.4
  00C6               203     ENSMB   BIT     0C0H.6
  0084               204     D4      BIT     080H.4
  00EB               205     AD0CM1  BIT     0E8H.3
  009B               206     SPI0DAT DATA    09BH
  0085               207     D5      BIT     080H.5
  0086               208     D6      BIT     080H.6
  00E9               209     AD0WINT BIT     0E8H.1
  009C               210     ADC1    DATA    09CH
  0087               211     D7      BIT     080H.7
  00EC               212     AD0BUSY BIT     0E8H.4
  00D0               213     PSW     DATA    0D0H
  00D8               214     CCF0    BIT     0D8H.0
  009A               215     RB80    BIT     098H.2
  00C1               216     SMB0STA DATA    0C1H
  00D9               217     CCF1    BIT     0D8H.1
                     218     ?PR?check_digits?GUESSING_GAME           SEGMENT CODE 
                     219     ?PR?correct?GUESSING_GAME                SEGMENT CODE 
                     220     ?PR?error?GUESSING_GAME                  SEGMENT CODE 
                     221     ?PR?win?GUESSING_GAME                    SEGMENT CODE 
                     222     ?PR?lose?GUESSING_GAME                   SEGMENT CODE 
                     223     ?PR?guess_once?GUESSING_GAME             SEGMENT CODE 
                     224     ?DT?guess_once?GUESSING_GAME             SEGMENT DATA OVERLAYABLE 
                     225     ?BI?guess_once?GUESSING_GAME             SEGMENT BIT OVERLAYABLE 
                     226     ?PR?guess_one_level?GUESSING_GAME        SEGMENT CODE 
                     227     ?BI?guess_one_level?GUESSING_GAME        SEGMENT BIT OVERLAYABLE 
                     228     ?PR?main_menu?GUESSING_GAME              SEGMENT CODE 
                     229     ?PR?mode_select?GUESSING_GAME            SEGMENT CODE 
                     230     ?PR?begin_select?GUESSING_GAME           SEGMENT CODE 
                     231     ?PR?mode1?GUESSING_GAME                  SEGMENT CODE 
                     232     ?DT?mode1?GUESSING_GAME                  SEGMENT DATA OVERLAYABLE 
                     233     ?PR?mode2?GUESSING_GAME                  SEGMENT CODE 
                     234     ?PR?mode3?GUESSING_GAME                  SEGMENT CODE 
                     235     ?PR?acknowledgement?GUESSING_GAME        SEGMENT CODE 
                     236     ?PR?gussing_game?GUESSING_GAME           SEGMENT CODE 
                     237     ?PR?games?GUESSING_GAME                  SEGMENT CODE 
                     238     ?C_INITSEG           SEGMENT CODE 
                     239     ?CO?GUESSING_GAME    SEGMENT CODE 
                     240     ?XD?GUESSING_GAME    SEGMENT XDATA 
                     241     ?DT?GUESSING_GAME    SEGMENT DATA 
                     242             EXTRN   CODE (display_error)
                     243             EXTRN   CODE (display_input)
                     244             EXTRN   CODE (display_lose)
                     245             EXTRN   CODE (kscan)
                     246             EXTRN   CODE (display_main_menu)
                     247             EXTRN   CODE (input_digits)
                     248             EXTRN   CODE (display_acknowledgement)
                     249             EXTRN   CODE (input_display_time)
                     250             EXTRN   XDATA (inputs)
                     251             EXTRN   CODE (rand)
                     252             EXTRN   CODE (display_win)
                     253             EXTRN   CODE (input_bits)
                     254             EXTRN   CODE (display_begin_select)
                     255             EXTRN   CODE (display_random_digits)
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE     5

                     256             EXTRN   CODE (display_correct)
                     257             EXTRN   CODE (display_gussing_game)
                     258             EXTRN   CODE (display_mode_select)
                     259             EXTRN   CODE (f_or_e)
                     260             EXTRN   CODE (display_time_select)
                     261             EXTRN   CODE (display_bits_select)
                     262             EXTRN   CODE (?C?SIDIV)
                     263             PUBLIC  random_digits
                     264             PUBLIC  bits
                     265             PUBLIC  level_bits
                     266             PUBLIC  display_time
                     267             PUBLIC  level_display_time
                     268             PUBLIC  digits
                     269             PUBLIC  games
                     270             PUBLIC  gussing_game
                     271             PUBLIC  acknowledgement
                     272             PUBLIC  mode3
                     273             PUBLIC  mode2
                     274             PUBLIC  mode1
                     275             PUBLIC  begin_select
                     276             PUBLIC  mode_select
                     277             PUBLIC  main_menu
                     278             PUBLIC  ?guess_one_level?BIT
                     279             PUBLIC  guess_one_level
                     280             PUBLIC  guess_once
                     281             PUBLIC  lose
                     282             PUBLIC  win
                     283             PUBLIC  error
                     284             PUBLIC  correct
                     285             PUBLIC  check_digits
                     286     
----                 287             RSEG  ?DT?guess_once?GUESSING_GAME
0000                 288     ?guess_once?BYTE:
0000                 289           state?543:   DS   1
                     290     
----                 291             RSEG  ?BI?guess_once?GUESSING_GAME
0000                 292     ?guess_once?BIT:
0000                 293               a?541:   DBIT   1
0001                 294             ORG  1
0001                 295            temp?542:   DBIT   1
                     296     
----                 297             RSEG  ?BI?guess_one_level?GUESSING_GAME
0000                 298     ?guess_one_level?BIT:
0000                 299               b?644:   DBIT   1
0001                 300             ORG  1
0001                 301               a?645:   DBIT   1
                     302     
----                 303             RSEG  ?DT?mode1?GUESSING_GAME
0000                 304     ?mode1?BYTE:
0000                 305              i?1049:   DS   1
0001                 306             ORG  1
0001                 307          state?1050:   DS   1
                     308     
----                 309             RSEG  ?XD?GUESSING_GAME
0000                 310     level_display_time:   DS   20
0014                 311          level_bits:   DS   10
001E                 312       random_digits:   DS   64
                     313     
----                 314             RSEG  ?DT?GUESSING_GAME
0000                 315        display_time:   DS   2
0002                 316                bits:   DS   1
                     317     
----                 318             RSEG  ?CO?GUESSING_GAME
0000                 319     digits:
0000 30313233        320             DB  '0' ,'1' ,'2' ,'3' ,'4' ,'5' ,'6' ,'7' ,'8' ,'9' 
0004 34353637                
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE     6

0008 3839                    
000A 41424344        321             DB  'A' ,'B' ,'C' ,'D' ,'E' ,'F' ,000H
000E 454600                  
                     322     
                     323     
                     324     
----                 325             RSEG  ?C_INITSEG
0000 60              326             DB      060H
0001 40              327             DB      040H
0002 0000     F      328             DW      random_digits
0004 00              329             DB      000H
0005 00000000        330             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
0009 00000000                
000D 0000                    
000F 00000000        331             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
0013 00000000                
0017 0000                    
0019 00000000        332             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
001D 00000000                
0021 0000                    
0023 00000000        333             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
0027 00000000                
002B 0000                    
002D 00000000        334             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
0031 00000000                
0035 0000                    
0037 00000000        335             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
003B 00000000                
003F 0000                    
0041 000000          336             DB  000H,000H,000H
                     337     
                     338     
0044 01              339             DB      001H
0045 00       F      340             DB      bits
0046 00              341             DB      000H
                     342     
0047 02              343             DB      002H
0048 00       F      344             DB      display_time
0049 0000            345             DW      00000H
                     346     
004B 4A              347             DB      04AH
004C 0000     F      348             DW      level_bits
004E 01              349             DB      001H
004F 02              350             DB      002H
0050 03              351             DB      003H
0051 04              352             DB      004H
0052 05              353             DB      005H
0053 06              354             DB      006H
0054 07              355             DB      007H
0055 08              356             DB      008H
0056 09              357             DB      009H
0057 0A              358             DB      00AH
                     359     
0058 54              360             DB      054H
0059 0000     F      361             DW      level_display_time
005B 00C8            362             DW      000C8H
005D 0190            363             DW      00190H
005F 0258            364             DW      00258H
0061 0320            365             DW      00320H
0063 03E8            366             DW      003E8H
0065 04B0            367             DW      004B0H
0067 0578            368             DW      00578H
0069 0640            369             DW      00640H
006B 0708            370             DW      00708H
006D 07D0            371             DW      007D0H
                     372     
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE     7

                     373     ; #include "guessing_game.h" //∞¸∫¨≤¬ ”Œœ∑œ‡πÿµƒÕ∑Œƒº˛
                     374     ; unsigned char code digits[]="0123456789ABCDEF"; //∂®“Â“ª∏ˆ≥£¡ø ◊Èdigits£¨”√¿¥¥Ê¥¢16Ω¯÷∆µƒ
                              ◊÷µƒASCII¬Î
                     375     ; unsigned char xdata random_digits[64]={0}; //∂®“Â“ª∏ˆ¿©’π æ› ◊Èrandom_digits£¨”√¿¥¥Ê¥¢ÀÊª
                             ˙µƒ ◊÷£¨≥ı ºªØŒ™»´0
                     376     ; unsigned char bits=0; //∂®“Â“ª∏ˆ±‰¡øbits£¨”√¿¥¥Ê¥¢ ‰»ÎµƒŒª £¨≥ı ºªØŒ™0
                     377     ; unsigned int display_time=0; //∂®“Â“ª∏ˆ±‰¡ødisplay_time£¨”√¿¥¥Ê¥¢œ‘ æµƒ ±º‰£¨≥ı ºªØŒ™0
                     378     ; unsigned char xdata level_bits[10]={1,2,3,4,5,6,7,8,9,10}; //∂®“Â“ª∏ˆ¿©’π æ› ◊Èlevel_bits
                             £¨”√¿¥¥Ê¥¢≤ªÕ¨πÿø®µƒŒª 
                     379     ; unsigned int xdata level_display_time[10]={200,400,600,800,1000,1200,1400,1600,1800,2000}
                             ; //∂®“Â“ª∏ˆ¿©’π æ› ◊Èlevel_display_time£¨”√¿¥¥Ê¥¢≤ªÕ¨πÿø®µƒ æ›œ‘ æ ±º‰
                     380     ; bit check_digits(void) //∂®“Â“ª∏ˆ∫Ø check_digits£¨”√¿¥ºÏ≤È”√ªß ‰»Îµƒ ◊÷ «∑Ò∫ÕÀÊª˙µƒ ◊÷œ‡Õ¨
                     381     
----                 382             RSEG  ?PR?check_digits?GUESSING_GAME
0000                 383     check_digits:
                     384             USING   0
                     385                             ; SOURCE LINE # 8
                     386     ; {
                     387                             ; SOURCE LINE # 9
                     388     ;       unsigned char i=0; //∂®“Â“ª∏ˆ±‰¡øi£¨”√¿¥◊˜Œ™ ◊ÈµƒÀ˜“£¨≥ı ºªØŒ™0
                     389                             ; SOURCE LINE # 10
                     390     ;---- Variable 'i?040' assigned to Register 'R7' ----
0000 E4              391             CLR     A
0001 FF              392             MOV     R7,A
                     393     ;       for(i=0;i<64;i++) //—≠ª∑64¥Œ
                     394                             ; SOURCE LINE # 11
0002                 395     ?C0001:
                     396     ;       {
                     397                             ; SOURCE LINE # 12
                     398     ;               if(random_digits[i]!=inputs[i]) //»Áπ˚ ◊Èrandom_digitsµƒµ⁄i∏ˆ‘™Àÿ∫Õ ◊Èinput
                             sµƒµ⁄i∏ˆ‘™Àÿ≤ªœ‡µ»
                     399                             ; SOURCE LINE # 13
0002 7400     F      400             MOV     A,#LOW (inputs)
0004 2F              401             ADD     A,R7
0005 F582            402             MOV     DPL,A
0007 E4              403             CLR     A
0008 3400     F      404             ADDC    A,#HIGH (inputs)
000A F583            405             MOV     DPH,A
000C E0              406             MOVX    A,@DPTR
000D FE              407             MOV     R6,A
000E 7400     F      408             MOV     A,#LOW (random_digits)
0010 2F              409             ADD     A,R7
0011 F582            410             MOV     DPL,A
0013 E4              411             CLR     A
0014 3400     F      412             ADDC    A,#HIGH (random_digits)
0016 F583            413             MOV     DPH,A
0018 E0              414             MOVX    A,@DPTR
0019 B50604          415             CJNE    A,AR6,?C0002
                     416     ;               {
                     417                             ; SOURCE LINE # 14
                     418     ;                       break; //Ã¯≥ˆ—≠ª∑
                     419                             ; SOURCE LINE # 15
                     420     ;               }
                     421                             ; SOURCE LINE # 16
                     422     ;       }
                     423                             ; SOURCE LINE # 17
001C 0F              424             INC     R7
001D BF40E2          425             CJNE    R7,#040H,?C0001
0020                 426     ?C0002:
                     427     ;       if(i==64) //»Áπ˚iµ»”⁄64£¨±Ì æÀ˘”–µƒ‘™Àÿ∂ºœ‡µ»
                     428                             ; SOURCE LINE # 18
0020 BF4002          429             CJNE    R7,#040H,?C0005
                     430     ;       {
                     431                             ; SOURCE LINE # 19
                     432     ;               return 1; //∑µªÿ1£¨±Ì æ’»∑
                     433                             ; SOURCE LINE # 20
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE     8

0023 D3              434             SETB    C
0024 22              435             RET     
                     436     ;       }
                     437                             ; SOURCE LINE # 21
0025                 438     ?C0005:
                     439     ;       else //∑Ò‘Ú
                     440     ;       {
                     441                             ; SOURCE LINE # 23
                     442     ;               return 0; //∑µªÿ0£¨±Ì æ¥ÌŒÛ
                     443                             ; SOURCE LINE # 24
0025 C3              444             CLR     C
                     445     ;       }
                     446                             ; SOURCE LINE # 25
                     447     ; }
                     448                             ; SOURCE LINE # 26
0026                 449     ?C0006:
0026 22              450             RET     
                     451     ; END OF check_digits
                     452     
                     453     ; bit correct(void) //∂®“Â“ª∏ˆ∫Ø correct£¨”√¿¥œ‘ æ’»∑µƒª≠√Ê£¨≤¢µ»¥”√ªßµƒ—°‘Ò
                     454     
----                 455             RSEG  ?PR?correct?GUESSING_GAME
0000                 456     correct:
                     457             USING   0
                     458                             ; SOURCE LINE # 27
                     459     ; {
                     460                             ; SOURCE LINE # 28
                     461     ;       display_correct(); //µ˜”√display_correct∫Ø £¨œ‘ æ’»∑µƒª≠√Ê
                     462                             ; SOURCE LINE # 29
0000 120000   F      463             LCALL   display_correct
                     464     ;       return f_or_e(); //µ˜”√f_or_e∫Ø £¨∑µªÿ”√ªßµƒ—°‘Ò£¨F±Ì æºÃ–¯£¨E±Ì æ∑µªÿ
                     465                             ; SOURCE LINE # 30
0003 020000   F      466             LJMP    f_or_e
                     467     ; END OF correct
                     468     
                     469     ; }
                     470     ; bit error(void) //∂®“Â“ª∏ˆ∫Ø error£¨”√¿¥œ‘ æ¥ÌŒÛµƒª≠√Ê£¨≤¢µ»¥”√ªßµƒ—°‘Ò
                     471     
----                 472             RSEG  ?PR?error?GUESSING_GAME
0000                 473     error:
                     474             USING   0
                     475                             ; SOURCE LINE # 32
                     476     ; {
                     477                             ; SOURCE LINE # 33
                     478     ;       display_error(); //µ˜”√display_error∫Ø £¨œ‘ æ¥ÌŒÛµƒª≠√Ê
                     479                             ; SOURCE LINE # 34
0000 120000   F      480             LCALL   display_error
                     481     ;       return f_or_e(); //µ˜”√f_or_e∫Ø £¨∑µªÿ”√ªßµƒ—°‘Ò£¨F±Ì æ÷ÿ–¬ø™ º£¨E±Ì æ∑µªÿ
                     482                             ; SOURCE LINE # 35
0003 020000   F      483             LJMP    f_or_e
                     484     ; END OF error
                     485     
                     486     ; }
                     487     ; bit win(void) //∂®“Â“ª∏ˆ∫Ø win£¨”√¿¥œ‘ æ¥≥πÿ≥…π¶µƒª≠√Ê£¨≤¢µ»¥”√ªßµƒ—°‘Ò
                     488     
----                 489             RSEG  ?PR?win?GUESSING_GAME
0000                 490     win:
                     491             USING   0
                     492                             ; SOURCE LINE # 37
                     493     ; {
                     494                             ; SOURCE LINE # 38
                     495     ;       display_win(); //µ˜”√display_win∫Ø £¨œ‘ æ¥≥πÿ≥…π¶µƒª≠√Ê
                     496                             ; SOURCE LINE # 39
0000 120000   F      497             LCALL   display_win
                     498     ;       return f_or_e(); //µ˜”√f_or_e∫Ø £¨∑µªÿ”√ªßµƒ—°‘Ò£¨F±Ì æ‘Ÿ¥ŒÃÙ’Ω£¨E±Ì æ∑µªÿ
                     499                             ; SOURCE LINE # 40
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE     9

0003 020000   F      500             LJMP    f_or_e
                     501     ; END OF win
                     502     
                     503     ; }
                     504     ; bit lose(void) //∂®“Â“ª∏ˆ∫Ø lose£¨”√¿¥œ‘ æ¥≥πÿ ß∞‹µƒª≠√Ê£¨≤¢µ»¥”√ªßµƒ—°‘Ò
                     505     
----                 506             RSEG  ?PR?lose?GUESSING_GAME
0000                 507     lose:
                     508             USING   0
                     509                             ; SOURCE LINE # 42
                     510     ; {
                     511                             ; SOURCE LINE # 43
                     512     ;       display_lose(); //µ˜”√display_lose∫Ø £¨œ‘ æ¥≥πÿ ß∞‹µƒª≠√Ê
                     513                             ; SOURCE LINE # 44
0000 120000   F      514             LCALL   display_lose
                     515     ;       return f_or_e(); //µ˜”√f_or_e∫Ø £¨∑µªÿ”√ªßµƒ—°‘Ò£¨F±Ì æ‘Ÿ¥ŒÃÙ’Ω£¨E±Ì æ∑µªÿ
                     516                             ; SOURCE LINE # 45
0003 020000   F      517             LJMP    f_or_e
                     518     ; END OF lose
                     519     
                     520     ; }
                     521     ; unsigned char guess_once(void) //∂®“Â“ª∏ˆ∫Ø guess_once£¨”√¿¥Ω¯––“ª¥Œ≤¬ ”Œœ∑
                     522     
----                 523             RSEG  ?PR?guess_once?GUESSING_GAME
0000                 524     guess_once:
                     525             USING   0
                     526                             ; SOURCE LINE # 47
                     527     ; {
                     528                             ; SOURCE LINE # 48
                     529     ;       bit a,temp; //∂®“Â¡Ω∏ˆŒª±‰¡øa∫Õtemp£¨”√¿¥¥Ê¥¢ºÏ≤ÈΩ·π˚∫Õ”√ªß—°‘Ò
                     530     ;       unsigned char state=0; //∂®“Â“ª∏ˆ±‰¡østate£¨”√¿¥¥Ê¥¢”Œœ∑◊¥Ã¨£¨≥ı ºªØŒ™0
                     531                             ; SOURCE LINE # 50
0000 E4              532             CLR     A
0001 F500     F      533             MOV     state?543,A
                     534     ;       display_random_digits(); //µ˜”√display_random_digits∫Ø £¨œ‘ æÀÊª˙µƒ ◊÷
                     535                             ; SOURCE LINE # 51
0003 120000   F      536             LCALL   display_random_digits
                     537     ;       display_input(); //µ˜”√display_input∫Ø £¨œ‘ æ ‰»Îµƒª≠√Ê
                     538                             ; SOURCE LINE # 52
0006 120000   F      539             LCALL   display_input
                     540     ;       state=input_digits(); //µ˜”√input_digits∫Ø £¨ ‰»Î ◊÷£¨≤¢∏≥÷µ∏¯state
                     541                             ; SOURCE LINE # 53
0009 120000   F      542             LCALL   input_digits
000C E4              543             CLR     A
000D 33              544             RLC     A
000E F500     F      545             MOV     state?543,A
                     546     ;       if(state==1) //»Áπ˚stateµ»”⁄1£¨±Ì æ”√ªß—°‘Ò∑µªÿ
                     547                             ; SOURCE LINE # 54
0010 B40102          548             CJNE    A,#01H,?C0012
                     549     ;       {
                     550                             ; SOURCE LINE # 55
                     551     ;               return state; //∑µªÿstate
                     552                             ; SOURCE LINE # 56
0013 FF              553             MOV     R7,A
0014 22              554             RET     
                     555     ;       }
                     556                             ; SOURCE LINE # 57
0015                 557     ?C0012:
                     558     ;       a=check_digits(); //µ˜”√check_digits∫Ø £¨ºÏ≤È ◊÷ «∑Ò’»∑£¨≤¢∏≥÷µ∏¯a
                     559                             ; SOURCE LINE # 58
0015 120000   F      560             LCALL   check_digits
0018 9200     F      561             MOV     a?541,C
                     562     ;       if(a==1) //»Áπ˚aµ»”⁄1£¨±Ì æ’»∑
                     563                             ; SOURCE LINE # 59
001A 30000D   F      564             JNB     a?541,?C0014
                     565     ;       {
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    10

                     566                             ; SOURCE LINE # 60
                     567     ;               temp=correct(); //µ˜”√correct∫Ø £¨œ‘ æ’»∑µƒª≠√Ê£¨≤¢∏≥÷µ∏¯temp
                     568                             ; SOURCE LINE # 61
001D 120000   F      569             LCALL   correct
0020 9200     F      570             MOV     temp?542,C
                     571     ;               if(temp) //»Áπ˚tempŒ™’Ê£¨±Ì æ”√ªß—°‘Ò∑µªÿ
                     572                             ; SOURCE LINE # 62
0022 300002   F      573             JNB     temp?542,?C0015
                     574     ;               {
                     575                             ; SOURCE LINE # 63
                     576     ;                       state=1; //Ω´state∏≥÷µŒ™1
                     577                             ; SOURCE LINE # 64
                     578     ;                       return state; //∑µªÿstate
                     579                             ; SOURCE LINE # 65
0025 800B            580             SJMP    ?C0094
                     581     ;               }
                     582                             ; SOURCE LINE # 66
0027                 583     ?C0015:
                     584     ;               return 0; //∑Ò‘Ú∑µªÿ0£¨±Ì æºÃ–¯”Œœ∑
                     585                             ; SOURCE LINE # 67
0027 7F00            586             MOV     R7,#00H
0029 22              587             RET     
                     588     ;       }
                     589                             ; SOURCE LINE # 68
002A                 590     ?C0014:
                     591     ;       else //»Áπ˚aµ»”⁄0£¨±Ì æ¥ÌŒÛ
                     592     ;       {
                     593                             ; SOURCE LINE # 70
                     594     ;               temp=error(); //µ˜”√error∫Ø £¨œ‘ æ¥ÌŒÛµƒª≠√Ê£¨≤¢∏≥÷µ∏¯temp
                     595                             ; SOURCE LINE # 71
002A 120000   F      596             LCALL   error
002D 9200     F      597             MOV     temp?542,C
                     598     ;               if(temp) //»Áπ˚tempŒ™’Ê£¨±Ì æ”√ªß—°‘Ò∑µªÿ
                     599                             ; SOURCE LINE # 72
002F 300006   F      600             JNB     temp?542,?C0017
                     601     ;               {
                     602                             ; SOURCE LINE # 73
                     603     ;                       state=1; //Ω´state∏≥÷µŒ™1
                     604                             ; SOURCE LINE # 74
0032                 605     ?C0094:
0032 750001   F      606             MOV     state?543,#01H
                     607     ;                       return state; //∑µªÿstate
                     608                             ; SOURCE LINE # 75
0035 AF00     F      609             MOV     R7,state?543
0037 22              610             RET     
                     611     ;               }
                     612                             ; SOURCE LINE # 76
0038                 613     ?C0017:
                     614     ;               return 2; //∑Ò‘Ú∑µªÿ2£¨±Ì æ÷ÿ–¬ø™ º
                     615                             ; SOURCE LINE # 77
0038 7F02            616             MOV     R7,#02H
                     617     ;       }
                     618                             ; SOURCE LINE # 78
                     619     ; }
                     620                             ; SOURCE LINE # 79
003A                 621     ?C0013:
003A 22              622             RET     
                     623     ; END OF guess_once
                     624     
                     625     ; unsigned char guess_one_level(bit b) //∂®“Â“ª∏ˆ∫Ø guess_one_level£¨¥´»Î“ª∏ˆŒª±‰¡øb£¨”√¿¥Ω
                             ¯––“ª¥Œ¥≥πÿ”Œœ∑
                     626     
----                 627             RSEG  ?PR?guess_one_level?GUESSING_GAME
0000                 628     guess_one_level:
                     629             USING   0
                     630                             ; SOURCE LINE # 80
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    11

                     631     ; {
                     632                             ; SOURCE LINE # 81
                     633     ;       bit a; //∂®“Â“ª∏ˆŒª±‰¡øa£¨”√¿¥¥Ê¥¢ºÏ≤ÈΩ·π˚
                     634     ;       unsigned char state=0; //∂®“Â“ª∏ˆ±‰¡østate£¨”√¿¥¥Ê¥¢”Œœ∑◊¥Ã¨£¨≥ı ºªØŒ™0
                     635                             ; SOURCE LINE # 83
                     636     ;---- Variable 'state?646' assigned to Register 'R5' ----
0000 E4              637             CLR     A
0001 FD              638             MOV     R5,A
                     639     ;       display_random_digits(); //µ˜”√display_random_digits∫Ø £¨œ‘ æÀÊª˙µƒ ◊÷
                     640                             ; SOURCE LINE # 84
0002 120000   F      641             LCALL   display_random_digits
                     642     ;       display_input(); //µ˜”√display_input∫Ø £¨œ‘ æ ‰»Îµƒª≠√Ê
                     643                             ; SOURCE LINE # 85
0005 120000   F      644             LCALL   display_input
                     645     ;       state=input_digits(); //µ˜”√input_digits∫Ø £¨ ‰»Î ◊÷£¨≤¢∏≥÷µ∏¯state
                     646                             ; SOURCE LINE # 86
0008 120000   F      647             LCALL   input_digits
000B E4              648             CLR     A
000C 33              649             RLC     A
000D FD              650             MOV     R5,A
                     651     ;       if(state==1) //»Áπ˚stateµ»”⁄1£¨±Ì æ”√ªß—°‘Ò∑µªÿ
                     652                             ; SOURCE LINE # 87
000E BD0102          653             CJNE    R5,#01H,?C0018
                     654     ;       {
                     655                             ; SOURCE LINE # 88
                     656     ;               return state; //∑µªÿstate
                     657                             ; SOURCE LINE # 89
0011 FF              658             MOV     R7,A
0012 22              659             RET     
                     660     ;       }
                     661                             ; SOURCE LINE # 90
0013                 662     ?C0018:
                     663     ;       a=check_digits(); //µ˜”√check_digits∫Ø £¨ºÏ≤È ◊÷ «∑Ò’»∑£¨≤¢∏≥÷µ∏¯a
                     664                             ; SOURCE LINE # 91
0013 120000   F      665             LCALL   check_digits
0016 9200     F      666             MOV     a?645,C
                     667     ;       if(a==1) //»Áπ˚aµ»”⁄1£¨±Ì æ’»∑
                     668                             ; SOURCE LINE # 92
0018 30001F   F      669             JNB     a?645,?C0020
                     670     ;       {
                     671                             ; SOURCE LINE # 93
                     672     ;               if(b==0) //»Áπ˚bµ»”⁄0£¨±Ì æ≤ª «◊Ó∫Û“ªπÿ
                     673                             ; SOURCE LINE # 94
001B 20000E   F      674             JB      b?644,?C0021
                     675     ;               {
                     676                             ; SOURCE LINE # 95
                     677     ;                       state=correct(); //µ˜”√correct∫Ø £¨œ‘ æ’»∑µƒª≠√Ê£¨≤¢∏≥÷µ∏¯state
                     678                             ; SOURCE LINE # 96
001E 120000   F      679             LCALL   correct
0021 E4              680             CLR     A
0022 33              681             RLC     A
0023 FD              682             MOV     R5,A
                     683     ;                       if(state==1) //»Áπ˚stateµ»”⁄1£¨±Ì æ”√ªß—°‘Ò∑µªÿ
                     684                             ; SOURCE LINE # 97
0024 BD0102          685             CJNE    R5,#01H,?C0022
                     686     ;                       {
                     687                             ; SOURCE LINE # 98
                     688     ;                               return state; //∑µªÿstate
                     689                             ; SOURCE LINE # 99
0027 FF              690             MOV     R7,A
0028 22              691             RET     
                     692     ;                       }
                     693                             ; SOURCE LINE # 100
0029                 694     ?C0022:
                     695     ;                       else //∑Ò‘Ú
                     696     ;                       {
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    12

                     697                             ; SOURCE LINE # 102
                     698     ;                               return 2; //∑µªÿ2£¨±Ì æºÃ–¯”Œœ∑
                     699                             ; SOURCE LINE # 103
0029 7F02            700             MOV     R7,#02H
002B 22              701             RET     
                     702     ;                       }
                     703                             ; SOURCE LINE # 104
                     704     ;               }
                     705                             ; SOURCE LINE # 105
002C                 706     ?C0021:
                     707     ;               else //»Áπ˚bµ»”⁄1£¨±Ì æ «◊Ó∫Û“ªπÿ
                     708     ;               {
                     709                             ; SOURCE LINE # 107
                     710     ;                       state=win(); //µ˜”√win∫Ø £¨œ‘ æ¥≥πÿ≥…π¶µƒª≠√Ê£¨≤¢∏≥÷µ∏¯state
                     711                             ; SOURCE LINE # 108
002C 120000   F      712             LCALL   win
002F E4              713             CLR     A
0030 33              714             RLC     A
0031 FD              715             MOV     R5,A
                     716     ;                       if(state==1) //»Áπ˚stateµ»”⁄1£¨±Ì æ”√ªß—°‘Ò∑µªÿ
                     717                             ; SOURCE LINE # 109
0032 BD0102          718             CJNE    R5,#01H,?C0025
                     719     ;                       {
                     720                             ; SOURCE LINE # 110
                     721     ;                               return state; //∑µªÿstate
                     722                             ; SOURCE LINE # 111
0035 FF              723             MOV     R7,A
0036 22              724             RET     
                     725     ;                       }
                     726                             ; SOURCE LINE # 112
0037                 727     ?C0025:
                     728     ;                       else //∑Ò‘Ú
                     729     ;                       {
                     730                             ; SOURCE LINE # 114
                     731     ;                               return 0; //∑µªÿ0£¨±Ì æ‘Ÿ¥ŒÃÙ’Ω
                     732                             ; SOURCE LINE # 115
0037 7F00            733             MOV     R7,#00H
0039 22              734             RET     
                     735     ;                       }
                     736                             ; SOURCE LINE # 116
                     737     ;               }
                     738                             ; SOURCE LINE # 117
                     739     ;       }
                     740                             ; SOURCE LINE # 118
003A                 741     ?C0020:
                     742     ;       else //»Áπ˚aµ»”⁄0£¨±Ì æ¥ÌŒÛ
                     743     ;       {
                     744                             ; SOURCE LINE # 120
                     745     ;               state=lose(); //µ˜”√lose∫Ø £¨œ‘ æ¥≥πÿ ß∞‹µƒª≠√Ê£¨≤¢∏≥÷µ∏¯state
                     746                             ; SOURCE LINE # 121
003A 120000   F      747             LCALL   lose
003D E4              748             CLR     A
003E 33              749             RLC     A
                     750     ;               return state; //∑µªÿstate
                     751                             ; SOURCE LINE # 122
003F FF              752             MOV     R7,A
                     753     ;       }
                     754                             ; SOURCE LINE # 123
                     755     ; }
                     756                             ; SOURCE LINE # 124
0040                 757     ?C0019:
0040 22              758             RET     
                     759     ; END OF guess_one_level
                     760     
                     761     ; unsigned char main_menu(void) //∂®“Â“ª∏ˆ∫Ø main_menu£¨”√¿¥œ‘ æ÷˜≤Àµ•£¨≤¢∑µªÿ”√ªßµƒ—°‘Ò
                     762     
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    13

----                 763             RSEG  ?PR?main_menu?GUESSING_GAME
0000                 764     main_menu:
                     765             USING   0
                     766                             ; SOURCE LINE # 125
                     767     ; {
                     768                             ; SOURCE LINE # 126
                     769     ;       unsigned char temp; //∂®“Â“ª∏ˆ±‰¡øtemp£¨”√¿¥¥Ê¥¢”√ªßµƒ—°‘Ò
                     770     ;       display_main_menu(); //µ˜”√display_main_menu∫Ø £¨œ‘ æ÷˜≤Àµ•
                     771                             ; SOURCE LINE # 128
0000 120000   F      772             LCALL   display_main_menu
0003                 773     ?C0028:
                     774     ;       while(1) //Œﬁœﬁ—≠ª∑
                     775                             ; SOURCE LINE # 129
                     776     ;       {
                     777                             ; SOURCE LINE # 130
                     778     ;               temp=kscan(); //µ˜”√kscan∫Ø £¨…®√Ëº¸≈Ã ‰»Î£¨≤¢∏≥÷µ∏¯temp
                     779                             ; SOURCE LINE # 131
0003 120000   F      780             LCALL   kscan
                     781     ;---- Variable 'temp?747' assigned to Register 'R7' ----
                     782     ;               if(temp==0|temp==1|temp==14) //»Áπ˚tempµ»”⁄0ªÚ1ªÚ14£¨±Ì æ”––ßµƒ—°‘Ò
                     783                             ; SOURCE LINE # 132
0006 BF0104          784             CJNE    R7,#01H,?C0031
0009 7E01            785             MOV     R6,#01H
000B 8002            786             SJMP    ?C0032
000D                 787     ?C0031:
000D 7E00            788             MOV     R6,#00H
000F                 789     ?C0032:
000F EF              790             MOV     A,R7
0010 7004            791             JNZ     ?C0033
0012 7D01            792             MOV     R5,#01H
0014 8002            793             SJMP    ?C0034
0016                 794     ?C0033:
0016 7D00            795             MOV     R5,#00H
0018                 796     ?C0034:
0018 ED              797             MOV     A,R5
0019 4E              798             ORL     A,R6
001A FE              799             MOV     R6,A
001B BF0E04          800             CJNE    R7,#0EH,?C0035
001E 7D01            801             MOV     R5,#01H
0020 8002            802             SJMP    ?C0036
0022                 803     ?C0035:
0022 7D00            804             MOV     R5,#00H
0024                 805     ?C0036:
0024 ED              806             MOV     A,R5
0025 4E              807             ORL     A,R6
0026 60DB            808             JZ      ?C0028
                     809     ;               {
                     810                             ; SOURCE LINE # 133
                     811     ;                       break; //Ã¯≥ˆ—≠ª∑
                     812                             ; SOURCE LINE # 134
                     813     ;               }
                     814                             ; SOURCE LINE # 135
                     815     ;       }
                     816                             ; SOURCE LINE # 136
0028                 817     ?C0029:
                     818     ;       return temp; //∑µªÿtemp
                     819                             ; SOURCE LINE # 137
                     820     ; }
                     821                             ; SOURCE LINE # 138
0028 22              822             RET     
                     823     ; END OF main_menu
                     824     
                     825     ; unsigned char mode_select(void) //∂®“Â“ª∏ˆ∫Ø mode_select£¨”√¿¥œ‘ æƒ£ Ω—°‘Ò£¨≤¢∑µªÿ”√ªßµƒ—
                             °‘Ò
                     826     
----                 827             RSEG  ?PR?mode_select?GUESSING_GAME
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    14

0000                 828     mode_select:
                     829             USING   0
                     830                             ; SOURCE LINE # 139
                     831     ; {
                     832                             ; SOURCE LINE # 140
                     833     ;       unsigned char temp; //∂®“Â“ª∏ˆ±‰¡øtemp£¨”√¿¥¥Ê¥¢”√ªßµƒ—°‘Ò
                     834     ;       display_mode_select(); //µ˜”√display_mode_select∫Ø £¨œ‘ æƒ£ Ω—°‘Ò
                     835                             ; SOURCE LINE # 142
0000 120000   F      836             LCALL   display_mode_select
0003                 837     ?C0038:
                     838     ;       while(1) //Œﬁœﬁ—≠ª∑
                     839                             ; SOURCE LINE # 143
                     840     ;       {
                     841                             ; SOURCE LINE # 144
                     842     ;               temp=kscan(); //µ˜”√kscan∫Ø £¨…®√Ëº¸≈Ã ‰»Î£¨≤¢∏≥÷µ∏¯temp
                     843                             ; SOURCE LINE # 145
0003 120000   F      844             LCALL   kscan
                     845     ;---- Variable 'temp?848' assigned to Register 'R7' ----
                     846     ;               if(temp==0|temp==1|temp==2|temp==14) //»Áπ˚tempµ»”⁄0ªÚ1ªÚ2ªÚ14£¨±Ì æ”––ßµƒ—
                             °‘Ò
                     847                             ; SOURCE LINE # 146
0006 BF0104          848             CJNE    R7,#01H,?C0041
0009 7E01            849             MOV     R6,#01H
000B 8002            850             SJMP    ?C0042
000D                 851     ?C0041:
000D 7E00            852             MOV     R6,#00H
000F                 853     ?C0042:
000F EF              854             MOV     A,R7
0010 7004            855             JNZ     ?C0043
0012 7D01            856             MOV     R5,#01H
0014 8002            857             SJMP    ?C0044
0016                 858     ?C0043:
0016 7D00            859             MOV     R5,#00H
0018                 860     ?C0044:
0018 ED              861             MOV     A,R5
0019 4E              862             ORL     A,R6
001A FE              863             MOV     R6,A
001B BF0204          864             CJNE    R7,#02H,?C0045
001E 7D01            865             MOV     R5,#01H
0020 8002            866             SJMP    ?C0046
0022                 867     ?C0045:
0022 7D00            868             MOV     R5,#00H
0024                 869     ?C0046:
0024 ED              870             MOV     A,R5
0025 4E              871             ORL     A,R6
0026 FE              872             MOV     R6,A
0027 BF0E04          873             CJNE    R7,#0EH,?C0047
002A 7D01            874             MOV     R5,#01H
002C 8002            875             SJMP    ?C0048
002E                 876     ?C0047:
002E 7D00            877             MOV     R5,#00H
0030                 878     ?C0048:
0030 ED              879             MOV     A,R5
0031 4E              880             ORL     A,R6
0032 60CF            881             JZ      ?C0038
                     882     ;               {
                     883                             ; SOURCE LINE # 147
                     884     ;                       break; //Ã¯≥ˆ—≠ª∑
                     885                             ; SOURCE LINE # 148
                     886     ;               }
                     887                             ; SOURCE LINE # 149
                     888     ;       }
                     889                             ; SOURCE LINE # 150
0034                 890     ?C0039:
                     891     ;       return temp; //∑µªÿtemp
                     892                             ; SOURCE LINE # 151
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    15

                     893     ; }
                     894                             ; SOURCE LINE # 152
0034 22              895             RET     
                     896     ; END OF mode_select
                     897     
                     898     ; bit begin_select(void) //∂®“Â“ª∏ˆ∫Ø begin_select£¨”√¿¥œ‘ æø™ º—°‘Ò£¨≤¢∑µªÿ”√ªßµƒ—°‘Ò
                     899     
----                 900             RSEG  ?PR?begin_select?GUESSING_GAME
0000                 901     begin_select:
                     902             USING   0
                     903                             ; SOURCE LINE # 153
                     904     ; {
                     905                             ; SOURCE LINE # 154
                     906     ;       display_begin_select(); //µ˜”√display_begin_select∫Ø £¨œ‘ æø™ º—°‘Ò
                     907                             ; SOURCE LINE # 155
0000 120000   F      908             LCALL   display_begin_select
                     909     ;       return f_or_e(); //µ˜”√f_or_e∫Ø £¨∑µªÿ”√ªßµƒ—°‘Ò£¨F±Ì æø™ º”Œœ∑£¨E±Ì æ∑µªÿ
                     910                             ; SOURCE LINE # 156
0003 020000   F      911             LJMP    f_or_e
                     912     ; END OF begin_select
                     913     
                     914     ; }
                     915     ; void mode1(void) //∂®“Â“ª∏ˆ∫Ø mode1£¨”√¿¥Ω¯––¥≥πÿƒ£ Ωµƒ”Œœ∑
                     916     
----                 917             RSEG  ?PR?mode1?GUESSING_GAME
0000                 918     mode1:
                     919             USING   0
                     920                             ; SOURCE LINE # 158
                     921     ; {
                     922                             ; SOURCE LINE # 159
                     923     ;       unsigned char i=0; //∂®“Â“ª∏ˆ±‰¡øi£¨”√¿¥◊˜Œ™πÿø®µƒÀ˜“£¨≥ı ºªØŒ™0
                     924                             ; SOURCE LINE # 160
0000 E4              925             CLR     A
0001 F500     F      926             MOV     i?1049,A
0003                 927     ?C0051:
                     928     ;       unsigned char state; //∂®“Â“ª∏ˆ±‰¡østate£¨”√¿¥¥Ê¥¢”Œœ∑◊¥Ã¨
                     929     ;       while(1) //Œﬁœﬁ—≠ª∑
                     930                             ; SOURCE LINE # 162
                     931     ;       {
                     932                             ; SOURCE LINE # 163
                     933     ;       for(i=0;i<10;i++) //—≠ª∑10¥Œ£¨±Ì æ10∏ˆπÿø®
                     934                             ; SOURCE LINE # 164
0003 E4              935             CLR     A
0004 F500     F      936             MOV     i?1049,A
0006                 937     ?C0053:
                     938     ;       {
                     939                             ; SOURCE LINE # 165
                     940     ;               bits=level_bits[i]; //Ω´ ◊Èlevel_bitsµƒµ⁄i∏ˆ‘™Àÿ∏≥÷µ∏¯bits£¨±Ì æµ±«∞πÿø®µƒŒ
                             ª 
                     941                             ; SOURCE LINE # 166
0006 7400     F      942             MOV     A,#LOW (level_bits)
0008 2500     F      943             ADD     A,i?1049
000A F582            944             MOV     DPL,A
000C E4              945             CLR     A
000D 3400     F      946             ADDC    A,#HIGH (level_bits)
000F F583            947             MOV     DPH,A
0011 E0              948             MOVX    A,@DPTR
0012 F500     F      949             MOV     bits,A
                     950     ;               display_time=level_display_time[i]; //Ω´ ◊Èlevel_display_timeµƒµ⁄i∏ˆ‘™Àÿ∏≥÷
                             µ∏¯display_time£¨±Ì æµ±«∞πÿø®µƒœ‘ æ ±º‰
                     951                             ; SOURCE LINE # 167
0014 E500     F      952             MOV     A,i?1049
0016 25E0            953             ADD     A,ACC
0018 2400     F      954             ADD     A,#LOW (level_display_time)
001A F582            955             MOV     DPL,A
001C E4              956             CLR     A
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    16

001D 3400     F      957             ADDC    A,#HIGH (level_display_time)
001F F583            958             MOV     DPH,A
0021 E0              959             MOVX    A,@DPTR
0022 F500     F      960             MOV     display_time,A
0024 A3              961             INC     DPTR
0025 E0              962             MOVX    A,@DPTR
0026 F500     F      963             MOV     display_time+01H,A
                     964     ;               if(begin_select()) //µ˜”√begin_select∫Ø £¨œ‘ æø™ º—°‘Ò£¨≤¢≈–∂œ”√ªßµƒ—°‘Ò
                     965                             ; SOURCE LINE # 168
0028 120000   F      966             LCALL   begin_select
002B 4025            967             JC      ?C0057
                     968     ;               {
                     969                             ; SOURCE LINE # 169
                     970     ;                       return; //»Áπ˚”√ªß—°‘Ò∑µªÿ£¨Ω· ¯∫Ø 
                     971     ;               }
                     972                             ; SOURCE LINE # 171
                     973     ;               state=guess_one_level(i==9); //µ˜”√guess_one_level∫Ø £¨¥´»Îi «∑Òµ»”⁄9£¨±Ì æ
                              «∑Ò «◊Ó∫Û“ªπÿ£¨≤¢∏≥÷µ∏¯state
                     974                             ; SOURCE LINE # 172
002D E500     F      975             MOV     A,i?1049
002F B40903          976             CJNE    A,#09H,?C0058
0032 D3              977             SETB    C
0033 8001            978             SJMP    ?C0059
0035                 979     ?C0058:
0035 C3              980             CLR     C
0036                 981     ?C0059:
0036 9200     F      982             MOV     ?guess_one_level?BIT,C
0038 120000   F      983             LCALL   guess_one_level
003B 8F00     F      984             MOV     state?1050,R7
                     985     ;               if(state==1) //»Áπ˚stateµ»”⁄1£¨±Ì æ”√ªß—°‘Ò∑µªÿ
                     986                             ; SOURCE LINE # 173
003D E500     F      987             MOV     A,state?1050
003F 6401            988             XRL     A,#01H
0041 600F            989             JZ      ?C0057
                     990     ;               {               
                     991                             ; SOURCE LINE # 174
                     992     ;                       return; //Ω· ¯∫Ø 
                     993     ;               }
                     994                             ; SOURCE LINE # 176
                     995     ;               if(state==0) //»Áπ˚stateµ»”⁄0£¨±Ì æ”√ªß—°‘Ò‘Ÿ¥ŒÃÙ’Ω
                     996                             ; SOURCE LINE # 177
0043 E500     F      997             MOV     A,state?1050
0045 60BC            998             JZ      ?C0051
                     999     ;               {               
                    1000                             ; SOURCE LINE # 178
                    1001     ;                       break; //Ã¯≥ˆ—≠ª∑£¨÷ÿ–¬ø™ º”Œœ∑
                    1002                             ; SOURCE LINE # 179
                    1003     ;               }
                    1004                             ; SOURCE LINE # 180
                    1005     ;       }
                    1006                             ; SOURCE LINE # 181
0047 0500     F     1007             INC     i?1049
0049 E500     F     1008             MOV     A,i?1049
004B C3             1009             CLR     C
004C 940A           1010             SUBB    A,#0AH
004E 40B6           1011             JC      ?C0053
0050 80B1           1012             SJMP    ?C0051
                    1013     ;       }
                    1014                             ; SOURCE LINE # 182
                    1015     ; }
                    1016                             ; SOURCE LINE # 183
0052                1017     ?C0057:
0052 22             1018             RET     
                    1019     ; END OF mode1
                    1020     
                    1021     ; void mode2(void) //∂®“Â“ª∏ˆ∫Ø mode2£¨”√¿¥Ω¯––¡∑œ∞ƒ£ Ωµƒ”Œœ∑
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    17

                    1022     
----                1023             RSEG  ?PR?mode2?GUESSING_GAME
0000                1024     mode2:
                    1025             USING   0
                    1026                             ; SOURCE LINE # 184
                    1027     ; {
                    1028                             ; SOURCE LINE # 185
                    1029     ;       while(1) //Œﬁœﬁ—≠ª∑
                    1030                             ; SOURCE LINE # 186
                    1031     ;       {
                    1032                             ; SOURCE LINE # 187
                    1033     ;       display_bits_select(); //µ˜”√display_bits_select∫Ø £¨œ‘ æŒª —°‘Ò
                    1034                             ; SOURCE LINE # 188
0000 120000   F     1035             LCALL   display_bits_select
                    1036     ;       if(input_bits()==1) //µ˜”√input_bits∫Ø £¨ ‰»ÎŒª £¨≤¢≈–∂œ∑µªÿ÷µ
                    1037                             ; SOURCE LINE # 189
0003 120000   F     1038             LCALL   input_bits
0006 4016           1039             JC      ?C0065
                    1040     ;       {
                    1041                             ; SOURCE LINE # 190
                    1042     ;               return; //»Áπ˚∑µªÿ1£¨±Ì æ”√ªß—°‘Ò∑µªÿ£¨Ω· ¯∫Ø 
                    1043     ;       }
                    1044                             ; SOURCE LINE # 192
                    1045     ;       display_time_select(); //µ˜”√display_time_select∫Ø £¨œ‘ æ ±º‰—°‘Ò
                    1046                             ; SOURCE LINE # 193
0008 120000   F     1047             LCALL   display_time_select
                    1048     ;       if(input_display_time()==1) //µ˜”√input_display_time∫Ø £¨ ‰»Î ±º‰£¨≤¢≈–∂œ∑µªÿ÷µ
                    1049                             ; SOURCE LINE # 194
000B 120000   F     1050             LCALL   input_display_time
000E 400E           1051             JC      ?C0065
                    1052     ;       {
                    1053                             ; SOURCE LINE # 195
                    1054     ;               return; //»Áπ˚∑µªÿ1£¨±Ì æ”√ªß—°‘Ò∑µªÿ£¨Ω· ¯∫Ø 
                    1055     ;       }
                    1056                             ; SOURCE LINE # 197
                    1057     ;       display_begin_select(); //µ˜”√display_begin_select∫Ø £¨œ‘ æø™ º—°‘Ò
                    1058                             ; SOURCE LINE # 198
0010 120000   F     1059             LCALL   display_begin_select
0013                1060     ?C0067:
                    1061     ;       while(1) //Œﬁœﬁ—≠ª∑
                    1062                             ; SOURCE LINE # 199
                    1063     ;       {
                    1064                             ; SOURCE LINE # 200
                    1065     ;       if(begin_select()) //µ˜”√begin_select∫Ø £¨œ‘ æø™ º—°‘Ò£¨≤¢≈–∂œ”√ªßµƒ—°‘Ò
                    1066                             ; SOURCE LINE # 201
0013 120000   F     1067             LCALL   begin_select
0016 4006           1068             JC      ?C0065
                    1069     ;       {
                    1070                             ; SOURCE LINE # 202
                    1071     ;               return; //»Áπ˚”√ªß—°‘Ò∑µªÿ£¨Ω· ¯∫Ø 
                    1072     ;       }
                    1073                             ; SOURCE LINE # 204
                    1074     ;       if(guess_once()==1) //µ˜”√guess_once∫Ø £¨Ω¯––“ª¥Œ≤¬ ”Œœ∑£¨≤¢≈–∂œ∑µªÿ÷µ
                    1075                             ; SOURCE LINE # 205
0018 120000   F     1076             LCALL   guess_once
001B BF01F5         1077             CJNE    R7,#01H,?C0067
                    1078     ;       {               
                    1079                             ; SOURCE LINE # 206
                    1080     ;               return; //»Áπ˚∑µªÿ1£¨±Ì æ”√ªß—°‘Ò∑µªÿ£¨Ω· ¯∫Ø 
                    1081     ;       }
                    1082                             ; SOURCE LINE # 208
                    1083     ;       }
                    1084                             ; SOURCE LINE # 209
                    1085     ;       }
                    1086                             ; SOURCE LINE # 210
                    1087     ; }
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    18

                    1088                             ; SOURCE LINE # 211
001E                1089     ?C0065:
001E 22             1090             RET     
                    1091     ; END OF mode2
                    1092     
                    1093     ; void mode3(void) //∂®“Â“ª∏ˆ∫Ø mode3£¨”√¿¥Ω¯––ÀÊª˙ƒ£ Ωµƒ”Œœ∑
                    1094     
----                1095             RSEG  ?PR?mode3?GUESSING_GAME
0000                1096     mode3:
                    1097             USING   0
                    1098                             ; SOURCE LINE # 212
                    1099     ; {
                    1100                             ; SOURCE LINE # 213
0000                1101     ?C0071:
                    1102     ;       while(1) //Œﬁœﬁ—≠ª∑
                    1103                             ; SOURCE LINE # 214
                    1104     ;       {
                    1105                             ; SOURCE LINE # 215
                    1106     ;       bits=1+rand()%8; //Ω´1º”…œ0µΩ7µƒÀÊª˙ ∏≥÷µ∏¯bits£¨±Ì æÀÊª˙µƒŒª 
                    1107                             ; SOURCE LINE # 216
0000 120000   F     1108             LCALL   rand
0003 7C00           1109             MOV     R4,#00H
0005 7D08           1110             MOV     R5,#08H
0007 120000   F     1111             LCALL   ?C?SIDIV
000A ED             1112             MOV     A,R5
000B 04             1113             INC     A
000C F500     F     1114             MOV     bits,A
                    1115     ;       display_time=bits*200+rand()%101; //Ω´bits≥À“‘200º”…œ0µΩ100µƒÀÊª˙ ∏≥÷µ∏¯display_tim
                             e£¨±Ì æÀÊª˙µƒœ‘ æ ±º‰
                    1116                             ; SOURCE LINE # 217
000E 120000   F     1117             LCALL   rand
0011 7C00           1118             MOV     R4,#00H
0013 7D65           1119             MOV     R5,#065H
0015 120000   F     1120             LCALL   ?C?SIDIV
0018 E500     F     1121             MOV     A,bits
001A 75F0C8         1122             MOV     B,#0C8H
001D A4             1123             MUL     AB
001E AEF0           1124             MOV     R6,B
0020 2D             1125             ADD     A,R5
0021 F500     F     1126             MOV     display_time+01H,A
0023 EE             1127             MOV     A,R6
0024 3C             1128             ADDC    A,R4
0025 F500     F     1129             MOV     display_time,A
                    1130     ;       if(begin_select()) //µ˜”√begin_select∫Ø £¨œ‘ æø™ º—°‘Ò£¨≤¢≈–∂œ”√ªßµƒ—°‘Ò
                    1131                             ; SOURCE LINE # 218
0027 120000   F     1132             LCALL   begin_select
002A 4006           1133             JC      ?C0074
                    1134     ;       {
                    1135                             ; SOURCE LINE # 219
                    1136     ;               return; //»Áπ˚”√ªß—°‘Ò∑µªÿ£¨Ω· ¯∫Ø 
                    1137     ;       }
                    1138                             ; SOURCE LINE # 221
                    1139     ;       if(guess_once()==1) //µ˜”√guess_once∫Ø £¨Ω¯––“ª¥Œ≤¬ ”Œœ∑£¨≤¢≈–∂œ∑µªÿ÷µ
                    1140                             ; SOURCE LINE # 222
002C 120000   F     1141             LCALL   guess_once
002F BF01CE         1142             CJNE    R7,#01H,?C0071
                    1143     ;       {               
                    1144                             ; SOURCE LINE # 223
                    1145     ;               return; //»Áπ˚∑µªÿ1£¨±Ì æ”√ªß—°‘Ò∑µªÿ£¨Ω· ¯∫Ø 
                    1146     ;       }
                    1147                             ; SOURCE LINE # 225
                    1148     ;       }
                    1149                             ; SOURCE LINE # 226
                    1150     ; }
                    1151                             ; SOURCE LINE # 227
0032                1152     ?C0074:
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    19

0032 22             1153             RET     
                    1154     ; END OF mode3
                    1155     
                    1156     ; void acknowledgement(void) //∂®“Â“ª∏ˆ∫Ø acknowledgement£¨”√¿¥œ‘ æ÷¬–ªµƒª≠√Ê
                    1157     
----                1158             RSEG  ?PR?acknowledgement?GUESSING_GAME
0000                1159     acknowledgement:
                    1160             USING   0
                    1161                             ; SOURCE LINE # 228
                    1162     ; {
                    1163                             ; SOURCE LINE # 229
                    1164     ;       display_acknowledgement(); //µ˜”√display_acknowledgement∫Ø £¨œ‘ æ÷¬–ªµƒª≠√Ê
                    1165                             ; SOURCE LINE # 230
0000 020000   F     1166             LJMP    display_acknowledgement
                    1167     ; END OF acknowledgement
                    1168     
                    1169     ; }
                    1170     ; void gussing_game(void) //∂®“Â“ª∏ˆ∫Ø gussing_game£¨”√¿¥Ω¯––≤¬ ”Œœ∑
                    1171     
----                1172             RSEG  ?PR?gussing_game?GUESSING_GAME
0000                1173     gussing_game:
                    1174             USING   0
                    1175                             ; SOURCE LINE # 232
                    1176     ; {
                    1177                             ; SOURCE LINE # 233
0000                1178     ?C0077:
                    1179     ;       unsigned char mode; //∂®“Â“ª∏ˆ±‰¡ømode£¨”√¿¥¥Ê¥¢”Œœ∑ƒ£ Ω
                    1180     ;       while(1) //Œﬁœﬁ—≠ª∑
                    1181                             ; SOURCE LINE # 235
                    1182     ;       {
                    1183                             ; SOURCE LINE # 236
                    1184     ;               mode=mode_select(); //µ˜”√mode_select∫Ø £¨œ‘ æƒ£ Ω—°‘Ò£¨≤¢∏≥÷µ∏¯mode
                    1185                             ; SOURCE LINE # 237
0000 120000   F     1186             LCALL   mode_select
                    1187     ;---- Variable 'mode?1451' assigned to Register 'R7' ----
                    1188     ;               if(mode==14) //»Áπ˚modeµ»”⁄14£¨±Ì æ”√ªß—°‘Ò∑µªÿ
                    1189                             ; SOURCE LINE # 238
0003 EF             1190             MOV     A,R7
0004 640E           1191             XRL     A,#0EH
0006 601A           1192             JZ      ?C0085
                    1193     ;               {
                    1194                             ; SOURCE LINE # 239
                    1195     ;                       break; //Ã¯≥ˆ—≠ª∑
                    1196                             ; SOURCE LINE # 240
                    1197     ;               }       
                    1198                             ; SOURCE LINE # 241
                    1199     ;               switch(mode) //∏˘æ›modeµƒ÷µ—°‘Ò≤ªÕ¨µƒ∑÷÷ß
                    1200                             ; SOURCE LINE # 242
0008 EF             1201             MOV     A,R7
0009 14             1202             DEC     A
000A 600C           1203             JZ      ?C0082
000C 14             1204             DEC     A
000D 600E           1205             JZ      ?C0083
000F 2402           1206             ADD     A,#02H
0011 70ED           1207             JNZ     ?C0077
                    1208     ;               {
                    1209                             ; SOURCE LINE # 243
                    1210     ;                       case 0: 
                    1211                             ; SOURCE LINE # 244
0013                1212     ?C0081:
                    1213     ;                               mode1(); //»Áπ˚modeµ»”⁄0£¨µ˜”√mode1∫Ø £¨Ω¯––¥≥πÿƒ£ Ωµƒ”Œœ∑
                    1214                             ; SOURCE LINE # 245
0013 120000   F     1215             LCALL   mode1
                    1216     ;                               break;
                    1217                             ; SOURCE LINE # 246
0016 80E8           1218             SJMP    ?C0077
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    20

                    1219     ;                       case 1: 
                    1220                             ; SOURCE LINE # 247
0018                1221     ?C0082:
                    1222     ;                               mode2(); //»Áπ˚modeµ»”⁄1£¨µ˜”√mode2∫Ø £¨Ω¯––¡∑œ∞ƒ£ Ωµƒ”Œœ∑
                    1223                             ; SOURCE LINE # 248
0018 120000   F     1224             LCALL   mode2
                    1225     ;                               break;
                    1226                             ; SOURCE LINE # 249
001B 80E3           1227             SJMP    ?C0077
                    1228     ;                       case 2: 
                    1229                             ; SOURCE LINE # 250
001D                1230     ?C0083:
                    1231     ;                               mode3(); //»Áπ˚modeµ»”⁄2£¨µ˜”√mode3∫Ø £¨Ω¯––ÀÊª˙ƒ£ Ωµƒ”Œœ∑
                    1232                             ; SOURCE LINE # 251
001D 120000   F     1233             LCALL   mode3
                    1234     ;                               break;
                    1235                             ; SOURCE LINE # 252
0020 80DE           1236             SJMP    ?C0077
                    1237     ;                       default:
                    1238                             ; SOURCE LINE # 253
                    1239     ;                               break;
                    1240                             ; SOURCE LINE # 254
                    1241     ;               }
                    1242                             ; SOURCE LINE # 255
                    1243     ;       }
                    1244                             ; SOURCE LINE # 256
                    1245     ; }
                    1246                             ; SOURCE LINE # 257
0022                1247     ?C0085:
0022 22             1248             RET     
                    1249     ; END OF gussing_game
                    1250     
                    1251     ; void games(void) //∂®“Â“ª∏ˆ∫Ø games£¨”√¿¥Ω¯––”Œœ∑
                    1252     
----                1253             RSEG  ?PR?games?GUESSING_GAME
0000                1254     games:
                    1255             USING   0
                    1256                             ; SOURCE LINE # 258
                    1257     ; {
                    1258                             ; SOURCE LINE # 259
                    1259     ;       unsigned char menu; //∂®“Â“ª∏ˆ±‰¡ømenu£¨”√¿¥¥Ê¥¢÷˜≤Àµ•µƒ—°‘Ò
                    1260     ;       display_gussing_game(); //µ˜”√display_gussing_game∫Ø £¨œ‘ æ≤¬ ”Œœ∑µƒLOGO
                    1261                             ; SOURCE LINE # 261
0000 120000   F     1262             LCALL   display_gussing_game
0003                1263     ?C0086:
                    1264     ;       while(1) //Œﬁœﬁ—≠ª∑
                    1265                             ; SOURCE LINE # 262
                    1266     ;       {
                    1267                             ; SOURCE LINE # 263
                    1268     ;               menu=main_menu(); //µ˜”√main_menu∫Ø £¨œ‘ æ÷˜≤Àµ•£¨≤¢∏≥÷µ∏¯menu
                    1269                             ; SOURCE LINE # 264
0003 120000   F     1270             LCALL   main_menu
                    1271     ;---- Variable 'menu?1552' assigned to Register 'R7' ----
                    1272     ;               if(menu==14) //»Áπ˚menuµ»”⁄14£¨±Ì æ”√ªß—°‘ÒÕÀ≥ˆ
                    1273                             ; SOURCE LINE # 265
0006 EF             1274             MOV     A,R7
0007 640E           1275             XRL     A,#0EH
0009 6011           1276             JZ      ?C0093
                    1277     ;               {
                    1278                             ; SOURCE LINE # 266
                    1279     ;                       break; //Ã¯≥ˆ—≠ª∑
                    1280                             ; SOURCE LINE # 267
                    1281     ;               }       
                    1282                             ; SOURCE LINE # 268
                    1283     ;       switch(menu) //∏˘æ›menuµƒ÷µ—°‘Ò≤ªÕ¨µƒ∑÷÷ß
                    1284                             ; SOURCE LINE # 269
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    21

000B EF             1285             MOV     A,R7
000C 14             1286             DEC     A
000D 6008           1287             JZ      ?C0091
000F 04             1288             INC     A
0010 70F1           1289             JNZ     ?C0086
                    1290     ;       {
                    1291                             ; SOURCE LINE # 270
                    1292     ;               case 0: 
                    1293                             ; SOURCE LINE # 271
0012                1294     ?C0090:
                    1295     ;                       gussing_game(); //»Áπ˚menuµ»”⁄0£¨µ˜”√gussing_game∫Ø £¨Ω¯––≤¬ ”Œœ∑
                    1296                             ; SOURCE LINE # 272
0012 120000   F     1297             LCALL   gussing_game
                    1298     ;                       break;
                    1299                             ; SOURCE LINE # 273
0015 80EC           1300             SJMP    ?C0086
                    1301     ;               case 1: 
                    1302                             ; SOURCE LINE # 274
0017                1303     ?C0091:
                    1304     ;                       acknowledgement(); //»Áπ˚menuµ»”⁄1£¨µ˜”√acknowledgement∫Ø £¨œ‘ æ÷¬–
                             ªµƒª≠√Ê
                    1305                             ; SOURCE LINE # 275
0017 120000   F     1306             LCALL   acknowledgement
                    1307     ;                       break;
                    1308                             ; SOURCE LINE # 276
001A 80E7           1309             SJMP    ?C0086
                    1310     ;               default:
                    1311                             ; SOURCE LINE # 277
                    1312     ;                       break;
                    1313                             ; SOURCE LINE # 278
                    1314     ;       }
                    1315                             ; SOURCE LINE # 279
                    1316     ;       }
                    1317                             ; SOURCE LINE # 280
                    1318     ; }
                    1319                             ; SOURCE LINE # 281
001C                1320     ?C0093:
001C 22             1321             RET     
                    1322     ; END OF games
                    1323     
                    1324             END
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    22

SYMBOL TABLE LISTING
------ ----- -------


N A M E                            T Y P E  V A L U E   ATTRIBUTES

?BI?GUESS_ONCE?GUESSING_GAME. . .  B SEG    0002H       REL=UNIT
?BI?GUESS_ONE_LEVEL?GUESSING_GAME  B SEG    0002H       REL=UNIT
?C0001. . . . . . . . . . . . . .  C ADDR   0002H   R   SEG=?PR?CHECK_DIGITS?GUESSING_GAME
?C0002. . . . . . . . . . . . . .  C ADDR   0020H   R   SEG=?PR?CHECK_DIGITS?GUESSING_GAME
?C0005. . . . . . . . . . . . . .  C ADDR   0025H   R   SEG=?PR?CHECK_DIGITS?GUESSING_GAME
?C0006. . . . . . . . . . . . . .  C ADDR   0026H   R   SEG=?PR?CHECK_DIGITS?GUESSING_GAME
?C0012. . . . . . . . . . . . . .  C ADDR   0015H   R   SEG=?PR?GUESS_ONCE?GUESSING_GAME
?C0013. . . . . . . . . . . . . .  C ADDR   003AH   R   SEG=?PR?GUESS_ONCE?GUESSING_GAME
?C0014. . . . . . . . . . . . . .  C ADDR   002AH   R   SEG=?PR?GUESS_ONCE?GUESSING_GAME
?C0015. . . . . . . . . . . . . .  C ADDR   0027H   R   SEG=?PR?GUESS_ONCE?GUESSING_GAME
?C0017. . . . . . . . . . . . . .  C ADDR   0038H   R   SEG=?PR?GUESS_ONCE?GUESSING_GAME
?C0018. . . . . . . . . . . . . .  C ADDR   0013H   R   SEG=?PR?GUESS_ONE_LEVEL?GUESSING_GAME
?C0019. . . . . . . . . . . . . .  C ADDR   0040H   R   SEG=?PR?GUESS_ONE_LEVEL?GUESSING_GAME
?C0020. . . . . . . . . . . . . .  C ADDR   003AH   R   SEG=?PR?GUESS_ONE_LEVEL?GUESSING_GAME
?C0021. . . . . . . . . . . . . .  C ADDR   002CH   R   SEG=?PR?GUESS_ONE_LEVEL?GUESSING_GAME
?C0022. . . . . . . . . . . . . .  C ADDR   0029H   R   SEG=?PR?GUESS_ONE_LEVEL?GUESSING_GAME
?C0025. . . . . . . . . . . . . .  C ADDR   0037H   R   SEG=?PR?GUESS_ONE_LEVEL?GUESSING_GAME
?C0028. . . . . . . . . . . . . .  C ADDR   0003H   R   SEG=?PR?MAIN_MENU?GUESSING_GAME
?C0029. . . . . . . . . . . . . .  C ADDR   0028H   R   SEG=?PR?MAIN_MENU?GUESSING_GAME
?C0031. . . . . . . . . . . . . .  C ADDR   000DH   R   SEG=?PR?MAIN_MENU?GUESSING_GAME
?C0032. . . . . . . . . . . . . .  C ADDR   000FH   R   SEG=?PR?MAIN_MENU?GUESSING_GAME
?C0033. . . . . . . . . . . . . .  C ADDR   0016H   R   SEG=?PR?MAIN_MENU?GUESSING_GAME
?C0034. . . . . . . . . . . . . .  C ADDR   0018H   R   SEG=?PR?MAIN_MENU?GUESSING_GAME
?C0035. . . . . . . . . . . . . .  C ADDR   0022H   R   SEG=?PR?MAIN_MENU?GUESSING_GAME
?C0036. . . . . . . . . . . . . .  C ADDR   0024H   R   SEG=?PR?MAIN_MENU?GUESSING_GAME
?C0038. . . . . . . . . . . . . .  C ADDR   0003H   R   SEG=?PR?MODE_SELECT?GUESSING_GAME
?C0039. . . . . . . . . . . . . .  C ADDR   0034H   R   SEG=?PR?MODE_SELECT?GUESSING_GAME
?C0041. . . . . . . . . . . . . .  C ADDR   000DH   R   SEG=?PR?MODE_SELECT?GUESSING_GAME
?C0042. . . . . . . . . . . . . .  C ADDR   000FH   R   SEG=?PR?MODE_SELECT?GUESSING_GAME
?C0043. . . . . . . . . . . . . .  C ADDR   0016H   R   SEG=?PR?MODE_SELECT?GUESSING_GAME
?C0044. . . . . . . . . . . . . .  C ADDR   0018H   R   SEG=?PR?MODE_SELECT?GUESSING_GAME
?C0045. . . . . . . . . . . . . .  C ADDR   0022H   R   SEG=?PR?MODE_SELECT?GUESSING_GAME
?C0046. . . . . . . . . . . . . .  C ADDR   0024H   R   SEG=?PR?MODE_SELECT?GUESSING_GAME
?C0047. . . . . . . . . . . . . .  C ADDR   002EH   R   SEG=?PR?MODE_SELECT?GUESSING_GAME
?C0048. . . . . . . . . . . . . .  C ADDR   0030H   R   SEG=?PR?MODE_SELECT?GUESSING_GAME
?C0051. . . . . . . . . . . . . .  C ADDR   0003H   R   SEG=?PR?MODE1?GUESSING_GAME
?C0053. . . . . . . . . . . . . .  C ADDR   0006H   R   SEG=?PR?MODE1?GUESSING_GAME
?C0057. . . . . . . . . . . . . .  C ADDR   0052H   R   SEG=?PR?MODE1?GUESSING_GAME
?C0058. . . . . . . . . . . . . .  C ADDR   0035H   R   SEG=?PR?MODE1?GUESSING_GAME
?C0059. . . . . . . . . . . . . .  C ADDR   0036H   R   SEG=?PR?MODE1?GUESSING_GAME
?C0065. . . . . . . . . . . . . .  C ADDR   001EH   R   SEG=?PR?MODE2?GUESSING_GAME
?C0067. . . . . . . . . . . . . .  C ADDR   0013H   R   SEG=?PR?MODE2?GUESSING_GAME
?C0071. . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?MODE3?GUESSING_GAME
?C0074. . . . . . . . . . . . . .  C ADDR   0032H   R   SEG=?PR?MODE3?GUESSING_GAME
?C0077. . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?GUSSING_GAME?GUESSING_GAME
?C0081. . . . . . . . . . . . . .  C ADDR   0013H   R   SEG=?PR?GUSSING_GAME?GUESSING_GAME
?C0082. . . . . . . . . . . . . .  C ADDR   0018H   R   SEG=?PR?GUSSING_GAME?GUESSING_GAME
?C0083. . . . . . . . . . . . . .  C ADDR   001DH   R   SEG=?PR?GUSSING_GAME?GUESSING_GAME
?C0085. . . . . . . . . . . . . .  C ADDR   0022H   R   SEG=?PR?GUSSING_GAME?GUESSING_GAME
?C0086. . . . . . . . . . . . . .  C ADDR   0003H   R   SEG=?PR?GAMES?GUESSING_GAME
?C0090. . . . . . . . . . . . . .  C ADDR   0012H   R   SEG=?PR?GAMES?GUESSING_GAME
?C0091. . . . . . . . . . . . . .  C ADDR   0017H   R   SEG=?PR?GAMES?GUESSING_GAME
?C0093. . . . . . . . . . . . . .  C ADDR   001CH   R   SEG=?PR?GAMES?GUESSING_GAME
?C0094. . . . . . . . . . . . . .  C ADDR   0032H   R   SEG=?PR?GUESS_ONCE?GUESSING_GAME
?C?SIDIV. . . . . . . . . . . . .  C ADDR   -----       EXT
?CO?GUESSING_GAME . . . . . . . .  C SEG    0011H       REL=UNIT
?C_INITSEG. . . . . . . . . . . .  C SEG    006FH       REL=UNIT
?DT?GUESSING_GAME . . . . . . . .  D SEG    0003H       REL=UNIT
?DT?GUESS_ONCE?GUESSING_GAME. . .  D SEG    0001H       REL=UNIT
?DT?MODE1?GUESSING_GAME . . . . .  D SEG    0002H       REL=UNIT
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    23

?GUESS_ONCE?BIT . . . . . . . . .  B ADDR   0000H.0 R   SEG=?BI?GUESS_ONCE?GUESSING_GAME
?GUESS_ONCE?BYTE. . . . . . . . .  D ADDR   0000H   R   SEG=?DT?GUESS_ONCE?GUESSING_GAME
?GUESS_ONE_LEVEL?BIT. . . . . . .  B ADDR   0000H.0 R   SEG=?BI?GUESS_ONE_LEVEL?GUESSING_GAME
?MODE1?BYTE . . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?MODE1?GUESSING_GAME
?PR?ACKNOWLEDGEMENT?GUESSING_GAME  C SEG    0003H       REL=UNIT
?PR?BEGIN_SELECT?GUESSING_GAME. .  C SEG    0006H       REL=UNIT
?PR?CHECK_DIGITS?GUESSING_GAME. .  C SEG    0027H       REL=UNIT
?PR?CORRECT?GUESSING_GAME . . . .  C SEG    0006H       REL=UNIT
?PR?ERROR?GUESSING_GAME . . . . .  C SEG    0006H       REL=UNIT
?PR?GAMES?GUESSING_GAME . . . . .  C SEG    001DH       REL=UNIT
?PR?GUESS_ONCE?GUESSING_GAME. . .  C SEG    003BH       REL=UNIT
?PR?GUESS_ONE_LEVEL?GUESSING_GAME  C SEG    0041H       REL=UNIT
?PR?GUSSING_GAME?GUESSING_GAME. .  C SEG    0023H       REL=UNIT
?PR?LOSE?GUESSING_GAME. . . . . .  C SEG    0006H       REL=UNIT
?PR?MAIN_MENU?GUESSING_GAME . . .  C SEG    0029H       REL=UNIT
?PR?MODE1?GUESSING_GAME . . . . .  C SEG    0053H       REL=UNIT
?PR?MODE2?GUESSING_GAME . . . . .  C SEG    001FH       REL=UNIT
?PR?MODE3?GUESSING_GAME . . . . .  C SEG    0033H       REL=UNIT
?PR?MODE_SELECT?GUESSING_GAME . .  C SEG    0035H       REL=UNIT
?PR?WIN?GUESSING_GAME . . . . . .  C SEG    0006H       REL=UNIT
?XD?GUESSING_GAME . . . . . . . .  X SEG    005EH       REL=UNIT
A?541 . . . . . . . . . . . . . .  B ADDR   0000H.0 R   SEG=?BI?GUESS_ONCE?GUESSING_GAME
A?645 . . . . . . . . . . . . . .  B ADDR   0000H.1 R   SEG=?BI?GUESS_ONE_LEVEL?GUESSING_GAME
AA. . . . . . . . . . . . . . . .  B ADDR   00C0H.2 A   
AC. . . . . . . . . . . . . . . .  B ADDR   00D0H.6 A   
ACC . . . . . . . . . . . . . . .  D ADDR   00E0H   A   
ACKNOWLEDGEMENT . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?ACKNOWLEDGEMENT?GUESSING_GAME
AD0BUSY . . . . . . . . . . . . .  B ADDR   00E8H.4 A   
AD0CM0. . . . . . . . . . . . . .  B ADDR   00E8H.2 A   
AD0CM1. . . . . . . . . . . . . .  B ADDR   00E8H.3 A   
AD0EN . . . . . . . . . . . . . .  B ADDR   00E8H.7 A   
AD0INT. . . . . . . . . . . . . .  B ADDR   00E8H.5 A   
AD0LJST . . . . . . . . . . . . .  B ADDR   00E8H.0 A   
AD0TM . . . . . . . . . . . . . .  B ADDR   00E8H.6 A   
AD0WINT . . . . . . . . . . . . .  B ADDR   00E8H.1 A   
ADC0CF. . . . . . . . . . . . . .  D ADDR   00BCH   A   
ADC0CN. . . . . . . . . . . . . .  D ADDR   00E8H   A   
ADC0GTH . . . . . . . . . . . . .  D ADDR   00C5H   A   
ADC0GTL . . . . . . . . . . . . .  D ADDR   00C4H   A   
ADC0H . . . . . . . . . . . . . .  D ADDR   00BFH   A   
ADC0L . . . . . . . . . . . . . .  D ADDR   00BEH   A   
ADC0LTH . . . . . . . . . . . . .  D ADDR   00C7H   A   
ADC0LTL . . . . . . . . . . . . .  D ADDR   00C6H   A   
ADC1. . . . . . . . . . . . . . .  D ADDR   009CH   A   
ADC1CF. . . . . . . . . . . . . .  D ADDR   00ABH   A   
ADC1CN. . . . . . . . . . . . . .  D ADDR   00AAH   A   
AMX0CF. . . . . . . . . . . . . .  D ADDR   00BAH   A   
AMX0SL. . . . . . . . . . . . . .  D ADDR   00BBH   A   
AMX1SL. . . . . . . . . . . . . .  D ADDR   00ACH   A   
AR6 . . . . . . . . . . . . . . .  D ADDR   0006H   A   
B . . . . . . . . . . . . . . . .  D ADDR   00F0H   A   
B?644 . . . . . . . . . . . . . .  B ADDR   0000H.0 R   SEG=?BI?GUESS_ONE_LEVEL?GUESSING_GAME
BEGIN_SELECT. . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?BEGIN_SELECT?GUESSING_GAME
BITS. . . . . . . . . . . . . . .  D ADDR   0002H   R   SEG=?DT?GUESSING_GAME
BUSY. . . . . . . . . . . . . . .  B ADDR   00C0H.7 A   
CCF0. . . . . . . . . . . . . . .  B ADDR   00D8H.0 A   
CCF1. . . . . . . . . . . . . . .  B ADDR   00D8H.1 A   
CCF2. . . . . . . . . . . . . . .  B ADDR   00D8H.2 A   
CCF3. . . . . . . . . . . . . . .  B ADDR   00D8H.3 A   
CCF4. . . . . . . . . . . . . . .  B ADDR   00D8H.4 A   
CF. . . . . . . . . . . . . . . .  B ADDR   00D8H.7 A   
CHECK_DIGITS. . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?CHECK_DIGITS?GUESSING_GAME
CKCON . . . . . . . . . . . . . .  D ADDR   008EH   A   
CORRECT . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?CORRECT?GUESSING_GAME
CPRL2 . . . . . . . . . . . . . .  B ADDR   00C8H.0 A   
CPT0CN. . . . . . . . . . . . . .  D ADDR   009EH   A   
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    24

CPT1CN. . . . . . . . . . . . . .  D ADDR   009FH   A   
CR. . . . . . . . . . . . . . . .  B ADDR   00D8H.6 A   
CT2 . . . . . . . . . . . . . . .  B ADDR   00C8H.1 A   
CY. . . . . . . . . . . . . . . .  B ADDR   00D0H.7 A   
D0. . . . . . . . . . . . . . . .  B ADDR   0080H.0 A   
D1. . . . . . . . . . . . . . . .  B ADDR   0080H.1 A   
D2. . . . . . . . . . . . . . . .  B ADDR   0080H.2 A   
D3. . . . . . . . . . . . . . . .  B ADDR   0080H.3 A   
D4. . . . . . . . . . . . . . . .  B ADDR   0080H.4 A   
D5. . . . . . . . . . . . . . . .  B ADDR   0080H.5 A   
D6. . . . . . . . . . . . . . . .  B ADDR   0080H.6 A   
D7. . . . . . . . . . . . . . . .  B ADDR   0080H.7 A   
DAC0CN. . . . . . . . . . . . . .  D ADDR   00D4H   A   
DAC0H . . . . . . . . . . . . . .  D ADDR   00D3H   A   
DAC0L . . . . . . . . . . . . . .  D ADDR   00D2H   A   
DAC1CN. . . . . . . . . . . . . .  D ADDR   00D7H   A   
DAC1H . . . . . . . . . . . . . .  D ADDR   00D6H   A   
DAC1L . . . . . . . . . . . . . .  D ADDR   00D5H   A   
DIGITS. . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?CO?GUESSING_GAME
DISPLAY_ACKNOWLEDGEMENT . . . . .  C ADDR   -----       EXT
DISPLAY_BEGIN_SELECT. . . . . . .  C ADDR   -----       EXT
DISPLAY_BITS_SELECT . . . . . . .  C ADDR   -----       EXT
DISPLAY_CORRECT . . . . . . . . .  C ADDR   -----       EXT
DISPLAY_ERROR . . . . . . . . . .  C ADDR   -----       EXT
DISPLAY_GUSSING_GAME. . . . . . .  C ADDR   -----       EXT
DISPLAY_INPUT . . . . . . . . . .  C ADDR   -----       EXT
DISPLAY_LOSE. . . . . . . . . . .  C ADDR   -----       EXT
DISPLAY_MAIN_MENU . . . . . . . .  C ADDR   -----       EXT
DISPLAY_MODE_SELECT . . . . . . .  C ADDR   -----       EXT
DISPLAY_RANDOM_DIGITS . . . . . .  C ADDR   -----       EXT
DISPLAY_TIME. . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?GUESSING_GAME
DISPLAY_TIME_SELECT . . . . . . .  C ADDR   -----       EXT
DISPLAY_WIN . . . . . . . . . . .  C ADDR   -----       EXT
DPH . . . . . . . . . . . . . . .  D ADDR   0083H   A   
DPL . . . . . . . . . . . . . . .  D ADDR   0082H   A   
EA. . . . . . . . . . . . . . . .  B ADDR   00A8H.7 A   
EIE1. . . . . . . . . . . . . . .  D ADDR   00E6H   A   
EIE2. . . . . . . . . . . . . . .  D ADDR   00E7H   A   
EIP1. . . . . . . . . . . . . . .  D ADDR   00F6H   A   
EIP2. . . . . . . . . . . . . . .  D ADDR   00F7H   A   
EMI0CF. . . . . . . . . . . . . .  D ADDR   00A3H   A   
EMI0CN. . . . . . . . . . . . . .  D ADDR   00AFH   A   
EMI0TC. . . . . . . . . . . . . .  D ADDR   00A1H   A   
ENSMB . . . . . . . . . . . . . .  B ADDR   00C0H.6 A   
ERROR . . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?ERROR?GUESSING_GAME
ES0 . . . . . . . . . . . . . . .  B ADDR   00A8H.4 A   
ET0 . . . . . . . . . . . . . . .  B ADDR   00A8H.1 A   
ET1 . . . . . . . . . . . . . . .  B ADDR   00A8H.3 A   
ET2 . . . . . . . . . . . . . . .  B ADDR   00A8H.5 A   
EX0 . . . . . . . . . . . . . . .  B ADDR   00A8H.0 A   
EX1 . . . . . . . . . . . . . . .  B ADDR   00A8H.2 A   
EXEN2 . . . . . . . . . . . . . .  B ADDR   00C8H.3 A   
EXF2. . . . . . . . . . . . . . .  B ADDR   00C8H.6 A   
F0. . . . . . . . . . . . . . . .  B ADDR   00D0H.5 A   
F1. . . . . . . . . . . . . . . .  B ADDR   00D0H.1 A   
FLACL . . . . . . . . . . . . . .  D ADDR   00B7H   A   
FLSCL . . . . . . . . . . . . . .  D ADDR   00B6H   A   
F_OR_E. . . . . . . . . . . . . .  C ADDR   -----       EXT
GAMES . . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?GAMES?GUESSING_GAME
GUESSING_GAME . . . . . . . . . .  N NUMB   -----       
GUESS_ONCE. . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?GUESS_ONCE?GUESSING_GAME
GUESS_ONE_LEVEL . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?GUESS_ONE_LEVEL?GUESSING_GAME
GUSSING_GAME. . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?GUSSING_GAME?GUESSING_GAME
I?1049. . . . . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?MODE1?GUESSING_GAME
IE. . . . . . . . . . . . . . . .  D ADDR   00A8H   A   
IE0 . . . . . . . . . . . . . . .  B ADDR   0088H.1 A   
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    25

IE1 . . . . . . . . . . . . . . .  B ADDR   0088H.3 A   
INPUTS. . . . . . . . . . . . . .  X ADDR   -----       EXT
INPUT_BITS. . . . . . . . . . . .  C ADDR   -----       EXT
INPUT_DIGITS. . . . . . . . . . .  C ADDR   -----       EXT
INPUT_DISPLAY_TIME. . . . . . . .  C ADDR   -----       EXT
IP. . . . . . . . . . . . . . . .  D ADDR   00B8H   A   
IT0 . . . . . . . . . . . . . . .  B ADDR   0088H.0 A   
IT1 . . . . . . . . . . . . . . .  B ADDR   0088H.2 A   
KSCAN . . . . . . . . . . . . . .  C ADDR   -----       EXT
LCD_EN. . . . . . . . . . . . . .  B ADDR   00A0H.7 A   
LCD_RS. . . . . . . . . . . . . .  B ADDR   00A0H.5 A   
LCD_RW. . . . . . . . . . . . . .  B ADDR   00A0H.6 A   
LEVEL_BITS. . . . . . . . . . . .  X ADDR   0014H   R   SEG=?XD?GUESSING_GAME
LEVEL_DISPLAY_TIME. . . . . . . .  X ADDR   0000H   R   SEG=?XD?GUESSING_GAME
LOSE. . . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?LOSE?GUESSING_GAME
MAIN_MENU . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?MAIN_MENU?GUESSING_GAME
MODE1 . . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?MODE1?GUESSING_GAME
MODE2 . . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?MODE2?GUESSING_GAME
MODE3 . . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?MODE3?GUESSING_GAME
MODE_SELECT . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?MODE_SELECT?GUESSING_GAME
MODF. . . . . . . . . . . . . . .  B ADDR   00F8H.5 A   
MSTEN . . . . . . . . . . . . . .  B ADDR   00F8H.1 A   
OSCICN. . . . . . . . . . . . . .  D ADDR   00B2H   A   
OSCXCN. . . . . . . . . . . . . .  D ADDR   00B1H   A   
OV. . . . . . . . . . . . . . . .  B ADDR   00D0H.2 A   
P . . . . . . . . . . . . . . . .  B ADDR   00D0H.0 A   
P0. . . . . . . . . . . . . . . .  D ADDR   0080H   A   
P0MDOUT . . . . . . . . . . . . .  D ADDR   00A4H   A   
P1. . . . . . . . . . . . . . . .  D ADDR   0090H   A   
P1MDIN. . . . . . . . . . . . . .  D ADDR   00BDH   A   
P1MDOUT . . . . . . . . . . . . .  D ADDR   00A5H   A   
P2. . . . . . . . . . . . . . . .  D ADDR   00A0H   A   
P2MDOUT . . . . . . . . . . . . .  D ADDR   00A6H   A   
P3. . . . . . . . . . . . . . . .  D ADDR   00B0H   A   
P3IF. . . . . . . . . . . . . . .  D ADDR   00ADH   A   
P3MDOUT . . . . . . . . . . . . .  D ADDR   00A7H   A   
P4. . . . . . . . . . . . . . . .  D ADDR   0084H   A   
P5. . . . . . . . . . . . . . . .  D ADDR   0085H   A   
P6. . . . . . . . . . . . . . . .  D ADDR   0086H   A   
P7. . . . . . . . . . . . . . . .  D ADDR   0096H   A   
P74OUT. . . . . . . . . . . . . .  D ADDR   00B5H   A   
PCA0CN. . . . . . . . . . . . . .  D ADDR   00D8H   A   
PCA0CPH0. . . . . . . . . . . . .  D ADDR   00FAH   A   
PCA0CPH1. . . . . . . . . . . . .  D ADDR   00FBH   A   
PCA0CPH2. . . . . . . . . . . . .  D ADDR   00FCH   A   
PCA0CPH3. . . . . . . . . . . . .  D ADDR   00FDH   A   
PCA0CPH4. . . . . . . . . . . . .  D ADDR   00FEH   A   
PCA0CPL0. . . . . . . . . . . . .  D ADDR   00EAH   A   
PCA0CPL1. . . . . . . . . . . . .  D ADDR   00EBH   A   
PCA0CPL2. . . . . . . . . . . . .  D ADDR   00ECH   A   
PCA0CPL3. . . . . . . . . . . . .  D ADDR   00EDH   A   
PCA0CPL4. . . . . . . . . . . . .  D ADDR   00EEH   A   
PCA0CPM0. . . . . . . . . . . . .  D ADDR   00DAH   A   
PCA0CPM1. . . . . . . . . . . . .  D ADDR   00DBH   A   
PCA0CPM2. . . . . . . . . . . . .  D ADDR   00DCH   A   
PCA0CPM3. . . . . . . . . . . . .  D ADDR   00DDH   A   
PCA0CPM4. . . . . . . . . . . . .  D ADDR   00DEH   A   
PCA0H . . . . . . . . . . . . . .  D ADDR   00F9H   A   
PCA0L . . . . . . . . . . . . . .  D ADDR   00E9H   A   
PCA0MD. . . . . . . . . . . . . .  D ADDR   00D9H   A   
PCON. . . . . . . . . . . . . . .  D ADDR   0087H   A   
PS. . . . . . . . . . . . . . . .  B ADDR   00B8H.4 A   
PSCTL . . . . . . . . . . . . . .  D ADDR   008FH   A   
PSW . . . . . . . . . . . . . . .  D ADDR   00D0H   A   
PT0 . . . . . . . . . . . . . . .  B ADDR   00B8H.1 A   
PT1 . . . . . . . . . . . . . . .  B ADDR   00B8H.3 A   
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    26

PT2 . . . . . . . . . . . . . . .  B ADDR   00B8H.5 A   
PX0 . . . . . . . . . . . . . . .  B ADDR   00B8H.0 A   
PX1 . . . . . . . . . . . . . . .  B ADDR   00B8H.2 A   
RAND. . . . . . . . . . . . . . .  C ADDR   -----       EXT
RANDOM_DIGITS . . . . . . . . . .  X ADDR   001EH   R   SEG=?XD?GUESSING_GAME
RB80. . . . . . . . . . . . . . .  B ADDR   0098H.2 A   
RCAP2H. . . . . . . . . . . . . .  D ADDR   00CBH   A   
RCAP2L. . . . . . . . . . . . . .  D ADDR   00CAH   A   
RCAP4H. . . . . . . . . . . . . .  D ADDR   00E5H   A   
RCAP4L. . . . . . . . . . . . . .  D ADDR   00E4H   A   
RCLK0 . . . . . . . . . . . . . .  B ADDR   00C8H.5 A   
REF0CN. . . . . . . . . . . . . .  D ADDR   00D1H   A   
REN0. . . . . . . . . . . . . . .  B ADDR   0098H.4 A   
RI0 . . . . . . . . . . . . . . .  B ADDR   0098H.0 A   
RS0 . . . . . . . . . . . . . . .  B ADDR   00D0H.3 A   
RS1 . . . . . . . . . . . . . . .  B ADDR   00D0H.4 A   
RSTSRC. . . . . . . . . . . . . .  D ADDR   00EFH   A   
RXOVRN. . . . . . . . . . . . . .  B ADDR   00F8H.4 A   
SADDR0. . . . . . . . . . . . . .  D ADDR   00A9H   A   
SADDR1. . . . . . . . . . . . . .  D ADDR   00F3H   A   
SADEN0. . . . . . . . . . . . . .  D ADDR   00B9H   A   
SADEN1. . . . . . . . . . . . . .  D ADDR   00AEH   A   
SBUF0 . . . . . . . . . . . . . .  D ADDR   0099H   A   
SBUF1 . . . . . . . . . . . . . .  D ADDR   00F2H   A   
SCON0 . . . . . . . . . . . . . .  D ADDR   0098H   A   
SCON1 . . . . . . . . . . . . . .  D ADDR   00F1H   A   
SI. . . . . . . . . . . . . . . .  B ADDR   00C0H.3 A   
SLVSEL. . . . . . . . . . . . . .  B ADDR   00F8H.2 A   
SM00. . . . . . . . . . . . . . .  B ADDR   0098H.7 A   
SM10. . . . . . . . . . . . . . .  B ADDR   0098H.6 A   
SM20. . . . . . . . . . . . . . .  B ADDR   0098H.5 A   
SMB0ADR . . . . . . . . . . . . .  D ADDR   00C3H   A   
SMB0CN. . . . . . . . . . . . . .  D ADDR   00C0H   A   
SMB0CR. . . . . . . . . . . . . .  D ADDR   00CFH   A   
SMB0DAT . . . . . . . . . . . . .  D ADDR   00C2H   A   
SMB0STA . . . . . . . . . . . . .  D ADDR   00C1H   A   
SMBFTE. . . . . . . . . . . . . .  B ADDR   00C0H.1 A   
SMBTOE. . . . . . . . . . . . . .  B ADDR   00C0H.0 A   
SP. . . . . . . . . . . . . . . .  D ADDR   0081H   A   
SPI0CFG . . . . . . . . . . . . .  D ADDR   009AH   A   
SPI0CKR . . . . . . . . . . . . .  D ADDR   009DH   A   
SPI0CN. . . . . . . . . . . . . .  D ADDR   00F8H   A   
SPI0DAT . . . . . . . . . . . . .  D ADDR   009BH   A   
SPIEN . . . . . . . . . . . . . .  B ADDR   00F8H.0 A   
SPIF. . . . . . . . . . . . . . .  B ADDR   00F8H.7 A   
STA . . . . . . . . . . . . . . .  B ADDR   00C0H.5 A   
STATE?1050. . . . . . . . . . . .  D ADDR   0001H   R   SEG=?DT?MODE1?GUESSING_GAME
STATE?543 . . . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?GUESS_ONCE?GUESSING_GAME
STO . . . . . . . . . . . . . . .  B ADDR   00C0H.4 A   
T2CON . . . . . . . . . . . . . .  D ADDR   00C8H   A   
T4CON . . . . . . . . . . . . . .  D ADDR   00C9H   A   
TB80. . . . . . . . . . . . . . .  B ADDR   0098H.3 A   
TCLK0 . . . . . . . . . . . . . .  B ADDR   00C8H.4 A   
TCON. . . . . . . . . . . . . . .  D ADDR   0088H   A   
TEMP?542. . . . . . . . . . . . .  B ADDR   0000H.1 R   SEG=?BI?GUESS_ONCE?GUESSING_GAME
TF0 . . . . . . . . . . . . . . .  B ADDR   0088H.5 A   
TF1 . . . . . . . . . . . . . . .  B ADDR   0088H.7 A   
TF2 . . . . . . . . . . . . . . .  B ADDR   00C8H.7 A   
TH0 . . . . . . . . . . . . . . .  D ADDR   008CH   A   
TH1 . . . . . . . . . . . . . . .  D ADDR   008DH   A   
TH2 . . . . . . . . . . . . . . .  D ADDR   00CDH   A   
TH4 . . . . . . . . . . . . . . .  D ADDR   00F5H   A   
TI0 . . . . . . . . . . . . . . .  B ADDR   0098H.1 A   
TL0 . . . . . . . . . . . . . . .  D ADDR   008AH   A   
TL1 . . . . . . . . . . . . . . .  D ADDR   008BH   A   
TL2 . . . . . . . . . . . . . . .  D ADDR   00CCH   A   
A51 MACRO ASSEMBLER  GUESSING_GAME                                                        12/22/2023 09:21:57 PAGE    27

TL4 . . . . . . . . . . . . . . .  D ADDR   00F4H   A   
TMOD. . . . . . . . . . . . . . .  D ADDR   0089H   A   
TMR3CN. . . . . . . . . . . . . .  D ADDR   0091H   A   
TMR3H . . . . . . . . . . . . . .  D ADDR   0095H   A   
TMR3L . . . . . . . . . . . . . .  D ADDR   0094H   A   
TMR3RLH . . . . . . . . . . . . .  D ADDR   0093H   A   
TMR3RLL . . . . . . . . . . . . .  D ADDR   0092H   A   
TR0 . . . . . . . . . . . . . . .  B ADDR   0088H.4 A   
TR1 . . . . . . . . . . . . . . .  B ADDR   0088H.6 A   
TR2 . . . . . . . . . . . . . . .  B ADDR   00C8H.2 A   
TXBSY . . . . . . . . . . . . . .  B ADDR   00F8H.3 A   
WCOL. . . . . . . . . . . . . . .  B ADDR   00F8H.6 A   
WDTCN . . . . . . . . . . . . . .  D ADDR   00FFH   A   
WIN . . . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?WIN?GUESSING_GAME
XBR0. . . . . . . . . . . . . . .  D ADDR   00E1H   A   
XBR1. . . . . . . . . . . . . . .  D ADDR   00E2H   A   
XBR2. . . . . . . . . . . . . . .  D ADDR   00E3H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
